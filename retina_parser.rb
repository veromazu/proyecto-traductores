#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"

require_relative 'retina_ast'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
           " LÃ­nea #{@token.position[0]}, Column #{@token.position[1]}: token inesperado : #{@token.symbol} : #{@token.id}"
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 265)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
    if ((token = @lexer.next_token)!=nil)
        return [token.symbol,token]
    else 
        return nil
    end

end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    58,    59,    60,    61,    37,   -16,    32,    44,    45,    34,
    66,     5,    65,    35,    36,    37,    33,    32,    43,    74,
    34,    37,     6,    32,    35,    36,    34,    33,    44,    45,
    35,    36,    93,    33,    72,    67,    71,    70,    69,    68,
    94,   -16,    64,    63,    62,    95,    60,    61,    73,   134,
    15,    53,   208,    94,    37,    73,    32,   130,     7,    34,
    94,    15,    53,    35,    36,   151,    33,    15,    53,    37,
   152,    32,    44,    45,    34,     5,   209,    10,    35,    36,
    37,    33,    32,   187,    94,    34,    64,    63,    62,    35,
    36,   227,    33,    44,    45,    11,   228,    14,    13,    30,
    15,    53,    27,    28,    29,    39,    20,    21,    22,    44,
    45,    40,    37,    10,    32,    15,    53,    34,    44,    45,
    56,    35,    36,    10,    33,    85,    15,    44,    45,    14,
    13,    30,    86,    87,    27,    28,    29,    88,    20,    21,
    22,    10,    37,    92,    32,    74,   118,    34,   122,    10,
   124,    35,    36,   127,    33,   129,   132,   133,    15,    14,
    13,    30,   140,   141,    27,    28,    29,   142,    20,    21,
    22,    37,   143,    32,    10,   148,    34,    37,   150,    32,
    35,    36,    34,    33,   153,   156,    35,    36,    15,    33,
    37,   130,    32,   157,   159,    34,    37,   160,    32,    35,
    36,    34,    33,   183,   184,    35,    36,    10,    33,    37,
   193,    32,    10,   199,    34,   201,   202,    76,    35,    36,
    37,    33,    32,    76,   203,    34,   204,   205,   207,    35,
    36,   211,    33,   215,   217,    37,    76,    32,   222,   223,
    34,    37,    76,    32,    35,    36,    34,    33,   224,   226,
    35,    36,    37,    33,    32,    76,   229,    34,    37,   230,
    32,    35,    36,    34,    33,   231,    76,    35,    36,   233,
    33,   234,   237,    37,   238,    32,   239,   241,    34,   242,
   nil,    76,    35,    36,    37,    33,    32,    76,   nil,    34,
    37,   nil,    32,    35,    36,    34,    33,   nil,    76,    35,
    36,    37,    33,    32,    76,   nil,    34,   nil,   nil,   nil,
    35,    36,    37,    33,    32,   nil,   nil,    34,   nil,    76,
   nil,    35,    36,    37,    33,    32,   nil,   nil,    34,    37,
    76,    32,    35,    36,    34,    33,    76,   nil,    35,    36,
    37,    33,    32,   nil,   nil,    34,   nil,    76,   nil,    35,
    36,    37,    33,    32,   nil,   nil,    34,   nil,    76,   nil,
    35,    36,    37,    33,    32,    60,    61,    34,    37,    76,
    32,    35,    36,    34,    33,    76,   nil,    35,    36,    37,
    33,    32,   nil,   nil,    34,   nil,    76,   nil,    35,    36,
    37,    33,    32,   nil,   nil,    34,   115,    76,   nil,    35,
    36,   nil,    33,   nil,   nil,    64,    63,    62,    76,   nil,
   nil,    37,   nil,    32,    76,   nil,    34,   nil,   nil,   nil,
    35,    36,   nil,    33,   nil,    15,   nil,   126,    14,    13,
    30,   nil,   nil,    27,    28,    29,    76,    20,    21,    22,
   nil,    37,   nil,    32,   nil,   nil,    34,   nil,   nil,   nil,
    35,    36,   nil,    33,   nil,   nil,   nil,    15,    14,    13,
    30,   nil,   nil,    27,    28,    29,   nil,    20,    21,    22,
    37,   nil,    32,   nil,   nil,    34,    37,   nil,    32,    35,
    36,    34,    33,   nil,   nil,    35,    36,    15,    33,   nil,
   nil,   nil,   nil,    14,    13,    30,   nil,   nil,    27,    28,
    29,   nil,    20,    21,    22,   nil,   nil,   nil,    37,   nil,
    32,   nil,   nil,    34,   nil,   nil,    76,    35,    36,   nil,
    33,   nil,    15,   nil,   nil,    14,    13,    30,   nil,   nil,
    27,    28,    29,   nil,    20,    21,    22,    37,   nil,    32,
   nil,   nil,    34,    37,   nil,    32,    35,    36,    34,    33,
   nil,   nil,    35,    36,    15,    33,   nil,   nil,    37,   nil,
    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,   nil,    14,    13,    30,   nil,   nil,
    27,    28,    29,    76,    20,    21,    22,   nil,    37,    76,
    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,    15,   164,   163,   180,   nil,   nil,
   177,   178,   179,   nil,   171,   172,   173,   nil,    37,   nil,
    32,   168,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,    15,   164,   163,   180,   nil,   nil,
   177,   178,   179,   nil,   171,   172,   173,   nil,    37,   nil,
    32,   168,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,    15,   164,   163,   180,   nil,   nil,
   177,   178,   179,   nil,   171,   172,   173,    37,   nil,    32,
   nil,   168,    34,    37,   nil,    32,    35,    36,    34,    33,
   nil,   nil,    35,    36,    15,    33,    37,   nil,    32,   nil,
   nil,    34,    37,   nil,    32,    35,    36,    34,    33,   nil,
   nil,    35,    36,   nil,    33,    37,   nil,    32,   nil,   nil,
    34,   nil,   nil,    76,    35,    36,   nil,    33,    37,    76,
    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,    76,   nil,   nil,    14,    13,    30,    76,   nil,
    27,    28,    29,   nil,    20,    21,    22,   nil,    37,   nil,
    32,    76,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,    15,   164,   163,   180,   nil,   nil,
   177,   178,   179,   nil,   171,   172,   173,   nil,    37,   nil,
    32,   168,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,    15,   164,   163,   180,   nil,   nil,
   177,   178,   179,   nil,   171,   172,   173,    37,   nil,    32,
   nil,   168,    34,    37,   nil,    32,    35,    36,    34,    33,
   nil,   nil,    35,    36,    15,    33,   nil,   nil,   nil,   nil,
   164,   163,   180,   nil,   nil,   177,   178,   179,   nil,   171,
   172,   173,   nil,   nil,   nil,    37,   168,    32,   nil,   nil,
    34,   nil,   nil,    76,    35,    36,   nil,    33,   nil,    15,
   nil,   nil,   164,   163,   180,   nil,   nil,   177,   178,   179,
   nil,   171,   172,   173,    37,   nil,    32,   nil,   168,    34,
    37,   nil,    32,    35,    36,    34,    33,   nil,   nil,    35,
    36,    15,    33,   nil,   nil,   nil,   nil,   164,   163,   180,
   nil,   nil,   177,   178,   179,   nil,   171,   172,   173,   nil,
   nil,   nil,    37,   168,    32,   nil,   nil,    34,   nil,   nil,
    76,    35,    36,   nil,    33,   nil,    15,   nil,   nil,   164,
   163,   180,   nil,   nil,   177,   178,   179,   nil,   171,   172,
   173,    58,    59,    60,    61,   168,   nil,   nil,   nil,   nil,
   nil,    66,   nil,    65,    58,    59,    60,    61,    15,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    72,    67,    71,    70,    69,
    68,   nil,    57,    64,    63,    62,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,   nil,    64,    63,    62,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,
   nil,    65,   nil,   nil,   nil,   nil,   117,   nil,   nil,   nil,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    66,   nil,    65,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,   119,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,
   nil,   nil,    64,    63,    62,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,    58,    59,
    60,    61,   nil,   121,   120,   nil,   nil,   nil,    66,   nil,
    65,   nil,   nil,   nil,   nil,    58,    59,    60,    61,    72,
    67,    71,    70,    69,    68,    66,   nil,    64,    63,    62,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,   nil,
    64,    63,    62,    58,    59,    60,    61,   nil,   nil,    72,
    67,    71,    70,    69,    68,   nil,   nil,    64,    63,    62,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    58,    59,    60,    61,   nil,   nil,    72,    67,    71,
    70,    69,    68,   nil,   nil,    64,    63,    62,    58,    59,
    60,    61,   nil,   nil,  -100,  -100,  -100,  -100,  -100,  -100,
   nil,   nil,    64,    63,    62,  -100,  -100,  -100,  -100,  -100,
  -100,   nil,   nil,    64,    63,    62,    58,    59,    60,    61,
   nil,   nil,  -100,  -100,  -100,  -100,  -100,  -100,   nil,   nil,
    64,    63,    62,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    58,    59,    60,    61,   nil,   nil,
  -100,  -100,  -100,  -100,  -100,  -100,   nil,   nil,    64,    63,
    62,   nil,   nil,   nil,   nil,   nil,   nil,  -100,  -100,  -100,
  -100,  -100,  -100,   nil,   nil,    64,    63,    62,  -100,  -100,
  -100,  -100,  -100,  -100,   nil,   nil,    64,    63,    62,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,
   nil,    65,   nil,   nil,   nil,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,
   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,   149,   nil,   nil,   nil,   nil,    72,
    67,    71,    70,    69,    68,   nil,   nil,    64,    63,    62,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    66,   nil,    65,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,   nil,
   182,   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,
   nil,   nil,    64,    63,    62,   nil,   nil,    72,    67,    71,
    70,    69,    68,   nil,   194,    64,    63,    62,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    65,    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,    65,   nil,   nil,   nil,   nil,   210,   nil,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,   206,
    64,    63,    62,   nil,   nil,    72,    67,    71,    70,    69,
    68,   nil,   nil,    64,    63,    62,    58,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,
   212,    65,   nil,   nil,   nil,   nil,   nil,   nil,   213,   nil,
    72,    67,    71,    70,    69,    68,   nil,   nil,    64,    63,
    62,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,    58,    59,    60,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    66,   nil,    65,   nil,   nil,   nil,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,   nil,    64,    63,    62,   225,
   nil,   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,
   nil,   nil,    64,    63,    62,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,    72,
    67,    71,    70,    69,    68,   nil,   nil,    64,    63,    62 ]

racc_action_check = [
   116,   116,   116,   116,    21,    15,    21,    14,    14,    21,
   116,     0,   116,    21,    21,    22,    21,    22,    14,    26,
    22,    94,     1,    94,    22,    22,    94,    22,    39,    39,
    94,    94,    49,    94,   116,   116,   116,   116,   116,   116,
    49,    15,   116,   116,   116,    55,    96,    96,    91,   116,
    21,    21,   191,    55,   172,    26,   172,    91,     3,   172,
   191,    22,    22,   172,   172,   138,   172,    94,    94,   173,
   138,   173,   164,   164,   173,     4,   192,     5,   173,   173,
     7,   173,     7,   164,   192,     7,    96,    96,    96,     7,
     7,   221,     7,    89,    89,     6,   221,     7,     7,     7,
   172,   172,     7,     7,     7,     9,     7,     7,     7,   129,
   129,    12,    13,    20,    13,   173,   173,    13,   140,   140,
    24,    13,    13,    28,    13,    40,     7,   141,   141,    13,
    13,    13,    41,    42,    13,    13,    13,    43,    13,    13,
    13,    46,    16,    48,    16,    54,    77,    16,    83,    84,
    86,    16,    16,    88,    16,    90,   111,   114,    13,    16,
    16,    16,   122,   123,    16,    16,    16,   125,    16,    16,
    16,    27,   126,    27,   130,   135,    27,    29,   137,    29,
    27,    27,    29,    27,   139,   142,    29,    29,    16,    29,
    30,   145,    30,   148,   150,    30,    32,   151,    32,    30,
    30,    32,    30,   161,   162,    32,    32,   171,    32,    33,
   175,    33,   178,   181,    33,   183,   184,    27,    33,    33,
    34,    33,    34,    29,   185,    34,   186,   187,   190,    34,
    34,   196,    34,   203,   205,    58,    30,    58,   214,   216,
    58,    59,    32,    59,    58,    58,    59,    58,   218,   220,
    59,    59,    60,    59,    60,    33,   222,    60,    61,   223,
    61,    60,    60,    61,    60,   224,    34,    61,    61,   226,
    61,   227,   235,    62,   236,    62,   237,   240,    62,   241,
   nil,    58,    62,    62,    63,    62,    63,    59,   nil,    63,
    64,   nil,    64,    63,    63,    64,    63,   nil,    60,    64,
    64,    65,    64,    65,    61,   nil,    65,   nil,   nil,   nil,
    65,    65,    66,    65,    66,   nil,   nil,    66,   nil,    62,
   nil,    66,    66,    67,    66,    67,   nil,   nil,    67,    68,
    63,    68,    67,    67,    68,    67,    64,   nil,    68,    68,
    69,    68,    69,   nil,   nil,    69,   nil,    65,   nil,    69,
    69,    70,    69,    70,   nil,   nil,    70,   nil,    66,   nil,
    70,    70,    71,    70,    71,    97,    97,    71,    72,    67,
    72,    71,    71,    72,    71,    68,   nil,    72,    72,    73,
    72,    73,   nil,   nil,    73,   nil,    69,   nil,    73,    73,
    74,    73,    74,   nil,   nil,    74,    74,    70,   nil,    74,
    74,   nil,    74,   nil,   nil,    97,    97,    97,    71,   nil,
   nil,    87,   nil,    87,    72,   nil,    87,   nil,   nil,   nil,
    87,    87,   nil,    87,   nil,    73,   nil,    87,    87,    87,
    87,   nil,   nil,    87,    87,    87,    74,    87,    87,    87,
   nil,   117,   nil,   117,   nil,   nil,   117,   nil,   nil,   nil,
   117,   117,   nil,   117,   nil,   nil,   nil,    87,   117,   117,
   117,   nil,   nil,   117,   117,   117,   nil,   117,   117,   117,
   118,   nil,   118,   nil,   nil,   118,   119,   nil,   119,   118,
   118,   119,   118,   nil,   nil,   119,   119,   117,   119,   nil,
   nil,   nil,   nil,   119,   119,   119,   nil,   nil,   119,   119,
   119,   nil,   119,   119,   119,   nil,   nil,   nil,   120,   nil,
   120,   nil,   nil,   120,   nil,   nil,   118,   120,   120,   nil,
   120,   nil,   119,   nil,   nil,   120,   120,   120,   nil,   nil,
   120,   120,   120,   nil,   120,   120,   120,   134,   nil,   134,
   nil,   nil,   134,   149,   nil,   149,   134,   134,   149,   134,
   nil,   nil,   149,   149,   120,   149,   nil,   nil,   152,   nil,
   152,   nil,   nil,   152,   nil,   nil,   nil,   152,   152,   nil,
   152,   nil,   nil,   nil,   nil,   152,   152,   152,   nil,   nil,
   152,   152,   152,   134,   152,   152,   152,   nil,   153,   149,
   153,   nil,   nil,   153,   nil,   nil,   nil,   153,   153,   nil,
   153,   nil,   nil,   nil,   152,   153,   153,   153,   nil,   nil,
   153,   153,   153,   nil,   153,   153,   153,   nil,   163,   nil,
   163,   153,   nil,   163,   nil,   nil,   nil,   163,   163,   nil,
   163,   nil,   nil,   nil,   153,   163,   163,   163,   nil,   nil,
   163,   163,   163,   nil,   163,   163,   163,   nil,   166,   nil,
   166,   163,   nil,   166,   nil,   nil,   nil,   166,   166,   nil,
   166,   nil,   nil,   nil,   163,   166,   166,   166,   nil,   nil,
   166,   166,   166,   nil,   166,   166,   166,   168,   nil,   168,
   nil,   166,   168,   177,   nil,   177,   168,   168,   177,   168,
   nil,   nil,   177,   177,   166,   177,   179,   nil,   179,   nil,
   nil,   179,   180,   nil,   180,   179,   179,   180,   179,   nil,
   nil,   180,   180,   nil,   180,   182,   nil,   182,   nil,   nil,
   182,   nil,   nil,   168,   182,   182,   nil,   182,   199,   177,
   199,   nil,   nil,   199,   nil,   nil,   nil,   199,   199,   nil,
   199,   nil,   179,   nil,   nil,   199,   199,   199,   180,   nil,
   199,   199,   199,   nil,   199,   199,   199,   nil,   204,   nil,
   204,   182,   nil,   204,   nil,   nil,   nil,   204,   204,   nil,
   204,   nil,   nil,   nil,   199,   204,   204,   204,   nil,   nil,
   204,   204,   204,   nil,   204,   204,   204,   nil,   210,   nil,
   210,   204,   nil,   210,   nil,   nil,   nil,   210,   210,   nil,
   210,   nil,   nil,   nil,   204,   210,   210,   210,   nil,   nil,
   210,   210,   210,   nil,   210,   210,   210,   211,   nil,   211,
   nil,   210,   211,   212,   nil,   212,   211,   211,   212,   211,
   nil,   nil,   212,   212,   210,   212,   nil,   nil,   nil,   nil,
   212,   212,   212,   nil,   nil,   212,   212,   212,   nil,   212,
   212,   212,   nil,   nil,   nil,   213,   212,   213,   nil,   nil,
   213,   nil,   nil,   211,   213,   213,   nil,   213,   nil,   212,
   nil,   nil,   213,   213,   213,   nil,   nil,   213,   213,   213,
   nil,   213,   213,   213,   225,   nil,   225,   nil,   213,   225,
   228,   nil,   228,   225,   225,   228,   225,   nil,   nil,   228,
   228,   213,   228,   nil,   nil,   nil,   nil,   228,   228,   228,
   nil,   nil,   228,   228,   228,   nil,   228,   228,   228,   nil,
   nil,   nil,   238,   228,   238,   nil,   nil,   238,   nil,   nil,
   225,   238,   238,   nil,   238,   nil,   228,   nil,   nil,   238,
   238,   238,   nil,   nil,   238,   238,   238,   nil,   238,   238,
   238,    25,    25,    25,    25,   238,   nil,   nil,   nil,   nil,
   nil,    25,   nil,    25,    50,    50,    50,    50,   238,   nil,
   nil,   nil,   nil,   nil,    50,   nil,    50,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    25,    25,    25,    25,    25,
    25,   nil,    25,    25,    25,    25,   nil,   nil,    50,    50,
    50,    50,    50,    50,   nil,   nil,    50,    50,    50,    75,
    75,    75,    75,   nil,   nil,   nil,   nil,   nil,   nil,    75,
   nil,    75,   nil,   nil,   nil,   nil,    75,   nil,   nil,   nil,
    78,    78,    78,    78,   nil,   nil,   nil,   nil,   nil,   nil,
    78,   nil,    78,    75,    75,    75,    75,    75,    75,   nil,
   nil,    75,    75,    75,    78,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    78,    78,    78,    78,    78,    78,
   nil,   nil,    78,    78,    78,    79,    79,    79,    79,   nil,
   nil,   nil,   nil,   nil,   nil,    79,   nil,    79,    82,    82,
    82,    82,   nil,    82,    79,   nil,   nil,   nil,    82,   nil,
    82,   nil,   nil,   nil,   nil,   103,   103,   103,   103,    79,
    79,    79,    79,    79,    79,   103,   nil,    79,    79,    79,
   nil,   nil,    82,    82,    82,    82,    82,    82,   nil,   nil,
    82,    82,    82,   104,   104,   104,   104,   nil,   nil,   103,
   103,   103,   103,   103,   103,   nil,   nil,   103,   103,   103,
   105,   105,   105,   105,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   106,   106,   106,   106,   nil,   nil,   104,   104,   104,
   104,   104,   104,   nil,   nil,   104,   104,   104,   107,   107,
   107,   107,   nil,   nil,   105,   105,   105,   105,   105,   105,
   nil,   nil,   105,   105,   105,   106,   106,   106,   106,   106,
   106,   nil,   nil,   106,   106,   106,   108,   108,   108,   108,
   nil,   nil,   107,   107,   107,   107,   107,   107,   nil,   nil,
   107,   107,   107,   109,   109,   109,   109,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   110,   110,   110,   110,   nil,   nil,
   108,   108,   108,   108,   108,   108,   nil,   nil,   108,   108,
   108,   nil,   nil,   nil,   nil,   nil,   nil,   109,   109,   109,
   109,   109,   109,   nil,   nil,   109,   109,   109,   110,   110,
   110,   110,   110,   110,   nil,   nil,   110,   110,   110,   112,
   112,   112,   112,   nil,   nil,   nil,   nil,   nil,   nil,   112,
   nil,   112,   nil,   nil,   nil,   136,   136,   136,   136,   nil,
   nil,   nil,   nil,   nil,   nil,   136,   nil,   136,   nil,   nil,
   nil,   nil,   nil,   112,   112,   112,   112,   112,   112,   nil,
   nil,   112,   112,   112,   136,   nil,   nil,   nil,   nil,   136,
   136,   136,   136,   136,   136,   nil,   nil,   136,   136,   136,
   158,   158,   158,   158,   nil,   nil,   nil,   nil,   nil,   nil,
   158,   nil,   158,   176,   176,   176,   176,   nil,   nil,   nil,
   nil,   nil,   nil,   176,   nil,   176,   nil,   nil,   nil,   nil,
   158,   nil,   nil,   nil,   158,   158,   158,   158,   158,   158,
   nil,   nil,   158,   158,   158,   nil,   nil,   176,   176,   176,
   176,   176,   176,   nil,   176,   176,   176,   176,   189,   189,
   189,   189,   nil,   nil,   nil,   nil,   nil,   nil,   189,   nil,
   189,   195,   195,   195,   195,   nil,   nil,   nil,   nil,   nil,
   nil,   195,   nil,   195,   nil,   nil,   nil,   nil,   195,   nil,
   nil,   nil,   189,   189,   189,   189,   189,   189,   nil,   189,
   189,   189,   189,   nil,   nil,   195,   195,   195,   195,   195,
   195,   nil,   nil,   195,   195,   195,   197,   197,   197,   197,
   nil,   nil,   nil,   nil,   nil,   nil,   197,   nil,   197,   198,
   198,   198,   198,   nil,   nil,   nil,   nil,   nil,   nil,   198,
   197,   198,   nil,   nil,   nil,   nil,   nil,   nil,   198,   nil,
   197,   197,   197,   197,   197,   197,   nil,   nil,   197,   197,
   197,   nil,   nil,   198,   198,   198,   198,   198,   198,   nil,
   nil,   198,   198,   198,   200,   200,   200,   200,   nil,   nil,
   nil,   nil,   nil,   nil,   200,   nil,   200,   nil,   nil,   nil,
   219,   219,   219,   219,   nil,   nil,   nil,   nil,   nil,   nil,
   219,   nil,   219,   nil,   nil,   nil,   nil,   nil,   200,   200,
   200,   200,   200,   200,   nil,   nil,   200,   200,   200,   219,
   nil,   nil,   nil,   nil,   219,   219,   219,   219,   219,   219,
   nil,   nil,   219,   219,   219,   232,   232,   232,   232,   nil,
   nil,   nil,   nil,   nil,   nil,   232,   nil,   232,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   232,   nil,   nil,   nil,   232,
   232,   232,   232,   232,   232,   nil,   nil,   232,   232,   232 ]

racc_action_pointer = [
   -23,    22,   nil,    42,    41,    29,    95,    78,   nil,    98,
   nil,   nil,    93,   110,    -2,    -2,   140,   nil,   nil,   nil,
    65,     2,    13,   nil,    76,   948,    12,   169,    75,   175,
   188,   nil,   194,   207,   218,   nil,   nil,   nil,   nil,    19,
    81,   114,   113,   119,   nil,   nil,    93,   nil,    99,   -12,
   961,   nil,   nil,   nil,   138,     1,   nil,   nil,   233,   239,
   250,   256,   271,   282,   288,   299,   310,   321,   327,   338,
   349,   360,   366,   377,   388,  1006,   nil,   115,  1027,  1072,
   nil,   nil,  1085,   140,   101,   nil,   106,   409,   109,    84,
   111,     5,   nil,   nil,    19,   nil,    41,   360,   nil,   nil,
   nil,   nil,   nil,  1102,  1130,  1147,  1158,  1175,  1203,  1220,
  1231,   112,  1276,   nil,   149,   nil,    -3,   439,   468,   474,
   506,   nil,   126,   111,   nil,   149,   128,   nil,   nil,   100,
   126,   nil,   nil,   nil,   535,   157,  1292,   160,    47,   167,
   109,   118,   141,   nil,   nil,   139,   nil,   nil,   149,   541,
   150,   153,   556,   586,   nil,   nil,   nil,   nil,  1337,   nil,
   nil,   185,   186,   616,    63,   nil,   646,   nil,   675,   nil,
   nil,   159,    52,    67,   nil,   166,  1350,   681,   164,   694,
   700,   193,   713,   171,   172,   206,   206,   209,   nil,  1395,
   184,     8,    32,   nil,   nil,  1408,   200,  1453,  1466,   726,
  1511,   nil,   nil,   189,   756,   190,   nil,   nil,   nil,   nil,
   786,   815,   821,   853,   220,   nil,   221,   nil,   230,  1527,
   231,    73,   212,   215,   221,   882,   225,   227,   888,   nil,
   nil,   nil,  1572,   nil,   nil,   254,   254,   232,   920,   nil,
   259,   235,   nil ]

racc_action_default = [
    -3,  -100,    -1,  -100,    -3,  -100,  -100,  -100,    -4,  -100,
   -16,   243,  -100,  -100,  -100,   -98,   -41,   -43,   -44,   -45,
  -100,  -100,  -100,   -49,  -100,  -100,  -100,  -100,  -100,  -100,
  -100,   -76,  -100,  -100,  -100,   -95,   -96,   -97,   -99,   -13,
  -100,  -100,  -100,  -100,   -17,   -18,  -100,   -42,  -100,  -100,
   -52,   -53,   -54,   -56,  -100,  -100,   -50,   -51,  -100,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,   -98,  -100,  -100,  -100,
   -84,   -85,  -100,  -100,  -100,    -2,  -100,  -100,  -100,   -19,
  -100,   -23,   -46,   -47,  -100,   -48,   -77,   -78,   -79,   -80,
   -81,   -82,   -83,   -87,   -88,   -89,   -90,   -91,   -92,   -93,
   -94,  -100,   -58,   -59,  -100,   -73,   -74,  -100,  -100,  -100,
  -100,   -86,   -25,   -14,    -6,  -100,  -100,    -9,   -20,   -21,
  -100,   -55,   -57,   -72,  -100,  -100,  -100,  -100,  -100,  -100,
  -100,   -13,  -100,    -8,   -22,   -23,   -24,   -75,  -100,  -100,
  -100,  -100,  -100,   -27,   -26,   -15,    -7,   -60,   -66,   -62,
   -68,  -100,  -100,  -100,  -100,   -28,   -29,   -31,  -100,   -33,
   -34,  -100,  -100,  -100,   -38,  -100,  -100,  -100,  -100,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,   -30,  -100,
  -100,  -100,  -100,   -39,   -40,  -100,  -100,  -100,  -100,  -100,
   -67,   -69,    -5,  -100,   -27,  -100,   -32,   -35,   -36,   -37,
  -100,  -100,  -100,  -100,  -100,   -10,  -100,   -12,  -100,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,   -61,
   -11,   -63,   -66,   -65,   -70,  -100,  -100,  -100,  -100,   -71,
  -100,  -100,   -64 ]

racc_goto_table = [
    50,    50,    83,    42,    89,    84,    75,    90,    78,    79,
    12,    80,    81,    82,   185,   114,    41,   188,   181,    47,
   162,     1,    52,    52,     3,    49,    55,     2,     8,   139,
   111,   nil,   nil,   nil,   nil,   nil,   nil,    96,    97,    98,
    99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   112,   116,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   218,   nil,   220,   221,   nil,   nil,   nil,   nil,   nil,
   nil,   216,   nil,    50,   113,   147,   nil,   nil,   128,   235,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   240,
   125,   146,   236,   nil,   nil,    52,   nil,   136,   131,   nil,
   nil,   nil,   nil,   nil,   155,   nil,   154,    84,   nil,   nil,
   nil,   169,   nil,   116,   nil,   nil,   nil,   nil,   144,   nil,
   135,   169,   137,   138,   169,   nil,   nil,   nil,   158,   nil,
   nil,   nil,   176,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   176,   nil,   nil,   176,   nil,   189,   nil,   nil,
   nil,    50,    50,   186,   175,   161,   195,   nil,   197,   198,
   nil,   200,   169,   nil,   175,     9,   nil,   175,   169,   nil,
   169,   169,   nil,    52,    52,   nil,   191,   192,   nil,   nil,
    48,    54,    54,   176,   nil,   nil,   169,   nil,    77,   176,
   219,   176,   176,   nil,   nil,   nil,   169,   nil,   nil,   nil,
   nil,   nil,   214,   nil,   232,   175,    91,   176,   nil,   nil,
   nil,   175,   nil,   175,   175,   nil,   nil,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   175,
   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,   175,
   nil,   nil,   nil,   nil,   123,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   145,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   190,    54,    54,   nil,   nil,   nil,   nil,   196 ]

racc_goto_check = [
    18,    18,     7,    11,    15,    14,    18,    16,    18,    18,
     4,    18,    18,    18,    13,    29,     4,    13,    28,     4,
     9,     1,    22,    22,     3,    20,    20,     2,     3,     8,
    27,   nil,   nil,   nil,   nil,   nil,   nil,    18,    18,    18,
    18,    18,    18,    18,    18,    18,    18,    18,    18,    18,
    18,    18,    18,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    13,   nil,    13,    13,   nil,   nil,   nil,   nil,   nil,
   nil,     9,   nil,    18,    22,    29,   nil,   nil,    11,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,
     4,    16,    28,   nil,   nil,    22,   nil,    18,    20,   nil,
   nil,   nil,   nil,   nil,     7,   nil,    14,    14,   nil,   nil,
   nil,    15,   nil,    18,   nil,   nil,   nil,   nil,    11,   nil,
     4,    15,     4,     4,    15,   nil,   nil,   nil,    18,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,   nil,   nil,    18,   nil,    18,   nil,   nil,
   nil,    18,    18,    11,    22,     4,    18,   nil,    18,    18,
   nil,    18,    15,   nil,    22,     6,   nil,    22,    15,   nil,
    15,    15,   nil,    22,    22,   nil,    20,    20,   nil,   nil,
     6,     6,     6,    18,   nil,   nil,    15,   nil,     6,    18,
    18,    18,    18,   nil,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,     4,   nil,    18,    22,     6,    18,   nil,   nil,
   nil,    22,   nil,    22,    22,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     6,     6,     6,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    21,    27,    24,     3,   nil,   160,   -37,   -93,  -133,
   nil,   -11,   nil,  -149,   -34,   -42,   -39,   nil,   -21,   nil,
     4,   nil,     1,   nil,   nil,   nil,   nil,   -43,  -140,   -59,
   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4,    26,   nil,   nil,   nil,
    17,   nil,   167,   165,    46,    18,   nil,   166,    25,   170,
   nil,   174,    24,    16,    19,    23,    51,   nil,   nil,   nil,
    31,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  0, 57, :_reduce_none,
  2, 57, :_reduce_4,
  10, 59, :_reduce_5,
  4, 64, :_reduce_6,
  6, 64, :_reduce_7,
  5, 64, :_reduce_8,
  4, 64, :_reduce_9,
  4, 66, :_reduce_10,
  6, 66, :_reduce_11,
  4, 66, :_reduce_12,
  0, 61, :_reduce_none,
  2, 61, :_reduce_14,
  4, 61, :_reduce_15,
  1, 60, :_reduce_16,
  1, 68, :_reduce_17,
  1, 68, :_reduce_18,
  2, 65, :_reduce_19,
  3, 65, :_reduce_20,
  3, 65, :_reduce_21,
  4, 65, :_reduce_22,
  1, 70, :_reduce_23,
  3, 70, :_reduce_24,
  0, 62, :_reduce_none,
  2, 62, :_reduce_26,
  0, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 67, :_reduce_29,
  2, 67, :_reduce_30,
  1, 71, :_reduce_31,
  3, 71, :_reduce_32,
  1, 71, :_reduce_33,
  1, 71, :_reduce_34,
  3, 71, :_reduce_35,
  3, 71, :_reduce_36,
  3, 71, :_reduce_37,
  1, 71, :_reduce_38,
  2, 71, :_reduce_39,
  2, 71, :_reduce_40,
  1, 58, :_reduce_41,
  2, 58, :_reduce_42,
  1, 77, :_reduce_43,
  1, 77, :_reduce_44,
  1, 77, :_reduce_45,
  3, 77, :_reduce_46,
  3, 77, :_reduce_47,
  3, 77, :_reduce_48,
  1, 77, :_reduce_49,
  2, 77, :_reduce_50,
  2, 77, :_reduce_51,
  1, 74, :_reduce_52,
  1, 74, :_reduce_53,
  1, 74, :_reduce_54,
  3, 74, :_reduce_55,
  1, 80, :_reduce_56,
  4, 69, :_reduce_57,
  1, 81, :_reduce_58,
  1, 81, :_reduce_59,
  6, 78, :_reduce_60,
  11, 78, :_reduce_61,
  6, 78, :_reduce_62,
  6, 73, :_reduce_63,
  11, 73, :_reduce_64,
  6, 73, :_reduce_65,
  0, 82, :_reduce_none,
  2, 82, :_reduce_67,
  6, 79, :_reduce_68,
  8, 79, :_reduce_69,
  6, 75, :_reduce_70,
  8, 75, :_reduce_71,
  4, 76, :_reduce_72,
  3, 76, :_reduce_73,
  1, 83, :_reduce_74,
  3, 83, :_reduce_75,
  1, 72, :_reduce_none,
  3, 72, :_reduce_77,
  3, 72, :_reduce_78,
  3, 72, :_reduce_79,
  3, 72, :_reduce_80,
  3, 72, :_reduce_81,
  3, 72, :_reduce_82,
  3, 72, :_reduce_83,
  2, 72, :_reduce_84,
  2, 72, :_reduce_85,
  3, 72, :_reduce_86,
  3, 72, :_reduce_87,
  3, 72, :_reduce_88,
  3, 72, :_reduce_89,
  3, 72, :_reduce_90,
  3, 72, :_reduce_91,
  3, 72, :_reduce_92,
  3, 72, :_reduce_93,
  3, 72, :_reduce_94,
  1, 85, :_reduce_95,
  1, 85, :_reduce_96,
  1, 84, :_reduce_97,
  1, 84, :_reduce_98,
  1, 84, :_reduce_none ]

racc_reduce_n = 100

racc_shift_n = 243

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "Var",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "wisf",
  "LInstf",
  "type",
  "Assign",
  "ListID",
  "Instf",
  "Expr",
  "IteratorF",
  "writable",
  "CondF",
  "Call",
  "Inst",
  "Iterator",
  "Cond",
  "Str",
  "Asignable",
  "by",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0]);result.printAST(0)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    result = Scope.new(:Funciones,val[0],:Program,val[2])
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'retina_parser.y', 53)
  def _reduce_4(val, _values, result)
    result=ListaFunc.new(:Funcion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 57)
  def _reduce_5(val, _values, result)
    result=Func.new(:Nombre_Funcion,val[1],:Parametros,val[3],:Tipo_Retorno,val[5],:Instrucciones,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 61)
  def _reduce_6(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_8(val, _values, result)
    result=Bloque.new(:declaraciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 64)
  def _reduce_9(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_10(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_11(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_12(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_14(val, _values, result)
    result=ListD.new(:tipos,val[0],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_15(val, _values, result)
    result=List.new(:tipos,val[0],val[3],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_16(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_17(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_18(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_19(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_20(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1],:declaracion,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_21(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:Lista_ID,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_22(val, _values, result)
    result=Ldecl.new(:Lista_Decl,:tipo,val[0],:Lista_ID,val[1],:declaracion,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_23(val, _values, result)
    result=ListID.new(:ID,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_24(val, _values, result)
    result=ListID.new(:ID,val[0],val[2])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_26(val, _values, result)
    result=Retorno.new(:tipo,val[1])
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_29(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_30(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_31(val, _values, result)
    result=Inst.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_32(val, _values, result)
    result=Inst.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_33(val, _values, result)
    result=Inst.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_34(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_35(val, _values, result)
    result=Inst.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_36(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_37(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_38(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_39(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_40(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_41(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_42(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_43(val, _values, result)
    result=Inst.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
    result=Inst.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
    result=Inst.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_52(val, _values, result)
    result=Writable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_53(val, _values, result)
    result=Writable.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_54(val, _values, result)
    result=Writable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_55(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_56(val, _values, result)
    result=Str.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_57(val, _values, result)
    result=Assign.new(:Lado_Izquierdo,val[0],:Lado_Derecho,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 159)
  def _reduce_58(val, _values, result)
    result=Asignable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_59(val, _values, result)
    result=Asignable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_60(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_61(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_62(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_63(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_64(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_65(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_67(val, _values, result)
    result=By.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_68(val, _values, result)
    result=Cond.new(:CondiciÃ³n,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_69(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 186)
  def _reduce_70(val, _values, result)
    result=Cond.new(:CondiciÃ³n,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 187)
  def _reduce_71(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 190)
  def _reduce_72(val, _values, result)
    result=Call.new(:nombre,val[0],:argumentos,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 191)
  def _reduce_73(val, _values, result)
    result=Call.new(:nombre,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 195)
  def _reduce_74(val, _values, result)
    result=ListParam.new(:expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 196)
  def _reduce_75(val, _values, result)
    result=ListParam.new(:expresion,val[0],val[2])
    result
  end
.,.,

# reduce 76 omitted

module_eval(<<'.,.,', 'retina_parser.y', 206)
  def _reduce_77(val, _values, result)
    result = BinExp.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 207)
  def _reduce_78(val, _values, result)
    result = BinExp.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 208)
  def _reduce_79(val, _values, result)
    result = BinExp.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 209)
  def _reduce_80(val, _values, result)
    result = BinExp.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 210)
  def _reduce_81(val, _values, result)
    result = BinExp.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 211)
  def _reduce_82(val, _values, result)
    result = BinExp.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 212)
  def _reduce_83(val, _values, result)
    result = BinExp.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 213)
  def _reduce_84(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 214)
  def _reduce_85(val, _values, result)
    result = UnaExp.new(:Negacion , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_86(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 216)
  def _reduce_87(val, _values, result)
    result = BinExp.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 217)
  def _reduce_88(val, _values, result)
    result = BinExp.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 218)
  def _reduce_89(val, _values, result)
    result = BinExp.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 219)
  def _reduce_90(val, _values, result)
    result = BinExp.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 220)
  def _reduce_91(val, _values, result)
    result = BinExp.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 221)
  def _reduce_92(val, _values, result)
    result = BinExp.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 222)
  def _reduce_93(val, _values, result)
    result = BinExp.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 223)
  def _reduce_94(val, _values, result)
    result = BinExp.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 229)
  def _reduce_95(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 230)
  def _reduce_96(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_97(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 235)
  def _reduce_98(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 99 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
