#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "lexer"

require './retina_ast.rb'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"   
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 209)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
  @lexer.next_token
end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    47,    93,    43,    71,    72,    44,    47,     5,    43,    45,
    46,    44,    47,    57,    43,    45,    46,    44,    47,    91,
    43,    45,    46,    44,    47,   123,    43,    45,    46,    44,
    47,   101,    43,    45,    46,    44,    13,    12,   104,    45,
    46,    91,   100,    75,    74,    73,    48,    54,    89,    56,
   103,   101,    48,    54,    87,   132,    88,    99,    48,    54,
    33,    34,    88,    47,    48,    43,    33,    34,    44,    47,
    48,    43,    45,    46,    44,    47,    48,    43,    45,    46,
    44,    47,    95,    43,    45,    46,    44,    47,    86,    43,
    45,    46,    44,    47,    67,    43,    45,    46,    44,    33,
    34,    66,    45,    46,    71,    72,    33,    34,    47,    48,
    43,    33,    34,    44,    47,    48,    43,    45,    46,    44,
    47,    48,    43,    45,    46,    44,    47,    48,    43,    45,
    46,    44,    47,    48,    43,    45,    46,    44,    47,    48,
    43,    45,    46,    44,    75,    74,    73,    45,    46,    33,
    34,    65,   140,    47,    48,    43,    64,    62,    44,    47,
    48,    43,    45,    46,    44,    47,    48,    43,    45,    46,
    44,    47,    48,    43,    45,    46,    44,    47,    48,    43,
    45,    46,    44,    47,    48,    43,    45,    46,    44,   144,
    59,   146,    45,    46,   147,    50,    38,   150,    47,    48,
    43,    15,    14,    44,    47,    48,    43,    45,    46,    44,
    47,    48,    43,    45,    46,    44,    47,    48,    43,    45,
    46,    44,    47,    48,    43,    45,    46,    44,    10,    48,
   154,    45,    46,   155,     9,    69,    70,    71,    72,   157,
     5,     7,     6,   160,    48,   nil,   nil,   nil,   nil,   nil,
    48,    69,    70,    71,    72,   nil,    48,   nil,   nil,   nil,
   nil,    77,    48,    76,   nil,   nil,   nil,   nil,    48,   -71,
   -71,   -71,   -71,   -71,   -71,   nil,   nil,    75,    74,    73,
   136,    69,    70,    71,    72,    83,    78,    82,    81,    80,
    79,    77,   nil,    75,    74,    73,    69,    70,    71,    72,
   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,    76,   nil,
   nil,   nil,   nil,   nil,   nil,    83,    78,    82,    81,    80,
    79,   nil,   nil,    75,    74,    73,   nil,   nil,   nil,   nil,
    83,    78,    82,    81,    80,    79,   nil,    68,    75,    74,
    73,    69,    70,    71,    72,   nil,   nil,   nil,   nil,   nil,
   nil,    77,   nil,    76,    69,    70,    71,    72,   nil,   nil,
   nil,   nil,   nil,   nil,    77,   nil,    76,    69,    70,    71,
    72,   nil,   nil,   nil,   nil,    83,    78,    82,    81,    80,
    79,   nil,   nil,    75,    74,    73,   nil,   nil,    83,    78,
    82,    81,    80,    79,   nil,   nil,    75,    74,    73,   nil,
   nil,    83,    78,    82,    81,    80,    79,   nil,   nil,    75,
    74,    73,    69,    70,    71,    72,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    69,    70,    71,    72,   nil,   nil,   nil,
   nil,   nil,   nil,    77,   nil,    76,    69,    70,    71,    72,
    94,   nil,   nil,   nil,   nil,   nil,   -71,   -71,   -71,   -71,
   -71,   -71,   nil,   nil,    75,    74,    73,    83,    78,    82,
    81,    80,    79,   nil,   nil,    75,    74,    73,   nil,   nil,
   -71,   -71,   -71,   -71,   -71,   -71,   nil,   nil,    75,    74,
    73,    69,    70,    71,    72,   nil,   nil,   nil,   nil,   nil,
   nil,    77,   nil,    76,    69,    70,    71,    72,   nil,   nil,
   nil,   nil,   nil,   nil,    77,   nil,    76,   nil,   nil,   nil,
   nil,   nil,   nil,    97,   nil,    83,    78,    82,    81,    80,
    79,   nil,   141,    75,    74,    73,   nil,   nil,    83,    78,
    82,    81,    80,    79,   nil,   nil,    75,    74,    73,    69,
    70,    71,    72,   nil,   nil,   nil,   nil,   nil,   nil,    77,
   nil,    76,    69,    70,    71,    72,    13,    12,    31,   nil,
   nil,    28,    29,    30,   nil,    22,    23,    24,   nil,   nil,
   nil,   nil,    19,    83,    78,    82,    81,    80,    79,   nil,
   122,    75,    74,    73,   nil,    27,   -71,   -71,   -71,   -71,
   -71,   -71,   nil,   nil,    75,    74,    73,    69,    70,    71,
    72,   nil,   120,   nil,   nil,   nil,   nil,    77,   nil,    76,
    69,    70,    71,    72,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    69,    70,    71,    72,   nil,   nil,   nil,   nil,   nil,
   nil,    83,    78,    82,    81,    80,    79,   nil,   nil,    75,
    74,    73,   nil,   nil,   -71,   -71,   -71,   -71,   -71,   -71,
   nil,   nil,    75,    74,    73,   -71,   -71,   -71,   -71,   -71,
   -71,   nil,   nil,    75,    74,    73,    69,    70,    71,    72,
   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,    76,   nil,
   nil,   nil,    69,    70,    71,    72,   nil,   nil,   nil,   nil,
   nil,   nil,    77,   nil,    76,   nil,   152,   nil,   nil,   nil,
    83,    78,    82,    81,    80,    79,    96,   nil,    75,    74,
    73,   nil,   nil,   nil,   nil,   nil,    83,    78,    82,    81,
    80,    79,   nil,   nil,    75,    74,    73,    39,    13,    12,
    31,   nil,   nil,    28,    29,    30,   nil,    22,    23,    24,
   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   135,    13,
    12,    31,   nil,   nil,    28,    29,    30,    27,    22,    23,
    24,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   159,
    13,    12,    31,   nil,   nil,    28,    29,    30,    27,    22,
    23,    24,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   128,    13,    12,    31,   nil,   nil,    28,    29,    30,    27,
    22,    23,    24,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   138,    13,    12,    31,   nil,   139,    28,    29,    30,
    27,    22,    23,    24,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   153,    13,    12,    31,   nil,   nil,    28,    29,
    30,    27,    22,    23,    24,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   137,    13,    12,    31,   nil,   nil,    28,
    29,    30,    27,    22,    23,    24,    13,    12,    31,   nil,
    19,    28,    29,    30,   nil,    22,    23,    24,   nil,   nil,
   nil,   nil,    19,    27,   nil,   nil,   nil,    13,    12,    31,
   nil,   nil,    28,    29,    30,    27,    22,    23,    24,    13,
    12,    31,   nil,    19,    28,    29,    30,   nil,    22,    23,
    24,   nil,   nil,   nil,   nil,    19,    27,   nil,   nil,   nil,
    13,    12,    31,   nil,   nil,    28,    29,    30,    27,    22,
    23,    24,    13,    12,    31,   nil,    19,    28,    29,    30,
   nil,    22,    23,    24,   nil,   nil,   nil,   nil,    19,    27,
   nil,   nil,   nil,    13,    12,    31,   nil,   nil,    28,    29,
    30,    27,    22,    23,    24,    13,    12,    31,   nil,    19,
    28,    29,    30,   nil,    22,    23,    24,   nil,   nil,   nil,
   nil,    19,    27,   nil,   nil,   nil,    13,    12,    31,   nil,
   nil,    28,    29,    30,    27,    22,    23,    24,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    27 ]

racc_action_check = [
    88,    57,    88,   106,   106,    88,    24,     0,    24,    88,
    88,    24,    23,    27,    23,    24,    24,    23,    19,   101,
    19,    23,    23,    19,   152,    92,   152,    19,    19,   152,
    83,    91,    83,   152,   152,    83,     7,     7,    66,    83,
    83,    57,    64,   106,   106,   106,    88,    88,    55,    27,
    65,    64,    24,    24,    51,   102,    55,    63,    23,    23,
    13,    13,    51,    82,    19,    82,    99,    99,    82,    81,
   152,    81,    82,    82,    81,    80,    83,    80,    81,    81,
    80,    79,    59,    79,    80,    80,    79,    78,    50,    78,
    79,    79,    78,    77,    39,    77,    78,    78,    77,   141,
   141,    37,    77,    77,   105,   105,   103,   103,    76,    82,
    76,   104,   104,    76,    75,    81,    75,    76,    76,    75,
    28,    80,    28,    75,    75,    28,    74,    79,    74,    28,
    28,    74,    95,    78,    95,    74,    74,    95,   100,    77,
   100,    95,    95,   100,   105,   105,   105,   100,   100,    14,
    14,    36,   128,    73,    76,    73,    35,    32,    73,    72,
    75,    72,    73,    73,    72,   136,    28,   136,    72,    72,
   136,    30,    74,    30,   136,   136,    30,    31,    95,    31,
    30,    30,    31,    71,   100,    71,    31,    31,    71,   135,
    29,   137,    71,    71,   138,    22,    15,   142,    70,    73,
    70,    11,     9,    70,    69,    72,    69,    70,    70,    69,
    56,   136,    56,    69,    69,    56,    44,    30,    44,    56,
    56,    44,    43,    31,    43,    44,    44,    43,     6,    71,
   150,    43,    43,   151,     5,   117,   117,   117,   117,   153,
     4,     3,     1,   159,    70,   nil,   nil,   nil,   nil,   nil,
    69,   125,   125,   125,   125,   nil,    56,   nil,   nil,   nil,
   nil,   125,    44,   125,   nil,   nil,   nil,   nil,    43,   117,
   117,   117,   117,   117,   117,   nil,   nil,   117,   117,   117,
   125,   112,   112,   112,   112,   125,   125,   125,   125,   125,
   125,   112,   nil,   125,   125,   125,    41,    41,    41,    41,
   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,    41,   nil,
   nil,   nil,   nil,   nil,   nil,   112,   112,   112,   112,   112,
   112,   nil,   nil,   112,   112,   112,   nil,   nil,   nil,   nil,
    41,    41,    41,    41,    41,    41,   nil,    41,    41,    41,
    41,    52,    52,    52,    52,   nil,   nil,   nil,   nil,   nil,
   nil,    52,   nil,    52,   156,   156,   156,   156,   nil,   nil,
   nil,   nil,   nil,   nil,   156,   nil,   156,   113,   113,   113,
   113,   nil,   nil,   nil,   nil,    52,    52,    52,    52,    52,
    52,   nil,   nil,    52,    52,    52,   nil,   nil,   156,   156,
   156,   156,   156,   156,   nil,   nil,   156,   156,   156,   nil,
   nil,   113,   113,   113,   113,   113,   113,   nil,   nil,   113,
   113,   113,   114,   114,   114,   114,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    58,    58,    58,   nil,   nil,   nil,
   nil,   nil,   nil,    58,   nil,    58,   119,   119,   119,   119,
    58,   nil,   nil,   nil,   nil,   nil,   114,   114,   114,   114,
   114,   114,   nil,   nil,   114,   114,   114,    58,    58,    58,
    58,    58,    58,   nil,   nil,    58,    58,    58,   nil,   nil,
   119,   119,   119,   119,   119,   119,   nil,   nil,   119,   119,
   119,   130,   130,   130,   130,   nil,   nil,   nil,   nil,   nil,
   nil,   130,   nil,   130,    61,    61,    61,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    61,   nil,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    61,   nil,   130,   130,   130,   130,   130,
   130,   nil,   130,   130,   130,   130,   nil,   nil,    61,    61,
    61,    61,    61,    61,   nil,   nil,    61,    61,    61,    90,
    90,    90,    90,   nil,   nil,   nil,   nil,   nil,   nil,    90,
   nil,    90,   118,   118,   118,   118,    96,    96,    96,   nil,
   nil,    96,    96,    96,   nil,    96,    96,    96,   nil,   nil,
   nil,   nil,    96,    90,    90,    90,    90,    90,    90,   nil,
    90,    90,    90,    90,   nil,    96,   118,   118,   118,   118,
   118,   118,   nil,   nil,   118,   118,   118,    85,    85,    85,
    85,   nil,    85,   nil,   nil,   nil,   nil,    85,   nil,    85,
   116,   116,   116,   116,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,   115,   115,   115,   nil,   nil,   nil,   nil,   nil,
   nil,    85,    85,    85,    85,    85,    85,   nil,   nil,    85,
    85,    85,   nil,   nil,   116,   116,   116,   116,   116,   116,
   nil,   nil,   116,   116,   116,   115,   115,   115,   115,   115,
   115,   nil,   nil,   115,   115,   115,   145,   145,   145,   145,
   nil,   nil,   nil,   nil,   nil,   nil,   145,   nil,   145,   nil,
   nil,   nil,    60,    60,    60,    60,   nil,   nil,   nil,   nil,
   nil,   nil,    60,   nil,    60,   nil,   145,   nil,   nil,   nil,
   145,   145,   145,   145,   145,   145,    60,   nil,   145,   145,
   145,   nil,   nil,   nil,   nil,   nil,    60,    60,    60,    60,
    60,    60,   nil,   nil,    60,    60,    60,    16,    16,    16,
    16,   nil,   nil,    16,    16,    16,   nil,    16,    16,    16,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   124,   124,
   124,   124,   nil,   nil,   124,   124,   124,    16,   124,   124,
   124,   nil,   nil,   nil,   nil,   124,   nil,   nil,   nil,   158,
   158,   158,   158,   nil,   nil,   158,   158,   158,   124,   158,
   158,   158,   nil,   nil,   nil,   nil,   158,   nil,   nil,   nil,
    98,    98,    98,    98,   nil,   nil,    98,    98,    98,   158,
    98,    98,    98,   nil,   nil,   nil,   nil,    98,   nil,   nil,
   nil,   127,   127,   127,   127,   nil,   127,   127,   127,   127,
    98,   127,   127,   127,   nil,   nil,   nil,   nil,   127,   nil,
   nil,   nil,   148,   148,   148,   148,   nil,   nil,   148,   148,
   148,   127,   148,   148,   148,   nil,   nil,   nil,   nil,   148,
   nil,   nil,   nil,   126,   126,   126,   126,   nil,   nil,   126,
   126,   126,   148,   126,   126,   126,   143,   143,   143,   nil,
   126,   143,   143,   143,   nil,   143,   143,   143,   nil,   nil,
   nil,   nil,   143,   126,   nil,   nil,   nil,   132,   132,   132,
   nil,   nil,   132,   132,   132,   143,   132,   132,   132,   155,
   155,   155,   nil,   132,   155,   155,   155,   nil,   155,   155,
   155,   nil,   nil,   nil,   nil,   155,   132,   nil,   nil,   nil,
    62,    62,    62,   nil,   nil,    62,    62,    62,   155,    62,
    62,    62,   139,   139,   139,   nil,    62,   139,   139,   139,
   nil,   139,   139,   139,   nil,   nil,   nil,   nil,   139,    62,
   nil,   nil,   nil,    97,    97,    97,   nil,   nil,    97,    97,
    97,   139,    97,    97,    97,    94,    94,    94,   nil,    97,
    94,    94,    94,   nil,    94,    94,    94,   nil,   nil,   nil,
   nil,    94,    97,   nil,   nil,   nil,    12,    12,    12,   nil,
   nil,    12,    12,    12,    94,    12,    12,    12,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12 ]

racc_action_pointer = [
   -27,   242,   nil,   225,   206,   186,   228,    17,   nil,   195,
   nil,   183,   967,    51,   140,   152,   709,   nil,   nil,    16,
   nil,   nil,   147,    10,     4,   nil,   nil,     6,   118,   142,
   169,   175,   137,   nil,   nil,   108,   143,    53,   nil,    50,
   nil,   293,   nil,   220,   214,   nil,   nil,   nil,   nil,   nil,
    44,    10,   338,   nil,   nil,     4,   208,    -7,   420,    51,
   679,   491,   901,    13,    -1,    14,   -14,   nil,   nil,   202,
   196,   181,   157,   151,   124,   112,   106,    91,    85,    79,
    73,    67,    61,    28,   nil,   594,   nil,   nil,    -2,   nil,
   536,   -21,    17,   nil,   946,   130,   537,   934,   772,    57,
   136,   -29,    38,    97,   102,    99,    -2,   nil,   nil,   nil,
   nil,   nil,   278,   364,   409,   618,   607,   232,   549,   433,
   nil,   nil,   nil,   nil,   730,   248,   835,   793,   108,   nil,
   478,   nil,   868,   nil,   nil,   145,   163,   147,   150,   913,
   nil,    90,   179,   847,   nil,   663,   nil,   nil,   814,   nil,
   186,   213,    22,   195,   nil,   880,   351,   nil,   751,   199,
   nil ]

racc_action_default = [
    -3,   -71,    -1,   -71,    -3,   -71,   -71,   -71,    -4,   -71,
   161,   -71,   -71,   -71,    -8,   -71,   -71,   -23,   -25,   -71,
   -27,   -28,   -71,   -71,   -71,   -32,   -33,   -71,   -71,   -71,
   -71,   -71,   -71,   -11,   -12,   -71,   -71,   -71,    -2,   -71,
   -24,   -71,   -48,   -71,   -71,   -66,   -67,   -68,   -69,   -70,
   -71,   -71,   -34,   -35,   -37,   -71,   -71,   -71,   -71,   -71,
   -71,   -71,   -71,   -71,   -17,   -19,    -9,    -6,   -26,   -71,
   -71,   -71,   -71,   -71,   -71,   -71,   -71,   -71,   -71,   -71,
   -71,   -71,   -71,   -71,   -56,   -71,   -29,   -30,   -71,   -31,
   -71,   -17,   -71,   -47,   -71,   -71,   -71,   -71,   -71,   -13,
   -71,   -71,   -71,   -71,    -8,   -49,   -50,   -51,   -52,   -53,
   -54,   -55,   -58,   -59,   -60,   -61,   -62,   -63,   -64,   -65,
   -57,   -36,   -38,   -46,   -71,   -71,   -71,   -71,   -71,   -14,
   -71,   -18,   -21,   -20,   -10,   -71,   -71,   -71,   -71,   -71,
    -7,   -15,   -71,   -22,   -39,   -42,   -41,   -44,   -71,   -16,
   -71,   -71,   -71,   -71,    -5,   -71,   -43,   -45,   -71,   -71,
   -40 ]

racc_goto_table = [
    16,    32,    41,    36,    40,    37,    63,     1,    51,    55,
   142,    58,     3,    60,    61,   102,     8,    11,     2,   151,
   nil,   nil,   nil,   nil,   nil,   nil,    84,    85,    92,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    98,   nil,   105,   106,   107,   108,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   118,   119,   nil,   nil,   nil,
   nil,   nil,   131,   121,   nil,   nil,   nil,   nil,   125,   nil,
   nil,   nil,   124,   130,   126,   127,    40,   129,   nil,   nil,
   nil,   nil,   nil,   134,   133,    37,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,   nil,    40,    40,   nil,   nil,   nil,   145,
   143,   nil,   nil,   nil,   nil,   nil,   nil,   148,   nil,   149,
   nil,    40,   nil,   nil,   nil,   156,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   158,   nil,   nil,    40 ]

racc_goto_check = [
     9,    10,    13,     6,    14,    11,    12,     1,    17,    17,
     8,    13,     3,    13,    13,     7,     3,     4,     2,    21,
   nil,   nil,   nil,   nil,   nil,   nil,    13,    13,    12,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     9,   nil,    13,    13,    13,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    13,    13,    13,   nil,   nil,   nil,
   nil,   nil,    12,    17,   nil,   nil,   nil,   nil,    13,   nil,
   nil,   nil,     9,    13,     9,     9,    14,    10,   nil,   nil,
   nil,   nil,   nil,     6,    11,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    14,   nil,    14,    14,   nil,   nil,   nil,    13,
     9,   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,    10,
   nil,    14,   nil,   nil,   nil,    13,    14,   nil,   nil,   nil,
   nil,   nil,   nil,     9,   nil,   nil,    14 ]

racc_goto_pointer = [
   nil,     7,    18,    12,    10,   nil,   -11,   -50,  -122,   -12,
   -12,    -9,   -29,   -17,   -12,   nil,   nil,   -15,   nil,   nil,
   nil,  -126,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    18,     4,   nil,   nil,   nil,   nil,
   nil,    35,   nil,    52,    17,    20,    21,   nil,    25,    26,
    53,   nil,    42,    49 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  0, 57, :_reduce_none,
  2, 57, :_reduce_none,
  10, 59, :_reduce_5,
  4, 58, :_reduce_6,
  6, 58, :_reduce_7,
  0, 60, :_reduce_none,
  2, 60, :_reduce_9,
  4, 60, :_reduce_10,
  1, 65, :_reduce_11,
  1, 65, :_reduce_12,
  3, 64, :_reduce_13,
  4, 64, :_reduce_14,
  5, 64, :_reduce_15,
  6, 64, :_reduce_16,
  1, 66, :_reduce_17,
  3, 66, :_reduce_18,
  0, 61, :_reduce_none,
  2, 61, :_reduce_20,
  0, 62, :_reduce_none,
  1, 62, :_reduce_22,
  1, 63, :_reduce_23,
  2, 63, :_reduce_24,
  1, 68, :_reduce_25,
  3, 68, :_reduce_26,
  1, 68, :_reduce_27,
  1, 68, :_reduce_28,
  3, 68, :_reduce_29,
  3, 68, :_reduce_30,
  3, 68, :_reduce_31,
  1, 68, :_reduce_32,
  1, 68, :_reduce_33,
  1, 71, :_reduce_34,
  1, 71, :_reduce_35,
  3, 71, :_reduce_36,
  1, 74, :_reduce_37,
  4, 69, :_reduce_38,
  6, 70, :_reduce_39,
  11, 70, :_reduce_40,
  6, 70, :_reduce_41,
  0, 75, :_reduce_none,
  2, 75, :_reduce_43,
  6, 72, :_reduce_44,
  8, 72, :_reduce_45,
  4, 73, :_reduce_46,
  3, 73, :_reduce_47,
  1, 67, :_reduce_none,
  3, 67, :_reduce_49,
  3, 67, :_reduce_50,
  3, 67, :_reduce_51,
  3, 67, :_reduce_52,
  3, 67, :_reduce_53,
  3, 67, :_reduce_54,
  3, 67, :_reduce_55,
  2, 67, :_reduce_56,
  3, 67, :_reduce_57,
  3, 67, :_reduce_58,
  3, 67, :_reduce_59,
  3, 67, :_reduce_60,
  3, 67, :_reduce_61,
  3, 67, :_reduce_62,
  3, 67, :_reduce_63,
  3, 67, :_reduce_64,
  3, 67, :_reduce_65,
  1, 77, :_reduce_66,
  1, 77, :_reduce_67,
  1, 76, :_reduce_68,
  1, 76, :_reduce_69,
  1, 76, :_reduce_none ]

racc_reduce_n = 71

racc_shift_n = 161

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "wis",
  "funciones",
  "ListD",
  "Retorno",
  "funcInst",
  "LInst",
  "Ldecl",
  "type",
  "ListID",
  "Expr",
  "Inst",
  "Assign",
  "Iterator",
  "writable",
  "Cond",
  "Call",
  "Str",
  "by",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'retina_parser.y', 57)
  def _reduce_5(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 61)
  def _reduce_6(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'retina_parser.y', 67)
  def _reduce_9(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_10(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 72)
  def _reduce_11(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 73)
  def _reduce_12(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 77)
  def _reduce_13(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_14(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_15(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_16(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_17(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_18(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_20(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_22(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_23(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_24(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_25(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_26(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_27(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_28(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_29(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_30(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_31(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_32(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_33(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_34(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_35(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_36(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_37(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_38(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_39(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_40(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_41(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_43(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_44(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_45(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_46(val, _values, result)
    puts "ok"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_47(val, _values, result)
    puts "ok"
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_49(val, _values, result)
    result = BinExp.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_50(val, _values, result)
    result = BinExp.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_51(val, _values, result)
    result = BinExp.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_52(val, _values, result)
    result = BinExp.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 159)
  def _reduce_53(val, _values, result)
    result = BinExp.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_54(val, _values, result)
    result = BinExp.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_55(val, _values, result)
    result = BinExp.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 162)
  def _reduce_56(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 163)
  def _reduce_57(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_58(val, _values, result)
    result = BinExp.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_59(val, _values, result)
    result = BinExp.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_60(val, _values, result)
    result = BinExp.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 167)
  def _reduce_61(val, _values, result)
    result = BinExp.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_62(val, _values, result)
    result = BinExp.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 169)
  def _reduce_63(val, _values, result)
    result = BinExp.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_64(val, _values, result)
    result = BinExp.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_65(val, _values, result)
    result = BinExp.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_66(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_67(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_68(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_69(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 70 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
