#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "lexer"

require './retina_ast.rb'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            "Line unexpected token #{@token}" 
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 223)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
  @lexer.next_token
end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    58,    59,    60,    61,    35,    74,    31,    43,    44,    32,
    66,   119,    65,    33,    34,    35,   125,    31,    42,    73,
    32,    35,   123,    31,    33,    34,    32,   121,   126,   120,
    33,    34,    92,   136,    72,    67,    71,    70,    69,    68,
    93,    73,    64,    63,    62,    94,    43,    44,   137,   130,
    54,    53,   129,    93,    35,   115,    31,    60,    61,    32,
   140,    54,    53,    33,    34,    43,    44,    54,    53,   140,
   138,    13,    12,    29,    43,    44,    26,    27,    28,    74,
    19,    20,    21,    91,    35,    89,    31,    16,    86,    32,
    43,    44,   148,    33,    34,    43,    44,    64,    63,    62,
    25,    13,    12,    29,    85,    83,    26,    27,    28,   151,
    19,    20,    21,   126,   152,    76,    35,    16,    31,    60,
    61,    32,   154,   155,    56,    33,    34,    48,    37,     5,
    25,   162,   161,    13,    12,    29,    10,   163,    26,    27,
    28,     9,    19,    20,    21,   165,    35,   166,    31,    16,
     5,    32,     7,     6,   169,    33,    34,   nil,   nil,    64,
    63,    62,    25,    13,    12,    29,   nil,   nil,    26,    27,
    28,   nil,    19,    20,    21,   nil,   nil,   nil,    35,    16,
    31,   nil,   nil,    32,   nil,   nil,   nil,    33,    34,   nil,
   nil,   nil,    25,   nil,    38,    13,    12,    29,   nil,   nil,
    26,    27,    28,   nil,    19,    20,    21,   nil,    35,   nil,
    31,    16,   nil,    32,   nil,   nil,   nil,    33,    34,   nil,
   nil,   nil,   nil,   nil,    25,    13,    12,    29,   nil,   nil,
    26,    27,    28,   nil,    19,    20,    21,   nil,   nil,   nil,
    35,    16,    31,   nil,   nil,    32,   nil,   nil,   nil,    33,
    34,   nil,   nil,   nil,    25,   nil,   168,    13,    12,    29,
   nil,   nil,    26,    27,    28,   nil,    19,    20,    21,    35,
   nil,    31,   nil,    16,    32,    35,   nil,    31,    33,    34,
    32,   nil,   nil,   nil,    33,    34,    25,   nil,   nil,   nil,
   nil,   nil,    13,    12,    29,   nil,   nil,    26,    27,    28,
   nil,    19,    20,    21,   nil,   nil,   nil,    35,    16,    31,
   nil,   nil,    32,   nil,   nil,    47,    33,    34,   nil,   nil,
   nil,    25,   nil,   nil,    13,    12,    29,   nil,   nil,    26,
    27,    28,   nil,    19,    20,    21,   nil,    35,   nil,    31,
    16,   nil,    32,   nil,   nil,   nil,    33,    34,   nil,   nil,
   nil,   nil,   nil,    25,    13,    12,    29,   nil,   nil,    26,
    27,    28,   nil,    19,    20,    21,   nil,    35,   nil,    31,
    16,   nil,    32,   nil,   nil,   nil,    33,    34,   nil,   nil,
   nil,   nil,   nil,    25,    13,    12,    29,   nil,   nil,    26,
    27,    28,   nil,    19,    20,    21,    35,   nil,    31,   nil,
    16,    32,    35,   nil,    31,    33,    34,    32,   nil,   nil,
   nil,    33,    34,    25,   nil,   nil,   nil,   nil,   nil,    13,
    12,    29,   nil,   nil,    26,    27,    28,   nil,    19,    20,
    21,    35,   nil,    31,   nil,    16,    32,   nil,   nil,   nil,
    33,    34,    47,   nil,    35,   nil,    31,   nil,    25,    32,
    35,   nil,    31,    33,    34,    32,    35,   nil,    31,    33,
    34,    32,    35,   nil,    31,    33,    34,    32,   nil,   nil,
   nil,    33,    34,    35,   nil,    31,   nil,    47,    32,    35,
   nil,    31,    33,    34,    32,   nil,   nil,   nil,    33,    34,
    47,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,
   nil,   nil,    47,   nil,    35,   nil,    31,   nil,    47,    32,
   nil,   nil,   nil,    33,    34,   nil,   nil,   nil,   nil,    47,
   nil,    13,    12,    29,   nil,    47,    26,    27,    28,   nil,
    19,    20,    21,   nil,   nil,   nil,    35,    16,    31,   nil,
   nil,    32,   nil,   nil,   nil,    33,    34,   nil,   nil,   nil,
    25,   nil,    84,    13,    12,    29,   nil,   nil,    26,    27,
    28,   nil,    19,    20,    21,    35,   nil,    31,   nil,    16,
    32,    35,   nil,    31,    33,    34,    32,   nil,   nil,   nil,
    33,    34,    25,   nil,   nil,   nil,   nil,   146,    13,    12,
    29,   nil,   147,    26,    27,    28,   nil,    19,    20,    21,
   nil,   nil,   nil,    35,    16,    31,   nil,   nil,    32,   nil,
   nil,    47,    33,    34,   nil,   nil,   nil,    25,   nil,   145,
    13,    12,    29,   nil,   nil,    26,    27,    28,   nil,    19,
    20,    21,    35,   nil,    31,   nil,    16,    32,   112,   nil,
   nil,    33,    34,    35,   nil,    31,   nil,   nil,    32,    25,
   nil,   nil,    33,    34,    35,   nil,    31,   nil,   nil,    32,
    35,   nil,    31,    33,    34,    32,   nil,   nil,   nil,    33,
    34,   nil,   nil,   nil,   nil,    35,   nil,    31,    47,   nil,
    32,   nil,   nil,   nil,    33,    34,   nil,   nil,   nil,    47,
   nil,   143,    13,    12,    29,   nil,   nil,    26,    27,    28,
    47,    19,    20,    21,   nil,    35,    47,    31,    16,   nil,
    32,   nil,   nil,   nil,    33,    34,   nil,    35,   nil,    31,
   nil,    25,    32,    35,   nil,    31,    33,    34,    32,    35,
   nil,    31,    33,    34,    32,    35,   nil,    31,    33,    34,
    32,   nil,   nil,   nil,    33,    34,   nil,    35,   nil,    31,
   nil,    47,    32,   nil,   nil,   nil,    33,    34,   nil,   nil,
   nil,   nil,    35,    47,    31,   nil,   nil,    32,    35,    47,
    31,    33,    34,    32,    35,    47,    31,    33,    34,    32,
    35,    47,    31,    33,    34,    32,    35,   nil,    31,    33,
    34,    32,    35,    47,    31,    33,    34,    32,   nil,   nil,
   nil,    33,    34,   nil,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,
    47,   nil,   nil,   nil,   nil,    35,    47,    31,   nil,   nil,
    32,   nil,    47,   nil,    33,    34,   nil,   nil,    47,   nil,
   nil,   nil,    13,    12,    29,   nil,   nil,    26,    27,    28,
   nil,    19,    20,    21,    58,    59,    60,    61,    16,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    65,    58,    59,    60,
    61,    25,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,
    58,    59,    60,    61,   160,   nil,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,   nil,    64,    63,    62,   nil,
   nil,    72,    67,    71,    70,    69,    68,   nil,   nil,    64,
    63,    62,   nil,   nil,   -76,   -76,   -76,   -76,   -76,   -76,
   nil,   nil,    64,    63,    62,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    65,   nil,   nil,   nil,   144,   nil,   nil,   nil,   nil,    72,
    67,    71,    70,    69,    68,   nil,   nil,    64,    63,    62,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,    90,
    64,    63,    62,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    66,   nil,    65,    58,    59,    60,    61,
   114,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    72,    67,    71,
    70,    69,    68,   nil,   nil,    64,    63,    62,   nil,   nil,
    72,    67,    71,    70,    69,    68,   nil,   128,    64,    63,
    62,    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,    65,    58,    59,    60,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   116,    65,   nil,   nil,   nil,
   nil,   nil,   nil,   117,   nil,    72,    67,    71,    70,    69,
    68,   nil,   nil,    64,    63,    62,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,   nil,    64,    63,    62,    58,
    59,    60,    61,   nil,   118,   nil,   nil,   nil,   nil,    66,
   nil,    65,    58,    59,    60,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,   nil,   nil,   -76,   -76,   -76,   -76,
   -76,   -76,   nil,   nil,    64,    63,    62,   -76,   -76,   -76,
   -76,   -76,   -76,   nil,   nil,    64,    63,    62,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,   nil,
    64,    63,    62,   -76,   -76,   -76,   -76,   -76,   -76,   nil,
   nil,    64,    63,    62,    58,    59,    60,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    65,    58,    59,    60,
    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,    57,    64,    63,    62,   nil,
   nil,   -76,   -76,   -76,   -76,   -76,   -76,   nil,   nil,    64,
    63,    62,    58,    59,    60,    61,   nil,   nil,   nil,   nil,
   nil,   nil,    66,   nil,    65,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    58,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,    72,    67,    71,    70,
    69,    68,   nil,   nil,    64,    63,    62,   nil,   nil,    72,
    67,    71,    70,    69,    68,   nil,   nil,    64,    63,    62,
   -76,   -76,   -76,   -76,   -76,   -76,   nil,   nil,    64,    63,
    62 ]

racc_action_check = [
   113,   113,   113,   113,    21,    25,    21,    13,    13,    21,
   113,    81,   113,    21,    21,    93,    88,    93,    13,    89,
    93,    20,    86,    20,    93,    93,    20,    84,    89,    82,
    20,    20,    49,   119,   113,   113,   113,   113,   113,   113,
    49,    25,   113,   113,   113,    55,    37,    37,   120,   113,
    21,    21,   111,    55,   122,    76,   122,    95,    95,   122,
   126,    93,    93,   122,   122,   137,   137,    20,    20,   130,
   122,   122,   122,   122,   136,   136,   122,   122,   122,    54,
   122,   122,   122,    48,   158,    45,   158,   122,    42,   158,
   125,   125,   135,   158,   158,    87,    87,    95,    95,    95,
   122,   158,   158,   158,    41,    38,   158,   158,   158,   138,
   158,   158,   158,   140,   143,    27,   156,   158,   156,    96,
    96,   156,   145,   146,    23,   156,   156,    19,     9,     0,
   158,   157,   156,   156,   156,   156,     6,   159,   156,   156,
   156,     5,   156,   156,   156,   161,     7,   162,     7,   156,
     4,     7,     3,     1,   168,     7,     7,   nil,   nil,    96,
    96,    96,   156,     7,     7,     7,   nil,   nil,     7,     7,
     7,   nil,     7,     7,     7,   nil,   nil,   nil,    11,     7,
    11,   nil,   nil,    11,   nil,   nil,   nil,    11,    11,   nil,
   nil,   nil,     7,   nil,    11,    11,    11,    11,   nil,   nil,
    11,    11,    11,   nil,    11,    11,    11,   nil,    12,   nil,
    12,    11,   nil,    12,   nil,   nil,   nil,    12,    12,   nil,
   nil,   nil,   nil,   nil,    11,    12,    12,    12,   nil,   nil,
    12,    12,    12,   nil,    12,    12,    12,   nil,   nil,   nil,
   167,    12,   167,   nil,   nil,   167,   nil,   nil,   nil,   167,
   167,   nil,   nil,   nil,    12,   nil,   167,   167,   167,   167,
   nil,   nil,   167,   167,   167,   nil,   167,   167,   167,    16,
   nil,    16,   nil,   167,    16,   148,   nil,   148,    16,    16,
   148,   nil,   nil,   nil,   148,   148,   167,   nil,   nil,   nil,
   nil,   nil,   148,   148,   148,   nil,   nil,   148,   148,   148,
   nil,   148,   148,   148,   nil,   nil,   nil,   163,   148,   163,
   nil,   nil,   163,   nil,   nil,    16,   163,   163,   nil,   nil,
   nil,   148,   nil,   nil,   163,   163,   163,   nil,   nil,   163,
   163,   163,   nil,   163,   163,   163,   nil,   114,   nil,   114,
   163,   nil,   114,   nil,   nil,   nil,   114,   114,   nil,   nil,
   nil,   nil,   nil,   163,   114,   114,   114,   nil,   nil,   114,
   114,   114,   nil,   114,   114,   114,   nil,   147,   nil,   147,
   114,   nil,   147,   nil,   nil,   nil,   147,   147,   nil,   nil,
   nil,   nil,   nil,   114,   147,   147,   147,   nil,   nil,   147,
   147,   147,   nil,   147,   147,   147,   115,   nil,   115,   nil,
   147,   115,    85,   nil,    85,   115,   115,    85,   nil,   nil,
   nil,    85,    85,   147,   nil,   nil,   nil,   nil,   nil,    85,
    85,    85,   nil,   nil,    85,    85,    85,   nil,    85,    85,
    85,    26,   nil,    26,   nil,    85,    26,   nil,   nil,   nil,
    26,    26,   115,   nil,   144,   nil,   144,   nil,    85,   144,
    28,   nil,    28,   144,   144,    28,    29,   nil,    29,    28,
    28,    29,    31,   nil,    31,    29,    29,    31,   nil,   nil,
   nil,    31,    31,    32,   nil,    32,   nil,    26,    32,    69,
   nil,    69,    32,    32,    69,   nil,   nil,   nil,    69,    69,
   144,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,
   nil,   nil,    29,   nil,   117,   nil,   117,   nil,    31,   117,
   nil,   nil,   nil,   117,   117,   nil,   nil,   nil,   nil,    32,
   nil,   117,   117,   117,   nil,    69,   117,   117,   117,   nil,
   117,   117,   117,   nil,   nil,   nil,    40,   117,    40,   nil,
   nil,    40,   nil,   nil,   nil,    40,    40,   nil,   nil,   nil,
   117,   nil,    40,    40,    40,    40,   nil,   nil,    40,    40,
    40,   nil,    40,    40,    40,   160,   nil,   160,   nil,    40,
   160,   134,   nil,   134,   160,   160,   134,   nil,   nil,   nil,
   134,   134,    40,   nil,   nil,   nil,   nil,   134,   134,   134,
   134,   nil,   134,   134,   134,   134,   nil,   134,   134,   134,
   nil,   nil,   nil,   133,   134,   133,   nil,   nil,   133,   nil,
   nil,   160,   133,   133,   nil,   nil,   nil,   134,   nil,   133,
   133,   133,   133,   nil,   nil,   133,   133,   133,   nil,   133,
   133,   133,    74,   nil,    74,   nil,   133,    74,    74,   nil,
   nil,    74,    74,    73,   nil,    73,   nil,   nil,    73,   133,
   nil,   nil,    73,    73,    72,   nil,    72,   nil,   nil,    72,
    71,   nil,    71,    72,    72,    71,   nil,   nil,   nil,    71,
    71,   nil,   nil,   nil,   nil,   131,   nil,   131,    74,   nil,
   131,   nil,   nil,   nil,   131,   131,   nil,   nil,   nil,    73,
   nil,   131,   131,   131,   131,   nil,   nil,   131,   131,   131,
    72,   131,   131,   131,   nil,    70,    71,    70,   131,   nil,
    70,   nil,   nil,   nil,    70,    70,   nil,    58,   nil,    58,
   nil,   131,    58,    59,   nil,    59,    58,    58,    59,    60,
   nil,    60,    59,    59,    60,    61,   nil,    61,    60,    60,
    61,   nil,   nil,   nil,    61,    61,   nil,    62,   nil,    62,
   nil,    70,    62,   nil,   nil,   nil,    62,    62,   nil,   nil,
   nil,   nil,    63,    58,    63,   nil,   nil,    63,    64,    59,
    64,    63,    63,    64,    65,    60,    65,    64,    64,    65,
    66,    61,    66,    65,    65,    66,    67,   nil,    67,    66,
    66,    67,    68,    62,    68,    67,    67,    68,   nil,   nil,
   nil,    68,    68,   nil,   nil,   nil,   nil,   nil,    63,   nil,
   nil,   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,
    65,   nil,   nil,   nil,   nil,   116,    66,   116,   nil,   nil,
   116,   nil,    67,   nil,   116,   116,   nil,   nil,    68,   nil,
   nil,   nil,   116,   116,   116,   nil,   nil,   116,   116,   116,
   nil,   116,   116,   116,   153,   153,   153,   153,   116,   nil,
   nil,   nil,   nil,   nil,   153,   nil,   153,    50,    50,    50,
    50,   116,   nil,   nil,   nil,   nil,   nil,    50,   nil,    50,
   105,   105,   105,   105,   153,   nil,   nil,   nil,   153,   153,
   153,   153,   153,   153,   nil,   nil,   153,   153,   153,   nil,
   nil,    50,    50,    50,    50,    50,    50,   nil,   nil,    50,
    50,    50,   nil,   nil,   105,   105,   105,   105,   105,   105,
   nil,   nil,   105,   105,   105,   132,   132,   132,   132,   nil,
   nil,   nil,   nil,   nil,   nil,   132,   nil,   132,    46,    46,
    46,    46,   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,
    46,   nil,   nil,   nil,   132,   nil,   nil,   nil,   nil,   132,
   132,   132,   132,   132,   132,   nil,   nil,   132,   132,   132,
   nil,   nil,    46,    46,    46,    46,    46,    46,   nil,    46,
    46,    46,    46,    75,    75,    75,    75,   nil,   nil,   nil,
   nil,   nil,   nil,    75,   nil,    75,   110,   110,   110,   110,
    75,   nil,   nil,   nil,   nil,   nil,   110,   nil,   110,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    75,    75,    75,
    75,    75,    75,   nil,   nil,    75,    75,    75,   nil,   nil,
   110,   110,   110,   110,   110,   110,   nil,   110,   110,   110,
   110,    77,    77,    77,    77,   nil,   nil,   nil,   nil,   nil,
   nil,    77,   nil,    77,    78,    78,    78,    78,   nil,   nil,
   nil,   nil,   nil,   nil,    78,    77,    78,   nil,   nil,   nil,
   nil,   nil,   nil,    78,   nil,    77,    77,    77,    77,    77,
    77,   nil,   nil,    77,    77,    77,   nil,   nil,    78,    78,
    78,    78,    78,    78,   nil,   nil,    78,    78,    78,    80,
    80,    80,    80,   nil,    80,   nil,   nil,   nil,   nil,    80,
   nil,    80,   109,   109,   109,   109,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   108,   108,   108,   108,   nil,   nil,   nil,
   nil,   nil,   nil,    80,    80,    80,    80,    80,    80,   nil,
   nil,    80,    80,    80,   nil,   nil,   109,   109,   109,   109,
   109,   109,   nil,   nil,   109,   109,   109,   108,   108,   108,
   108,   108,   108,   nil,   nil,   108,   108,   108,   102,   102,
   102,   102,   nil,   nil,   nil,   nil,   nil,   nil,   102,   104,
   104,   104,   104,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   102,   102,   102,   102,   102,   102,   nil,   nil,
   102,   102,   102,   104,   104,   104,   104,   104,   104,   nil,
   nil,   104,   104,   104,    24,    24,    24,    24,   nil,   nil,
   nil,   nil,   nil,   nil,    24,   nil,    24,   106,   106,   106,
   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,    24,
    24,    24,    24,    24,   nil,    24,    24,    24,    24,   nil,
   nil,   106,   106,   106,   106,   106,   106,   nil,   nil,   106,
   106,   106,   164,   164,   164,   164,   nil,   nil,   nil,   nil,
   nil,   nil,   164,   nil,   164,   103,   103,   103,   103,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   107,   107,   107,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   164,   164,   164,   164,
   164,   164,   nil,   nil,   164,   164,   164,   nil,   nil,   103,
   103,   103,   103,   103,   103,   nil,   nil,   103,   103,   103,
   107,   107,   107,   107,   107,   107,   nil,   nil,   107,   107,
   107 ]

racc_action_pointer = [
    95,   153,   nil,   136,   116,    93,   136,   144,   nil,   121,
   nil,   176,   206,    -2,   nil,   nil,   267,   nil,   nil,    79,
    19,     2,   nil,    80,  1221,    -2,   429,    67,   448,   454,
   nil,   460,   471,   nil,   nil,   nil,   nil,    37,    61,   nil,
   534,    84,    70,   nil,   nil,    37,   935,   nil,    39,   -12,
   864,   nil,   nil,   nil,    72,     1,   nil,   nil,   715,   721,
   727,   733,   745,   760,   766,   772,   778,   784,   790,   477,
   703,   658,   652,   641,   630,   980,    24,  1038,  1051,   nil,
  1096,     3,   -19,   nil,   -17,   400,   -22,    86,   -28,   -24,
   nil,   nil,   nil,    13,   nil,    52,   114,   nil,   nil,   nil,
   nil,   nil,  1165,  1292,  1176,   877,  1234,  1303,  1120,  1109,
   993,    44,   nil,    -3,   335,   394,   823,   502,   nil,    -3,
    -4,   nil,    52,   nil,   nil,    81,    12,   nil,   nil,   nil,
    21,   673,   922,   601,   569,    75,    65,    56,    65,   nil,
    61,   nil,   nil,    70,   442,    78,    79,   365,   273,   nil,
   nil,   nil,   nil,   851,   nil,   nil,   114,   113,    82,   117,
   563,   101,   103,   305,  1279,   nil,   nil,   238,   110,   nil ]

racc_action_default = [
    -3,   -76,    -1,   -76,    -3,   -76,   -76,   -76,    -4,   -76,
   170,   -76,   -76,   -76,   -24,   -26,   -76,   -28,   -29,   -76,
   -76,   -76,   -33,   -76,   -76,   -74,   -76,   -76,   -76,   -76,
   -53,   -76,   -76,   -71,   -72,   -73,   -75,    -9,   -76,   -25,
   -76,   -76,   -76,   -12,   -13,   -76,   -76,   -74,   -76,   -76,
   -36,   -37,   -38,   -40,   -74,   -76,   -34,   -35,   -76,   -76,
   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -76,
   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -76,   -61,
   -76,   -76,   -76,    -2,   -76,   -76,   -76,   -14,   -76,   -18,
   -27,   -30,   -31,   -76,   -32,   -54,   -55,   -56,   -57,   -58,
   -59,   -60,   -63,   -64,   -65,   -66,   -67,   -68,   -69,   -70,
   -76,   -76,   -50,   -51,   -76,   -76,   -76,   -76,   -62,   -20,
   -10,    -6,   -76,    -8,   -15,   -16,   -76,   -39,   -41,   -49,
   -76,   -76,   -76,   -76,   -76,   -76,   -76,    -9,   -76,   -17,
   -18,   -19,   -52,   -76,   -76,   -76,   -76,   -76,   -22,   -21,
   -11,    -7,   -42,   -45,   -44,   -47,   -76,   -76,   -23,   -76,
   -76,   -76,   -76,   -76,   -46,   -48,    -5,   -76,   -76,   -43 ]

racc_goto_table = [
    11,    39,    41,    46,    81,    40,    82,    50,    50,    88,
    49,    55,     1,    75,    87,    77,    78,   157,    79,    80,
    52,    52,     3,   135,     2,   159,     8,   111,   nil,   nil,
    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    95,    96,    97,    98,    99,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   113,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   124,   nil,   122,   nil,
    50,   nil,   nil,   127,   nil,   nil,   nil,   nil,   nil,   nil,
   141,   nil,   nil,    52,   142,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   132,   nil,   150,   149,    82,   131,   nil,   133,
   134,   nil,    39,   nil,   139,   nil,   nil,   nil,   nil,   nil,
   nil,    39,   nil,    39,    39,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   156,   158,   nil,   nil,   nil,   nil,    39,   164,    39,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   167,    39 ]

racc_goto_check = [
     4,    14,    10,    15,     6,     4,    11,    15,    15,    13,
    17,    17,     1,    15,    12,    15,    15,     8,    15,    15,
    19,    19,     3,     7,     2,    21,     3,    22,   nil,   nil,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,    15,    15,    15,    15,
    15,    15,    15,    15,    15,    15,    15,    15,    15,    15,
    15,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,     4,   nil,
    15,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,    19,    13,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,   nil,     6,    11,    11,     4,   nil,     4,
     4,   nil,    14,   nil,    10,   nil,   nil,   nil,   nil,   nil,
   nil,    14,   nil,    14,    14,   nil,   nil,   nil,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     4,   nil,   nil,   nil,   nil,    14,    15,    14,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,    14 ]

racc_goto_pointer = [
   nil,    12,    24,    22,    -7,   nil,   -33,   -96,  -131,   nil,
   -11,   -31,   -31,   -36,   -10,   -13,   nil,   -10,   nil,     0,
   nil,  -128,   -47,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,    15,
   nil,    45,    17,   nil,    14,    24,    18,   nil,    22,    23,
    51,   nil,   nil,    30,    36 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  0, 57, :_reduce_none,
  2, 57, :_reduce_none,
  10, 59, :_reduce_5,
  4, 63, :_reduce_6,
  6, 63, :_reduce_7,
  4, 63, :_reduce_8,
  0, 60, :_reduce_none,
  2, 60, :_reduce_10,
  4, 60, :_reduce_11,
  1, 65, :_reduce_12,
  1, 65, :_reduce_13,
  2, 64, :_reduce_14,
  3, 64, :_reduce_15,
  3, 64, :_reduce_16,
  4, 64, :_reduce_17,
  1, 67, :_reduce_18,
  3, 67, :_reduce_19,
  0, 61, :_reduce_none,
  2, 61, :_reduce_21,
  0, 62, :_reduce_none,
  1, 62, :_reduce_23,
  1, 58, :_reduce_24,
  2, 58, :_reduce_25,
  1, 68, :_reduce_26,
  3, 68, :_reduce_27,
  1, 68, :_reduce_28,
  1, 68, :_reduce_29,
  3, 68, :_reduce_30,
  3, 68, :_reduce_31,
  3, 68, :_reduce_32,
  1, 68, :_reduce_33,
  2, 68, :_reduce_34,
  2, 68, :_reduce_35,
  1, 71, :_reduce_36,
  1, 71, :_reduce_37,
  1, 71, :_reduce_38,
  3, 71, :_reduce_39,
  1, 74, :_reduce_40,
  4, 66, :_reduce_41,
  6, 70, :_reduce_42,
  11, 70, :_reduce_43,
  6, 70, :_reduce_44,
  0, 75, :_reduce_none,
  2, 75, :_reduce_46,
  6, 72, :_reduce_47,
  8, 72, :_reduce_48,
  4, 73, :_reduce_49,
  3, 73, :_reduce_50,
  1, 76, :_reduce_51,
  3, 76, :_reduce_52,
  1, 69, :_reduce_none,
  3, 69, :_reduce_54,
  3, 69, :_reduce_55,
  3, 69, :_reduce_56,
  3, 69, :_reduce_57,
  3, 69, :_reduce_58,
  3, 69, :_reduce_59,
  3, 69, :_reduce_60,
  2, 69, :_reduce_61,
  3, 69, :_reduce_62,
  3, 69, :_reduce_63,
  3, 69, :_reduce_64,
  3, 69, :_reduce_65,
  3, 69, :_reduce_66,
  3, 69, :_reduce_67,
  3, 69, :_reduce_68,
  3, 69, :_reduce_69,
  3, 69, :_reduce_70,
  1, 78, :_reduce_71,
  1, 78, :_reduce_72,
  1, 77, :_reduce_73,
  1, 77, :_reduce_74,
  1, 77, :_reduce_none ]

racc_reduce_n = 76

racc_shift_n = 170

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "type",
  "Assign",
  "ListID",
  "Inst",
  "Expr",
  "Iterator",
  "writable",
  "Cond",
  "Call",
  "Str",
  "by",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    puts "scope"
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'retina_parser.y', 57)
  def _reduce_5(val, _values, result)
    puts "funcion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 61)
  def _reduce_6(val, _values, result)
    puts "do"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    puts "with do"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_8(val, _values, result)
    puts "with do"
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_10(val, _values, result)
    puts "lista parametros"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_11(val, _values, result)
    puts "lista parámetros"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 73)
  def _reduce_12(val, _values, result)
    puts "number"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 74)
  def _reduce_13(val, _values, result)
    puts "boolean"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_14(val, _values, result)
    puts "asignacion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 79)
  def _reduce_15(val, _values, result)
    puts "asignaciones"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_16(val, _values, result)
    puts "declaracions"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_17(val, _values, result)
    puts "declaraciones"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_18(val, _values, result)
    puts val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 87)
  def _reduce_19(val, _values, result)
    puts "list id #{val[0]}"
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_21(val, _values, result)
    puts "->"
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_23(val, _values, result)
    puts "instrucciones en funcion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_24(val, _values, result)
    puts "Instruccion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_25(val, _values, result)
    puts "Lista Instruccion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_26(val, _values, result)
    puts "bloquewith"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_27(val, _values, result)
    puts "return"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_28(val, _values, result)
    puts "asignacion"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_29(val, _values, result)
    puts "iterator"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_30(val, _values, result)
    puts "read"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_31(val, _values, result)
    puts "write"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_32(val, _values, result)
    puts "writeln"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_33(val, _values, result)
    puts "considtional"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_34(val, _values, result)
    puts "call"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_35(val, _values, result)
    puts "Expresion como instr"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_36(val, _values, result)
    puts "write expr"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_37(val, _values, result)
    puts "write str"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_38(val, _values, result)
    puts "write call"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_39(val, _values, result)
    puts "lista write"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_40(val, _values, result)
    puts "string #{val[0]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_41(val, _values, result)
    puts "asignacion #{val[0]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_42(val, _values, result)
    puts "bloque while"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_43(val, _values, result)
    puts "bloque for"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_44(val, _values, result)
    puts "bloque repeat"
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_46(val, _values, result)
    puts "by"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_47(val, _values, result)
    puts "cond if" 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_48(val, _values, result)
    puts "con if else"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_49(val, _values, result)
    puts "call"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_50(val, _values, result)
    puts "call sin param"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 154)
  def _reduce_51(val, _values, result)
    puts "param expr"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_52(val, _values, result)
    puts "lista param"
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_54(val, _values, result)
    result = BinExp.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_55(val, _values, result)
    result = BinExp.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 167)
  def _reduce_56(val, _values, result)
    result = BinExp.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_57(val, _values, result)
    result = BinExp.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 169)
  def _reduce_58(val, _values, result)
    result = BinExp.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_59(val, _values, result)
    result = BinExp.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_60(val, _values, result)
    result = BinExp.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_61(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_62(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 174)
  def _reduce_63(val, _values, result)
    result = BinExp.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 175)
  def _reduce_64(val, _values, result)
    result = BinExp.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 176)
  def _reduce_65(val, _values, result)
    result = BinExp.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_66(val, _values, result)
    result = BinExp.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_67(val, _values, result)
    result = BinExp.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 179)
  def _reduce_68(val, _values, result)
    result = BinExp.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 180)
  def _reduce_69(val, _values, result)
    result = BinExp.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_70(val, _values, result)
    result = BinExp.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 187)
  def _reduce_71(val, _values, result)
    result = Terms.new(:TRUE , val[0]); puts "true"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 188)
  def _reduce_72(val, _values, result)
    result = Terms.new(:FALSE , val[0]);puts "false"
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 192)
  def _reduce_73(val, _values, result)
    result= Terms.new(:DIGIT,val[0]); puts val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 193)
  def _reduce_74(val, _values, result)
    result = Terms.new(:ID , val[0]); puts val[0]
    result
  end
.,.,

# reduce 75 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
