#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"

require_relative 'retina_ast'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            case @token.symbol
                when :TYPEN,:TYPEB
                tokenName="tipo de dato"
            when :TRUE,:FALSE
                tokenName="literal booleano"
            when :AND,:NOT,:OR
                tokenName="operador booleano"
            when :PROGRAM,:BEGIN,:END,:WITH,:DO,:IF,:THEN,:READ,:ELSE,:WHILE,:FOR,:REPEAT,:WRITE,:WRITELN,:FROM,:TO,:BY,:FUNC,:RETURN,:RETURN2
                tokenName="palabra reservada"
            when :EQUIVALENT,:LESSTHAN,:DISTINCT,:GETHAN,:LESSTHAN,:GREATTHAN
                tokenName="operador de comparación"
            when :LPARENT,:RPARENT,:EQUAL,:SEMICOLON,:COLON,:RCURLY,:LCURLY
                tokenName="signo"
            when :PLUS,:MOD,:DIV,:MOD2,:DIV2,:MULT,:LESS
                tokenName="operador aritmético"
            when :ID
                tokenName="identificador"
            when :STRING
                tokenName="string"
            when :DIGIT
                tokenName="literal numérico"
            end
           return " Línea #{@token.position[0]}, Column #{@token.position[1]}: token inesperado : "<< tokenName << " : #{@token.id}"
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 307)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
    if ((token = @lexer.next_token)!=nil)
        return [token.symbol,token]
    else 
        return nil
    end

end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    63,    64,    65,    66,    38,   -17,    33,    46,    47,    35,
    71,    79,    70,    36,    37,    38,    34,    33,    45,    78,
    35,    38,     5,    33,    36,    37,    35,    34,   136,   164,
    36,    37,   219,    34,    77,    72,    76,    75,    74,    73,
   101,   -17,    69,    68,    67,    46,    47,    78,   136,   141,
    16,    55,    65,    66,    38,   159,    33,    98,   165,    35,
   160,    16,    55,    36,    37,    99,    34,    16,    55,    38,
   158,    33,    65,    66,    35,    38,   167,    33,    36,    37,
    35,    34,   100,   168,    36,    37,    38,    34,    33,   156,
   101,    35,    69,    68,    67,    36,    37,    38,    34,    33,
    16,    55,    35,   218,    10,   237,    36,    37,   151,    34,
   238,    99,    69,    68,    67,    16,    55,   191,    38,   192,
    33,    16,    55,    35,    46,    47,   150,    36,    37,   149,
    34,   148,    81,    46,    47,   172,   171,   188,    46,    47,
   185,   186,   187,    81,   179,   180,   181,   140,    38,   195,
    33,   176,    10,    35,    46,    47,   139,    36,    37,   135,
    34,    46,    47,   202,    16,   172,   171,   188,   133,   130,
   185,   186,   187,    10,   179,   180,   181,    10,    38,   128,
    33,   176,   208,    35,   124,   210,   211,    36,    37,   212,
    34,   213,   214,   215,    16,    15,    14,    31,   161,   217,
    28,    29,    30,    79,    21,    22,    23,    97,    38,    10,
    33,   221,    93,    35,    92,    91,    90,    36,    37,   225,
    34,    10,   227,    61,    16,   172,   171,   188,    10,    42,
   185,   186,   187,    41,   179,   180,   181,   232,    38,   233,
    33,   176,   234,    35,    40,   236,    11,    36,    37,   239,
    34,   240,   241,    10,    16,   172,   171,   188,   243,   244,
   185,   186,   187,     5,   179,   180,   181,     7,    38,   247,
    33,   176,   248,    35,   249,     6,   251,    36,    37,   252,
    34,   nil,   nil,   nil,    16,    15,    14,    31,   nil,   nil,
    28,    29,    30,   nil,    21,    22,    23,    38,   nil,    33,
   nil,   nil,    35,    38,   nil,    33,    36,    37,    35,    34,
   nil,   nil,    36,    37,    16,    34,   nil,   nil,   nil,    13,
    15,    14,    31,   nil,   nil,    28,    29,    30,   nil,    21,
    22,    23,   nil,   nil,   nil,    38,   nil,    33,   nil,   nil,
    35,   nil,   nil,    81,    36,    37,   nil,    34,   nil,    16,
   nil,   nil,   172,   171,   188,   nil,   nil,   185,   186,   187,
   nil,   179,   180,   181,   nil,    38,   nil,    33,   176,   nil,
    35,   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,
   nil,    16,   172,   171,   188,   nil,   nil,   185,   186,   187,
   nil,   179,   180,   181,   nil,    38,   nil,    33,   176,   nil,
    35,   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,
   nil,    16,    15,    14,    31,   nil,   nil,    28,    29,    30,
   nil,    21,    22,    23,    38,   nil,    33,   nil,   nil,    35,
    38,   nil,    33,    36,    37,    35,    34,   nil,   nil,    36,
    37,    16,    34,   nil,   nil,   nil,   nil,   172,   171,   188,
   nil,   nil,   185,   186,   187,   nil,   179,   180,   181,    38,
   nil,    33,   nil,   176,    35,   nil,   nil,   nil,    36,    37,
    81,    34,    38,   nil,    33,   nil,    16,    35,    38,   nil,
    33,    36,    37,    35,    34,   nil,   nil,    36,    37,    38,
    34,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,    38,   nil,    33,    81,   nil,    35,   nil,   nil,
   nil,    36,    37,   nil,    34,   nil,   nil,   nil,    81,   nil,
   nil,    38,   nil,    33,    81,   nil,    35,    38,   nil,    33,
    36,    37,    35,    34,   nil,    81,    36,    37,   nil,    34,
   nil,   nil,   nil,   nil,    15,    14,    31,   nil,    81,    28,
    29,    30,   nil,    21,    22,    23,   nil,   nil,   nil,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,    81,    36,    37,
   nil,    34,   nil,    16,   nil,   nil,    15,    14,    31,   nil,
   nil,    28,    29,    30,   nil,    21,    22,    23,   nil,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,   nil,   nil,   nil,    16,    15,    14,    31,   nil,
   nil,    28,    29,    30,   nil,    21,    22,    23,   nil,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,   nil,   nil,   nil,    16,    15,    14,    31,   nil,
   nil,    28,    29,    30,   nil,    21,    22,    23,    38,   nil,
    33,   nil,   nil,    35,    38,   nil,    33,    36,    37,    35,
    34,   nil,   nil,    36,    37,    16,    34,   nil,   nil,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,   nil,   nil,   nil,   nil,   172,   171,   188,   nil,
   nil,   185,   186,   187,    16,   179,   180,   181,   nil,    38,
    81,    33,   176,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,   nil,   nil,    38,    16,    33,   nil,   nil,    35,
   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,   nil,
   nil,   172,   171,   188,   nil,   nil,   185,   186,   187,   nil,
   179,   180,   181,   nil,   nil,    81,    38,   176,    33,   nil,
   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,   nil,
    16,   nil,   132,    15,    14,    31,   nil,   nil,    28,    29,
    30,   nil,    21,    22,    23,    38,   nil,    33,   nil,   nil,
    35,    38,   nil,    33,    36,    37,    35,    34,   nil,   nil,
    36,    37,    16,    34,    38,   nil,    33,   nil,   nil,    35,
    38,   nil,    33,    36,    37,    35,    34,   nil,   nil,    36,
    37,   nil,    34,    38,   nil,    33,   nil,   nil,    35,   nil,
   nil,    81,    36,    37,    38,    34,    33,    81,   nil,    35,
   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,    38,
    81,    33,   nil,   nil,    35,    38,    81,    33,    36,    37,
    35,    34,   nil,   nil,    36,    37,    38,    34,    33,    81,
   nil,    35,    38,   nil,    33,    36,    37,    35,    34,   nil,
    81,    36,    37,   nil,    34,   nil,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,    81,    36,    37,    38,    34,
    33,    81,   nil,    35,    38,   nil,    33,    36,    37,    35,
    34,   nil,    81,    36,    37,    38,    34,    33,    81,   nil,
    35,   nil,   nil,   nil,    36,    37,    38,    34,    33,   nil,
   nil,    35,   nil,    81,   nil,    36,    37,    38,    34,    33,
   nil,   nil,    35,    38,    81,    33,    36,    37,    35,    34,
    81,   nil,    36,    37,    38,    34,    33,   nil,   nil,    35,
   121,    81,   nil,    36,    37,    38,    34,    33,   nil,   nil,
    35,   nil,    81,   nil,    36,    37,    38,    34,    33,   nil,
   nil,    35,   nil,    81,   nil,    36,    37,   nil,    34,    16,
   nil,    63,    64,    65,    66,   nil,   nil,   nil,   nil,   nil,
    81,    71,   nil,    70,    63,    64,    65,    66,   nil,   nil,
   nil,    81,   nil,   nil,    71,   125,    70,   nil,   nil,   nil,
   nil,   nil,    81,   126,   nil,    77,    72,    76,    75,    74,
    73,   nil,   nil,    69,    68,    67,   nil,   nil,    77,    72,
    76,    75,    74,    73,   nil,   nil,    69,    68,    67,    63,
    64,    65,    66,   nil,   127,   nil,   nil,   nil,   nil,    71,
   nil,    70,    63,    64,    65,    66,   nil,   nil,   nil,   nil,
   nil,   nil,    71,   nil,    70,   nil,   nil,   nil,   nil,   123,
   nil,   nil,   nil,    77,    72,    76,    75,    74,    73,   nil,
   nil,    69,    68,    67,   nil,   nil,    77,    72,    76,    75,
    74,    73,   nil,   nil,    69,    68,    67,    63,    64,    65,
    66,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,    70,
    63,    64,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,
    71,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    77,    72,    76,    75,    74,    73,   nil,   216,    69,
    68,    67,   nil,   nil,    77,    72,    76,    75,    74,    73,
   nil,   nil,    69,    68,    67,    63,    64,    65,    66,   nil,
   nil,   nil,   nil,   nil,   nil,    71,   nil,    70,    63,    64,
    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,
    70,   nil,   nil,   nil,   nil,   190,   nil,   nil,   nil,    77,
    72,    76,    75,    74,    73,   nil,   nil,    69,    68,    67,
   nil,   nil,    77,    72,    76,    75,    74,    73,   nil,   203,
    69,    68,    67,    63,    64,    65,    66,   nil,   nil,   nil,
   nil,   nil,   nil,    71,   nil,    70,   nil,   nil,   nil,    63,
    64,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,    71,
   nil,    70,   157,   nil,   nil,   nil,   nil,    77,    72,    76,
    75,    74,    73,   nil,   nil,    69,    68,    67,   235,   nil,
   nil,   nil,   nil,    77,    72,    76,    75,    74,    73,   nil,
   nil,    69,    68,    67,    63,    64,    65,    66,   nil,   nil,
   nil,   nil,   nil,   nil,    71,   nil,    70,    63,    64,    65,
    66,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,    70,
   nil,   nil,   nil,   nil,   190,   nil,   nil,   nil,    77,    72,
    76,    75,    74,    73,   nil,   nil,    69,    68,    67,   nil,
   nil,    77,    72,    76,    75,    74,    73,   nil,   nil,    69,
    68,    67,    63,    64,    65,    66,   nil,   nil,   nil,   nil,
   nil,   nil,    71,   nil,    70,    63,    64,    65,    66,   nil,
   nil,   nil,   nil,   nil,   nil,    71,   nil,    70,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    77,    72,    76,    75,
    74,    73,   nil,    62,    69,    68,    67,   nil,   nil,    77,
    72,    76,    75,    74,    73,   nil,   nil,    69,    68,    67,
    63,    64,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,
    71,   nil,    70,    63,    64,    65,    66,   nil,   nil,   223,
   nil,   nil,   nil,    71,    63,    64,    65,    66,   nil,   nil,
   nil,   nil,   nil,   nil,    77,    72,    76,    75,    74,    73,
   nil,   nil,    69,    68,    67,   nil,   nil,    77,    72,    76,
    75,    74,    73,   nil,   nil,    69,    68,    67,    77,    72,
    76,    75,    74,    73,   nil,   nil,    69,    68,    67,    63,
    64,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    63,    64,    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    63,    64,    65,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  -108,  -108,  -108,  -108,  -108,  -108,   nil,
   nil,    69,    68,    67,  -108,  -108,  -108,  -108,  -108,  -108,
   nil,   nil,    69,    68,    67,  -108,  -108,  -108,  -108,  -108,
  -108,   nil,   nil,    69,    68,    67,    63,    64,    65,    66,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    63,    64,    65,
    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  -108,  -108,  -108,  -108,  -108,  -108,   nil,   nil,    69,    68,
    67,  -108,  -108,  -108,  -108,  -108,  -108,   nil,   nil,    69,
    68,    67,    63,    64,    65,    66,   nil,   nil,   nil,   nil,
   nil,   nil,    71,   nil,    70,   nil,   nil,   nil,   nil,   220,
   nil,   nil,   nil,    63,    64,    65,    66,   nil,   nil,   nil,
   nil,   nil,   nil,    71,   nil,    70,    77,    72,    76,    75,
    74,    73,   nil,   nil,    69,    68,    67,   222,    63,    64,
    65,    66,   nil,   nil,   nil,   nil,   nil,    77,    72,    76,
    75,    74,    73,   nil,   nil,    69,    68,    67,    63,    64,
    65,    66,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,
    70,   nil,  -108,  -108,  -108,  -108,  -108,  -108,   nil,   nil,
    69,    68,    67,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    77,    72,    76,    75,    74,    73,   nil,   nil,
    69,    68,    67 ]

racc_action_check = [
   122,   122,   122,   122,   101,    16,   101,    15,    15,   101,
   122,    27,   122,   101,   101,    99,   101,    99,    15,    96,
    99,   181,     0,   181,    99,    99,   181,    99,    96,   150,
   181,   181,   201,   181,   122,   122,   122,   122,   122,   122,
   201,    16,   122,   122,   122,   135,   135,    27,   153,   122,
   101,   101,   102,   102,   180,   146,   180,    51,   156,   180,
   146,    99,    99,   180,   180,    51,   180,   181,   181,    22,
   145,    22,   103,   103,    22,    23,   158,    23,    22,    22,
    23,    22,    57,   159,    23,    23,   124,    23,   124,   143,
    57,   124,   102,   102,   102,   124,   124,   221,   124,   221,
   180,   180,   221,   200,   136,   231,   221,   221,   132,   221,
   231,   200,   103,   103,   103,    22,    22,   169,   223,   170,
   223,    23,    23,   223,    94,    94,   131,   223,   223,   129,
   223,   128,   124,    40,    40,   223,   223,   223,   172,   172,
   223,   223,   223,   221,   223,   223,   223,   120,   222,   172,
   222,   223,   179,   222,   149,   149,   117,   222,   222,    95,
   222,   148,   148,   183,   223,   222,   222,   222,    93,    91,
   222,   222,   222,   186,   222,   222,   222,    89,    14,    88,
    14,   222,   189,    14,    82,   191,   192,    14,    14,   193,
    14,   194,   195,   197,   222,    14,    14,    14,   147,   199,
    14,    14,    14,    56,    14,    14,    14,    50,   161,    48,
   161,   205,    45,   161,    44,    43,    41,   161,   161,   212,
   161,    29,   214,    25,    14,   161,   161,   161,    21,    13,
   161,   161,   161,    12,   161,   161,   161,   224,   171,   226,
   171,   161,   228,   171,     9,   230,     6,   171,   171,   232,
   171,   233,   234,     5,   161,   171,   171,   171,   236,   237,
   171,   171,   171,     4,   171,   171,   171,     3,    17,   245,
    17,   171,   246,    17,   247,     1,   250,    17,    17,   251,
    17,   nil,   nil,   nil,   171,    17,    17,    17,   nil,   nil,
    17,    17,    17,   nil,    17,    17,    17,    67,   nil,    67,
   nil,   nil,    67,     7,   nil,     7,    67,    67,     7,    67,
   nil,   nil,     7,     7,    17,     7,   nil,   nil,   nil,     7,
     7,     7,     7,   nil,   nil,     7,     7,     7,   nil,     7,
     7,     7,   nil,   nil,   nil,   220,   nil,   220,   nil,   nil,
   220,   nil,   nil,    67,   220,   220,   nil,   220,   nil,     7,
   nil,   nil,   220,   220,   220,   nil,   nil,   220,   220,   220,
   nil,   220,   220,   220,   nil,   174,   nil,   174,   220,   nil,
   174,   nil,   nil,   nil,   174,   174,   nil,   174,   nil,   nil,
   nil,   220,   174,   174,   174,   nil,   nil,   174,   174,   174,
   nil,   174,   174,   174,   nil,   126,   nil,   126,   174,   nil,
   126,   nil,   nil,   nil,   126,   126,   nil,   126,   nil,   nil,
   nil,   174,   126,   126,   126,   nil,   nil,   126,   126,   126,
   nil,   126,   126,   126,    28,   nil,    28,   nil,   nil,    28,
   213,   nil,   213,    28,    28,   213,    28,   nil,   nil,   213,
   213,   126,   213,   nil,   nil,   nil,   nil,   213,   213,   213,
   nil,   nil,   213,   213,   213,   nil,   213,   213,   213,    30,
   nil,    30,   nil,   213,    30,   nil,   nil,   nil,    30,    30,
    28,    30,    31,   nil,    31,   nil,   213,    31,    33,   nil,
    33,    31,    31,    33,    31,   nil,   nil,    33,    33,   190,
    33,   190,   nil,   nil,   190,   nil,   nil,   nil,   190,   190,
   nil,   190,    35,   nil,    35,    30,   nil,    35,   nil,   nil,
   nil,    35,    35,   nil,    35,   nil,   nil,   nil,    31,   nil,
   nil,   141,   nil,   141,    33,   nil,   141,   125,   nil,   125,
   141,   141,   125,   141,   nil,   190,   125,   125,   nil,   125,
   nil,   nil,   nil,   nil,   125,   125,   125,   nil,    35,   125,
   125,   125,   nil,   125,   125,   125,   nil,   nil,   nil,   208,
   nil,   208,   nil,   nil,   208,   nil,   nil,   141,   208,   208,
   nil,   208,   nil,   125,   nil,   nil,   208,   208,   208,   nil,
   nil,   208,   208,   208,   nil,   208,   208,   208,   nil,   123,
   nil,   123,   nil,   nil,   123,   nil,   nil,   nil,   123,   123,
   nil,   123,   nil,   nil,   nil,   208,   123,   123,   123,   nil,
   nil,   123,   123,   123,   nil,   123,   123,   123,   nil,   160,
   nil,   160,   nil,   nil,   160,   nil,   nil,   nil,   160,   160,
   nil,   160,   nil,   nil,   nil,   123,   160,   160,   160,   nil,
   nil,   160,   160,   160,   nil,   160,   160,   160,   176,   nil,
   176,   nil,   nil,   176,   235,   nil,   235,   176,   176,   235,
   176,   nil,   nil,   235,   235,   160,   235,   nil,   nil,   238,
   nil,   238,   nil,   nil,   238,   nil,   nil,   nil,   238,   238,
   nil,   238,   nil,   nil,   nil,   nil,   238,   238,   238,   nil,
   nil,   238,   238,   238,   176,   238,   238,   238,   nil,   157,
   235,   157,   238,   nil,   157,   nil,   nil,   nil,   157,   157,
   nil,   157,   nil,   nil,   248,   238,   248,   nil,   nil,   248,
   nil,   nil,   nil,   248,   248,   nil,   248,   nil,   nil,   nil,
   nil,   248,   248,   248,   nil,   nil,   248,   248,   248,   nil,
   248,   248,   248,   nil,   nil,   157,    92,   248,    92,   nil,
   nil,    92,   nil,   nil,   nil,    92,    92,   nil,    92,   nil,
   248,   nil,    92,    92,    92,    92,   nil,   nil,    92,    92,
    92,   nil,    92,    92,    92,   185,   nil,   185,   nil,   nil,
   185,    63,   nil,    63,   185,   185,    63,   185,   nil,   nil,
    63,    63,    92,    63,    64,   nil,    64,   nil,   nil,    64,
    65,   nil,    65,    64,    64,    65,    64,   nil,   nil,    65,
    65,   nil,    65,    66,   nil,    66,   nil,   nil,    66,   nil,
   nil,   185,    66,    66,   187,    66,   187,    63,   nil,   187,
   nil,   nil,   nil,   187,   187,   nil,   187,   nil,   nil,    68,
    64,    68,   nil,   nil,    68,    69,    65,    69,    68,    68,
    69,    68,   nil,   nil,    69,    69,    70,    69,    70,    66,
   nil,    70,    71,   nil,    71,    70,    70,    71,    70,   nil,
   187,    71,    71,   nil,    71,   nil,   nil,    72,   nil,    72,
   nil,   nil,    72,   nil,   nil,    68,    72,    72,    73,    72,
    73,    69,   nil,    73,    74,   nil,    74,    73,    73,    74,
    73,   nil,    70,    74,    74,    75,    74,    75,    71,   nil,
    75,   nil,   nil,   nil,    75,    75,    76,    75,    76,   nil,
   nil,    76,   nil,    72,   nil,    76,    76,    77,    76,    77,
   nil,   nil,    77,    78,    73,    78,    77,    77,    78,    77,
    74,   nil,    78,    78,    79,    78,    79,   nil,   nil,    79,
    79,    75,   nil,    79,    79,   188,    79,   188,   nil,   nil,
   188,   nil,    76,   nil,   188,   188,    34,   188,    34,   nil,
   nil,    34,   nil,    77,   nil,    34,    34,   nil,    34,    78,
   nil,    83,    83,    83,    83,   nil,   nil,   nil,   nil,   nil,
    79,    83,   nil,    83,    84,    84,    84,    84,   nil,   nil,
   nil,   188,   nil,   nil,    84,    83,    84,   nil,   nil,   nil,
   nil,   nil,    34,    84,   nil,    83,    83,    83,    83,    83,
    83,   nil,   nil,    83,    83,    83,   nil,   nil,    84,    84,
    84,    84,    84,    84,   nil,   nil,    84,    84,    84,    87,
    87,    87,    87,   nil,    87,   nil,   nil,   nil,   nil,    87,
   nil,    87,    80,    80,    80,    80,   nil,   nil,   nil,   nil,
   nil,   nil,    80,   nil,    80,   nil,   nil,   nil,   nil,    80,
   nil,   nil,   nil,    87,    87,    87,    87,    87,    87,   nil,
   nil,    87,    87,    87,   nil,   nil,    80,    80,    80,    80,
    80,    80,   nil,   nil,    80,    80,    80,   198,   198,   198,
   198,   nil,   nil,   nil,   nil,   nil,   nil,   198,   nil,   198,
    58,    58,    58,    58,   nil,   nil,   nil,   nil,   nil,   nil,
    58,   nil,    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   198,   198,   198,   198,   198,   198,   nil,   198,   198,
   198,   198,   nil,   nil,    58,    58,    58,    58,    58,    58,
   nil,   nil,    58,    58,    58,   242,   242,   242,   242,   nil,
   nil,   nil,   nil,   nil,   nil,   242,   nil,   242,   184,   184,
   184,   184,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,
   184,   nil,   nil,   nil,   nil,   242,   nil,   nil,   nil,   242,
   242,   242,   242,   242,   242,   nil,   nil,   242,   242,   242,
   nil,   nil,   184,   184,   184,   184,   184,   184,   nil,   184,
   184,   184,   184,   144,   144,   144,   144,   nil,   nil,   nil,
   nil,   nil,   nil,   144,   nil,   144,   nil,   nil,   nil,   229,
   229,   229,   229,   nil,   nil,   nil,   nil,   nil,   nil,   229,
   nil,   229,   144,   nil,   nil,   nil,   nil,   144,   144,   144,
   144,   144,   144,   nil,   nil,   144,   144,   144,   229,   nil,
   nil,   nil,   nil,   229,   229,   229,   229,   229,   229,   nil,
   nil,   229,   229,   229,   166,   166,   166,   166,   nil,   nil,
   nil,   nil,   nil,   nil,   166,   nil,   166,    52,    52,    52,
    52,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,    52,
   nil,   nil,   nil,   nil,   166,   nil,   nil,   nil,   166,   166,
   166,   166,   166,   166,   nil,   nil,   166,   166,   166,   nil,
   nil,    52,    52,    52,    52,    52,    52,   nil,   nil,    52,
    52,    52,    26,    26,    26,    26,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    26,   209,   209,   209,   209,   nil,
   nil,   nil,   nil,   nil,   nil,   209,   nil,   209,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,    26,    26,    26,
    26,    26,   nil,    26,    26,    26,    26,   nil,   nil,   209,
   209,   209,   209,   209,   209,   nil,   nil,   209,   209,   209,
   207,   207,   207,   207,   nil,   nil,   nil,   nil,   nil,   nil,
   207,   nil,   207,   109,   109,   109,   109,   nil,   nil,   207,
   nil,   nil,   nil,   109,   110,   110,   110,   110,   nil,   nil,
   nil,   nil,   nil,   nil,   207,   207,   207,   207,   207,   207,
   nil,   nil,   207,   207,   207,   nil,   nil,   109,   109,   109,
   109,   109,   109,   nil,   nil,   109,   109,   109,   110,   110,
   110,   110,   110,   110,   nil,   nil,   110,   110,   110,   111,
   111,   111,   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   112,   112,   112,   112,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   113,   113,   113,   113,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   111,   111,   111,   111,   111,   111,   nil,
   nil,   111,   111,   111,   112,   112,   112,   112,   112,   112,
   nil,   nil,   112,   112,   112,   113,   113,   113,   113,   113,
   113,   nil,   nil,   113,   113,   113,   114,   114,   114,   114,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   115,   115,   115,
   115,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   114,   114,   114,   114,   114,   114,   nil,   nil,   114,   114,
   114,   115,   115,   115,   115,   115,   115,   nil,   nil,   115,
   115,   115,   204,   204,   204,   204,   nil,   nil,   nil,   nil,
   nil,   nil,   204,   nil,   204,   nil,   nil,   nil,   nil,   204,
   nil,   nil,   nil,   206,   206,   206,   206,   nil,   nil,   nil,
   nil,   nil,   nil,   206,   nil,   206,   204,   204,   204,   204,
   204,   204,   nil,   nil,   204,   204,   204,   206,   116,   116,
   116,   116,   nil,   nil,   nil,   nil,   nil,   206,   206,   206,
   206,   206,   206,   nil,   nil,   206,   206,   206,   118,   118,
   118,   118,   nil,   nil,   nil,   nil,   nil,   nil,   118,   nil,
   118,   nil,   116,   116,   116,   116,   116,   116,   nil,   nil,
   116,   116,   116,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   118,   118,   118,   118,   118,   118,   nil,   nil,
   118,   118,   118 ]

racc_action_pointer = [
   -12,   275,   nil,   251,   229,   205,   246,   301,   nil,   237,
   nil,   nil,   215,   185,   176,    -2,    -2,   266,   nil,   nil,
   nil,   180,    67,    73,   nil,   179,  1329,     4,   422,   173,
   457,   470,   nil,   476,   964,   500,   nil,   nil,   nil,   nil,
   124,   172,   nil,   197,   194,   194,   nil,   nil,   161,   nil,
   163,    13,  1284,   nil,   nil,   nil,   196,    38,  1107,   nil,
   nil,   nil,   nil,   779,   792,   798,   811,   295,   837,   843,
   854,   860,   875,   886,   892,   903,   914,   925,   931,   942,
  1049,   nil,   153,   978,   991,   nil,   nil,  1036,   171,   129,
   nil,   125,   744,   124,   115,   115,   -24,   nil,   nil,    13,
   nil,     2,    47,    67,   nil,   nil,   nil,   nil,   nil,  1400,
  1411,  1456,  1467,  1478,  1523,  1534,  1625,   112,  1645,   nil,
   139,   nil,    -3,   587,    84,   525,   393,   nil,    95,    77,
   nil,   108,    64,   nil,   nil,    36,    56,   nil,   nil,   nil,
   nil,   519,   nil,    71,  1210,    52,    37,   181,   152,   145,
   -15,   nil,   nil,    -4,   nil,   nil,    14,   697,    32,    39,
   617,   206,   nil,   nil,   nil,   nil,  1271,   nil,   nil,    99,
   101,   236,   129,   nil,   363,   nil,   646,   nil,   nil,   104,
    52,    19,   nil,   119,  1165,   773,   125,   822,   953,   162,
   487,   141,   142,   171,   171,   174,   nil,   149,  1094,   155,
    59,   -12,   nil,   nil,  1579,   180,  1600,  1387,   557,  1342,
   nil,   nil,   175,   428,   178,   nil,   nil,   nil,   nil,   nil,
   333,    95,   146,   116,   219,   nil,   221,   nil,   224,  1226,
   227,    87,   205,   207,   208,   652,   214,   215,   667,   nil,
   nil,   nil,  1152,   nil,   nil,   251,   252,   230,   712,   nil,
   258,   235,   nil ]

racc_action_default = [
    -4,  -108,    -1,  -108,    -4,  -108,  -108,  -108,    -5,  -108,
   -17,   253,  -108,  -108,  -108,  -108,  -106,   -45,   -47,   -48,
   -49,  -108,  -108,  -108,   -53,  -108,  -108,  -108,  -108,  -108,
  -108,  -108,   -84,  -108,  -108,  -108,  -103,  -104,  -105,  -107,
   -14,  -108,    -3,  -108,  -108,  -108,   -18,   -19,  -108,   -46,
  -108,  -108,   -56,   -57,   -58,   -64,  -108,  -108,   -60,   -61,
   -62,   -54,   -55,  -108,  -108,  -108,  -108,  -108,  -108,  -108,
  -108,  -108,  -108,  -108,  -108,  -108,  -108,  -108,  -108,  -108,
  -108,  -106,  -108,  -108,  -108,   -92,   -93,  -108,  -108,  -108,
    -2,  -108,  -108,  -108,   -20,  -108,   -24,   -50,   -51,  -108,
   -52,  -108,   -85,   -86,   -87,   -88,   -89,   -90,   -91,   -95,
   -96,   -97,   -98,   -99,  -100,  -101,  -102,  -108,   -66,   -67,
  -108,   -81,   -82,   -43,  -108,   -43,   -43,   -94,   -26,   -15,
    -7,  -108,  -108,   -10,   -21,   -22,  -108,   -59,   -63,   -65,
   -80,  -108,   -44,  -108,  -108,  -108,  -108,  -108,  -108,   -14,
  -108,    -9,   -23,   -24,   -25,   -83,  -108,  -108,  -108,  -108,
   -43,   -28,   -27,   -16,    -8,   -68,   -74,   -70,   -76,  -108,
  -108,  -108,  -108,   -29,   -30,   -32,  -108,   -35,   -36,  -108,
  -108,  -108,   -40,  -108,  -108,  -108,  -108,  -108,  -108,  -108,
  -108,  -108,  -108,  -108,  -108,  -108,   -31,  -108,  -108,  -108,
  -108,  -108,   -41,   -42,  -108,  -108,  -108,  -108,   -43,   -75,
   -77,    -6,  -108,   -28,  -108,   -33,   -34,   -37,   -38,   -39,
   -28,  -108,   -28,   -28,  -108,   -11,  -108,   -13,  -108,  -108,
  -108,  -108,  -108,  -108,  -108,  -108,  -108,  -108,   -28,   -69,
   -12,   -71,   -74,   -73,   -78,  -108,  -108,  -108,   -28,   -79,
  -108,  -108,   -72 ]

racc_goto_table = [
    52,    58,    94,    57,    59,    89,    80,    88,    83,    84,
    95,    85,    86,    87,    51,    12,    44,   189,   120,   117,
   147,   143,    43,   145,   146,    49,   193,     2,     3,   196,
    54,    60,     8,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   102,   103,   104,   105,   106,   107,   108,   109,   110,
   111,   112,   113,   114,   115,   116,   118,   122,   169,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   170,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,    58,
   155,   138,    59,   nil,   nil,   nil,   119,     9,   nil,   nil,
   nil,   137,   nil,   246,   nil,   134,   nil,   nil,   154,   nil,
   131,   nil,   144,    50,    56,    56,   224,    54,   nil,    60,
   nil,    82,   nil,   162,    89,   177,   163,   nil,   nil,   122,
   nil,   nil,   226,   nil,   nil,   177,   nil,   nil,   177,   228,
    96,   230,   231,   nil,   nil,   166,   152,   nil,   nil,   184,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   245,   nil,   184,
   nil,   nil,   184,   nil,   198,   nil,   nil,   250,    52,    58,
    56,   201,    59,   204,   nil,   206,   207,   177,   209,   183,
   nil,   129,   200,   194,   177,   nil,   177,   177,   nil,   183,
   nil,    56,   183,    56,   197,   nil,   nil,   nil,    54,    60,
   nil,   184,   177,   nil,   nil,   nil,   nil,   nil,   184,   229,
   184,   184,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   242,   nil,   nil,   184,   nil,   153,   nil,
   nil,   183,   nil,   nil,   nil,   nil,   184,   nil,   183,   nil,
   183,   183,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   183,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   183,   nil,    56,   nil,
   nil,   199,    56,    56,   nil,   nil,   nil,   nil,   205 ]

racc_goto_check = [
    19,    19,    15,    22,    28,    14,    19,     7,    19,    19,
    16,    19,    19,    19,    21,     4,    11,    30,    31,    29,
     8,    24,     4,    24,    24,     4,    13,     2,     3,    13,
    18,    18,     3,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,    19,    19,    19,    19,    19,    19,    19,    19,
    19,    19,    19,    19,    19,    19,    19,    19,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     9,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,    19,
    31,    22,    28,   nil,   nil,   nil,    18,     6,   nil,   nil,
   nil,    21,   nil,    30,   nil,    11,   nil,   nil,    16,   nil,
     4,   nil,    19,     6,     6,     6,    24,    18,   nil,    18,
   nil,     6,   nil,    14,    14,    15,     7,   nil,   nil,    19,
   nil,   nil,     9,   nil,   nil,    15,   nil,   nil,    15,     9,
     6,     9,     9,   nil,   nil,    19,    11,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,    19,
   nil,   nil,    19,   nil,    19,   nil,   nil,     9,    19,    19,
     6,    22,    28,    19,   nil,    19,    19,    15,    19,    18,
   nil,     6,    21,    11,    15,   nil,    15,    15,   nil,    18,
   nil,     6,    18,     6,    18,   nil,   nil,   nil,    18,    18,
   nil,    19,    15,   nil,   nil,   nil,   nil,   nil,    19,    19,
    19,    19,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,    19,   nil,     6,   nil,
   nil,    18,   nil,   nil,   nil,   nil,    19,   nil,    18,   nil,
    18,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,     6,   nil,
   nil,     6,     6,     6,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    33,    27,    28,     8,   nil,    82,   -33,  -108,   -91,
   nil,     1,   nil,  -145,   -35,   -46,   -38,   nil,     8,   -22,
   nil,    -8,   -20,   nil,  -102,   nil,   nil,   nil,   -19,   -59,
  -149,   -61,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   142,     4,    27,   nil,   nil,   nil,
    18,   nil,   175,   173,    48,    19,   nil,   174,    25,    26,
   178,   nil,   nil,   182,   nil,    17,    20,    24,    53,   nil,
   nil,   nil,    32,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  4, 56, :_reduce_3,
  0, 57, :_reduce_none,
  2, 57, :_reduce_5,
  10, 59, :_reduce_6,
  4, 64, :_reduce_7,
  6, 64, :_reduce_8,
  5, 64, :_reduce_9,
  4, 64, :_reduce_10,
  4, 66, :_reduce_11,
  6, 66, :_reduce_12,
  4, 66, :_reduce_13,
  0, 61, :_reduce_none,
  2, 61, :_reduce_15,
  4, 61, :_reduce_16,
  1, 60, :_reduce_17,
  1, 68, :_reduce_18,
  1, 68, :_reduce_19,
  2, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  4, 65, :_reduce_23,
  1, 70, :_reduce_24,
  3, 70, :_reduce_25,
  0, 62, :_reduce_none,
  2, 62, :_reduce_27,
  0, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 67, :_reduce_30,
  2, 67, :_reduce_31,
  1, 71, :_reduce_32,
  3, 71, :_reduce_33,
  3, 71, :_reduce_34,
  1, 71, :_reduce_35,
  1, 71, :_reduce_36,
  3, 71, :_reduce_37,
  3, 71, :_reduce_38,
  3, 71, :_reduce_39,
  1, 71, :_reduce_40,
  2, 71, :_reduce_41,
  2, 71, :_reduce_42,
  0, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 58, :_reduce_45,
  2, 58, :_reduce_46,
  1, 79, :_reduce_47,
  1, 79, :_reduce_48,
  1, 79, :_reduce_49,
  3, 79, :_reduce_50,
  3, 79, :_reduce_51,
  3, 79, :_reduce_52,
  1, 79, :_reduce_53,
  2, 79, :_reduce_54,
  2, 79, :_reduce_55,
  1, 75, :_reduce_56,
  1, 75, :_reduce_57,
  1, 75, :_reduce_58,
  3, 75, :_reduce_59,
  1, 76, :_reduce_60,
  1, 76, :_reduce_61,
  1, 76, :_reduce_62,
  3, 76, :_reduce_63,
  1, 82, :_reduce_64,
  4, 69, :_reduce_65,
  1, 83, :_reduce_66,
  1, 83, :_reduce_67,
  6, 80, :_reduce_68,
  11, 80, :_reduce_69,
  6, 80, :_reduce_70,
  6, 74, :_reduce_71,
  11, 74, :_reduce_72,
  6, 74, :_reduce_73,
  0, 84, :_reduce_none,
  2, 84, :_reduce_75,
  6, 81, :_reduce_76,
  8, 81, :_reduce_77,
  6, 77, :_reduce_78,
  8, 77, :_reduce_79,
  4, 72, :_reduce_80,
  3, 72, :_reduce_81,
  1, 85, :_reduce_82,
  3, 85, :_reduce_83,
  1, 73, :_reduce_none,
  3, 73, :_reduce_85,
  3, 73, :_reduce_86,
  3, 73, :_reduce_87,
  3, 73, :_reduce_88,
  3, 73, :_reduce_89,
  3, 73, :_reduce_90,
  3, 73, :_reduce_91,
  2, 73, :_reduce_92,
  2, 73, :_reduce_93,
  3, 73, :_reduce_94,
  3, 73, :_reduce_95,
  3, 73, :_reduce_96,
  3, 73, :_reduce_97,
  3, 73, :_reduce_98,
  3, 73, :_reduce_99,
  3, 73, :_reduce_100,
  3, 73, :_reduce_101,
  3, 73, :_reduce_102,
  1, 87, :_reduce_103,
  1, 87, :_reduce_104,
  1, 86, :_reduce_105,
  1, 86, :_reduce_106,
  1, 86, :_reduce_none ]

racc_reduce_n = 108

racc_shift_n = 253

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "Var",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "wisf",
  "LInstf",
  "type",
  "Assign",
  "ListID",
  "Instf",
  "Call",
  "Expr",
  "IteratorF",
  "writable1",
  "writable2",
  "CondF",
  "LInstruc",
  "Inst",
  "Iterator",
  "Cond",
  "Str",
  "Asignable",
  "by",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    result = Scope.new(:Funciones,val[0],:Program,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 49)
  def _reduce_3(val, _values, result)
    result = Scope.new(:Funciones,val[0],nil,nil)
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'retina_parser.y', 54)
  def _reduce_5(val, _values, result)
    result=ListaFunc.new(:Funcion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 58)
  def _reduce_6(val, _values, result)
    result=Func.new(:Nombre_Funcion,val[1],:Parametros,val[3],:Tipo_Retorno,val[5],:Instrucciones,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_8(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 64)
  def _reduce_9(val, _values, result)
    result=Bloque.new(:declaraciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 65)
  def _reduce_10(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_11(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_12(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 71)
  def _reduce_13(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_15(val, _values, result)
    result=ListD.new(:tipos,val[0],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 77)
  def _reduce_16(val, _values, result)
    result=List.new(:tipos,val[0],val[3],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_17(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_18(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_19(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_20(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_21(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1],:declaracion,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_22(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:Lista_ID,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_23(val, _values, result)
    result=Ldecl.new(:Lista_Decl,:tipo,val[0],:Lista_ID,val[1],:declaracion,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_24(val, _values, result)
    result=ListID.new(:ID,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_25(val, _values, result)
    result=ListID.new(:ID,val[0],val[2])
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_27(val, _values, result)
    result=Retorno.new(:tipo,val[1])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_30(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_31(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_32(val, _values, result)
    result=InstWisf.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_33(val, _values, result)
    result=InstReturn.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_34(val, _values, result)
    result=InstReturn_call.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_35(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_36(val, _values, result)
    result=InstIteratorF.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_37(val, _values, result)
    result=Read.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_38(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_39(val, _values, result)
    result=WriteSalto.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_40(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_41(val, _values, result)
    result=InstCall.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_42(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_45(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_46(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_47(val, _values, result)
    result=InstWis.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_48(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_49(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_50(val, _values, result)
    result=Read.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_51(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_52(val, _values, result)
    result=WriteSalto.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_53(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_54(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_55(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_56(val, _values, result)
    result=Writable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_57(val, _values, result)
    result=Writable.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_58(val, _values, result)
    result=Writable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_59(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 162)
  def _reduce_60(val, _values, result)
    result=Writable2.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 163)
  def _reduce_61(val, _values, result)
    result=Writable2.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_62(val, _values, result)
    result=Writable2.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_63(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_64(val, _values, result)
    result=Str.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 174)
  def _reduce_65(val, _values, result)
    result=Assign.new(:Lado_Izquierdo,val[0],:Lado_Derecho,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_66(val, _values, result)
    result=Asignable_Expr.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 179)
  def _reduce_67(val, _values, result)
    result=Asignable_Call.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_68(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 184)
  def _reduce_69(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 185)
  def _reduce_70(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_71(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 190)
  def _reduce_72(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 191)
  def _reduce_73(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'retina_parser.y', 196)
  def _reduce_75(val, _values, result)
    result=By.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 200)
  def _reduce_76(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 201)
  def _reduce_77(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 205)
  def _reduce_78(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 206)
  def _reduce_79(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 210)
  def _reduce_80(val, _values, result)
    result=Call.new(:nombre,val[0],:argumentos,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 211)
  def _reduce_81(val, _values, result)
    result=Call.new(:nombre,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_82(val, _values, result)
    result=ListParam.new(:expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 216)
  def _reduce_83(val, _values, result)
    result=ListParam.new(:expresion,val[0],val[2])
    result
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'retina_parser.y', 226)
  def _reduce_85(val, _values, result)
    result = BinExpSuma.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 227)
  def _reduce_86(val, _values, result)
    result = BinExpResta.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 228)
  def _reduce_87(val, _values, result)
    result = BinExpMult.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 229)
  def _reduce_88(val, _values, result)
    result = BinExpDiv2.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 230)
  def _reduce_89(val, _values, result)
    result = BinExpMod2.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 231)
  def _reduce_90(val, _values, result)
    result = BinExpDiv.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 232)
  def _reduce_91(val, _values, result)
    result = BinExpMod.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 233)
  def _reduce_92(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_93(val, _values, result)
    result = UnaExp.new(:Negacion , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 235)
  def _reduce_94(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 236)
  def _reduce_95(val, _values, result)
    result = BinExpOr.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 237)
  def _reduce_96(val, _values, result)
    result = BinExpAnd.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 238)
  def _reduce_97(val, _values, result)
    result = BinExpLT.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 239)
  def _reduce_98(val, _values, result)
    result = BinExpGT.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 240)
  def _reduce_99(val, _values, result)
    result = BinExpLET.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 241)
  def _reduce_100(val, _values, result)
    result = BinExpGET.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 242)
  def _reduce_101(val, _values, result)
    result = BinExpDist.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 243)
  def _reduce_102(val, _values, result)
    result = BinExpEQ.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 249)
  def _reduce_103(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 250)
  def _reduce_104(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 254)
  def _reduce_105(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 255)
  def _reduce_106(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 107 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
