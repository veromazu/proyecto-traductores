#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"

require_relative 'retina_ast'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            case @token.symbol
                when :TYPEN,:TYPEB
                tokenName="tipo de dato"
            when :TRUE,:FALSE
                tokenName="literal booleano"
            when :AND,:NOT,:OR
                tokenName="operador booleano"
            when :PROGRAM,:BEGIN,:END,:WITH,:DO,:IF,:THEN,:READ,:ELSE,:WHILE,:FOR,:REPEAT,:WRITE,:WRITELN,:FROM,:TO,:BY,:FUNC,:RETURN,:RETURN2
                tokenName="palabra reservada"
            when :EQUIVALENT,:LESSTHAN,:DISTINCT,:GETHAN,:LESSTHAN,:GREATTHAN
                tokenName="operador de comparación"
            when :LPARENT,:RPARENT,:EQUAL,:SEMICOLON,:COLON,:RCURLY,:LCURLY
                tokenName="signo"
            when :PLUS,:MOD,:DIV,:MOD2,:DIV2,:MULT,:LESS
                tokenName="operador aritmético"
            when :ID
                tokenName="identificador"
            when :STRING
                tokenName="string"
            when :DIGIT
                tokenName="literal numérico"
            end
           return " Línea #{@token.position[0]}, Column #{@token.position[1]}: token inesperado : "<< tokenName << " : #{@token.id}"
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 307)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
    if ((token = @lexer.next_token)!=nil)
        return [token.symbol,token]
    else 
        return nil
    end

end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    60,    61,    62,    63,    38,    76,    33,    47,    48,    35,
    68,   -17,    67,    36,    37,    38,    34,    33,   189,    75,
    35,    38,     5,    33,    36,    37,    35,    34,   131,   163,
    36,    37,    94,    34,    74,    69,    73,    72,    71,    70,
    95,    75,    66,    65,    64,    47,    48,   -17,   160,   136,
    16,    54,    62,    63,    38,   154,    33,   210,   131,    35,
   155,    16,    54,    36,    37,    97,    34,    16,    54,    38,
   159,    33,    62,    63,    35,    38,   185,    33,    36,    37,
    35,    34,   209,   186,    36,    37,    38,    34,    33,   156,
    95,    35,    66,    65,    64,    36,    37,    38,    34,    33,
    16,    54,    35,    96,   153,   228,    36,    37,   151,    34,
   229,    97,    66,    65,    64,    16,    54,    10,    38,    10,
    33,    16,    54,    35,    47,    48,   146,    36,    37,   144,
    34,   143,    16,   135,    41,    15,    14,    30,    47,    48,
    27,    28,    29,    16,    21,    22,    23,    10,    38,    46,
    33,    47,    48,    35,    47,    48,   134,    36,    37,   130,
    34,    47,    48,   200,    16,   167,   166,   182,   162,   202,
   179,   180,   181,   203,   174,   175,   176,   128,    38,   205,
    33,   171,   206,    35,   125,   208,    10,    36,    37,   123,
    34,   119,   212,    76,    16,    15,    14,    30,    93,    10,
    27,    28,    29,    89,    21,    22,    23,   216,    38,    88,
    33,   218,    86,    35,    10,    10,    43,    36,    37,   223,
    34,   224,   225,    40,    16,   167,   166,   182,   227,    11,
   179,   180,   181,   230,   174,   175,   176,   231,    38,   232,
    33,   171,    10,    35,   234,   235,     5,    36,    37,     7,
    34,   238,   239,   240,    16,   167,   166,   182,     6,   242,
   179,   180,   181,   243,   174,   175,   176,   nil,    38,   nil,
    33,   171,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,
    34,   nil,   nil,   nil,    16,   167,   166,   182,   nil,   nil,
   179,   180,   181,   nil,   174,   175,   176,   nil,   nil,   nil,
    38,   171,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,
    37,   nil,    34,   nil,    16,   nil,    13,    15,    14,    30,
   nil,   nil,    27,    28,    29,   nil,    21,    22,    23,   nil,
    38,   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,
    37,   nil,    34,   nil,   nil,   nil,    16,    15,    14,    30,
   nil,   nil,    27,    28,    29,   nil,    21,    22,    23,    38,
   nil,    33,   nil,   nil,    35,    38,   nil,    33,    36,    37,
    35,    34,   nil,   nil,    36,    37,    16,    34,    38,   nil,
    33,   nil,   nil,    35,    38,   nil,    33,    36,    37,    35,
    34,   nil,   nil,    36,    37,   nil,    34,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,    16,    36,    37,    38,    34,
    33,    16,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,
    34,   nil,   nil,    38,    16,    33,   nil,   nil,    35,    38,
    16,    33,    36,    37,    35,    34,   nil,   nil,    36,    37,
    38,    34,    33,    16,   nil,    35,   nil,   nil,   nil,    36,
    37,   nil,    34,   nil,    16,    38,   nil,    33,   nil,   nil,
    35,   nil,   nil,   nil,    36,    37,   nil,    34,   nil,    16,
   nil,   nil,   167,   166,   182,    16,   nil,   179,   180,   181,
   nil,   174,   175,   176,   nil,   nil,    16,    38,   171,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,    16,   nil,    87,    15,    14,    30,   nil,   nil,    27,
    28,    29,   nil,    21,    22,    23,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,    16,   167,   166,   182,   nil,   nil,   179,
   180,   181,   nil,   174,   175,   176,   nil,    38,   nil,    33,
   171,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,    16,    15,    14,    30,   nil,   nil,    27,
    28,    29,   nil,    21,    22,    23,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,    16,    15,    14,    30,   nil,   nil,    27,
    28,    29,   nil,    21,    22,    23,   nil,   nil,    38,   nil,
    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,
    34,   nil,   nil,    16,   145,    15,    14,    30,   nil,   nil,
    27,    28,    29,   nil,    21,    22,    23,    38,   nil,    33,
   nil,   nil,    35,    38,   nil,    33,    36,    37,    35,    34,
   nil,   nil,    36,    37,    16,    34,   nil,   nil,   nil,   nil,
    15,    14,    30,   nil,   nil,    27,    28,    29,   nil,    21,
    22,    23,   nil,   nil,   nil,    38,   nil,    33,   nil,   nil,
    35,   nil,   nil,    16,    36,    37,   nil,    34,   nil,    16,
   nil,   nil,    15,    14,    30,   nil,   nil,    27,    28,    29,
   nil,    21,    22,    23,    38,   nil,    33,   nil,   nil,    35,
    38,   nil,    33,    36,    37,    35,    34,   nil,   nil,    36,
    37,    16,    34,   nil,   nil,   nil,   nil,    15,    14,    30,
   nil,   nil,    27,    28,    29,   nil,    21,    22,    23,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
    16,    34,    38,   nil,    33,   nil,    16,    35,    38,   nil,
    33,    36,    37,    35,    34,   nil,   nil,    36,    37,    38,
    34,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,    38,   nil,    33,    16,   nil,    35,   nil,   nil,
   nil,    36,    37,   nil,    34,   nil,   nil,    38,    16,    33,
   nil,   nil,    35,   nil,    16,   nil,    36,    37,    38,    34,
    33,   nil,   nil,    35,    38,    16,    33,    36,    37,    35,
    34,   nil,   nil,    36,    37,   nil,    34,   nil,    16,    38,
   nil,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,   nil,    16,   nil,   nil,   167,   166,   182,   nil,
   nil,   179,   180,   181,    16,   174,   175,   176,   nil,    38,
    16,    33,   171,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,    38,   nil,    33,    16,   nil,    35,    38,   nil,
    33,    36,    37,    35,    34,   nil,   nil,    36,    37,    38,
    34,    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,
   nil,    34,    38,   nil,    33,    16,   nil,    35,   nil,   nil,
   nil,    36,    37,   nil,    34,   nil,   nil,    38,    16,    33,
   nil,   nil,    35,   nil,    16,   nil,    36,    37,    38,    34,
    33,   nil,   nil,    35,   nil,    16,   nil,    36,    37,   nil,
    34,    38,   nil,    33,   nil,   nil,    35,   116,    16,   nil,
    36,    37,    38,    34,    33,   nil,   nil,    35,   nil,   nil,
   nil,    36,    37,    16,    34,   nil,    38,   nil,    33,   nil,
   nil,    35,   nil,   nil,    16,    36,    37,   nil,    34,   nil,
   nil,   nil,   nil,   167,   166,   182,   nil,    16,   179,   180,
   181,   nil,   174,   175,   176,    38,   nil,    33,    16,   171,
    35,    38,   nil,    33,    36,    37,    35,    34,   nil,   nil,
    36,    37,    16,    34,   nil,   nil,   nil,   127,    15,    14,
    30,   nil,   nil,    27,    28,    29,   nil,    21,    22,    23,
   nil,   nil,   nil,    38,   nil,    33,   nil,   nil,    35,   nil,
   nil,    16,    36,    37,   nil,    34,   nil,    16,   nil,   nil,
   167,   166,   182,   nil,   nil,   179,   180,   181,   nil,   174,
   175,   176,    38,   nil,    33,   nil,   171,    35,    38,   nil,
    33,    36,    37,    35,    34,   nil,   nil,    36,    37,    16,
    34,   nil,   nil,   nil,   204,   167,   166,   182,   nil,   nil,
   179,   180,   181,   nil,   174,   175,   176,    38,   nil,    33,
   nil,   171,    35,   nil,   nil,   nil,    36,    37,    16,    34,
    60,    61,    62,    63,    16,   nil,   nil,   nil,   nil,   nil,
    68,   nil,    67,   nil,   nil,   nil,    60,    61,    62,    63,
   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,   nil,
   nil,   nil,   nil,    16,    74,    69,    73,    72,    71,    70,
   nil,   207,    66,    65,    64,   226,   nil,   nil,   nil,   nil,
    74,    69,    73,    72,    71,    70,   nil,   nil,    66,    65,
    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,
   nil,    68,   nil,    67,   nil,   nil,   nil,    60,    61,    62,
    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,
   nil,   184,   nil,   nil,   nil,    74,    69,    73,    72,    71,
    70,   nil,   nil,    66,    65,    64,   152,   nil,   nil,   nil,
   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,    66,
    65,    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,
   nil,   nil,    68,   nil,    67,    60,    61,    62,    63,   nil,
   122,   nil,   nil,   nil,   nil,    68,   nil,    67,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    74,    69,    73,    72,
    71,    70,   nil,    59,    66,    65,    64,   nil,   nil,    74,
    69,    73,    72,    71,    70,   nil,   nil,    66,    65,    64,
    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,
    68,   nil,    67,    60,    61,    62,    63,   nil,   nil,   121,
   nil,   nil,   nil,    68,   nil,    67,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    74,    69,    73,    72,    71,    70,
   nil,   nil,    66,    65,    64,   nil,   nil,    74,    69,    73,
    72,    71,    70,   nil,   nil,    66,    65,    64,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,
    67,    60,    61,    62,    63,   nil,   nil,   214,   nil,   nil,
   nil,    68,    60,    61,    62,    63,   nil,   nil,   nil,   nil,
   nil,   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,
    66,    65,    64,   nil,   nil,    74,    69,    73,    72,    71,
    70,   nil,   nil,    66,    65,    64,    74,    69,    73,    72,
    71,    70,   nil,   nil,    66,    65,    64,    60,    61,    62,
    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    60,
    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  -103,  -103,  -103,  -103,  -103,  -103,   nil,   nil,    66,
    65,    64,  -103,  -103,  -103,  -103,  -103,  -103,   nil,   nil,
    66,    65,    64,  -103,  -103,  -103,  -103,  -103,  -103,   nil,
   nil,    66,    65,    64,    60,    61,    62,    63,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    60,    61,    62,    63,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    60,    61,    62,    63,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  -103,  -103,
  -103,  -103,  -103,  -103,   nil,   nil,    66,    65,    64,  -103,
  -103,  -103,  -103,  -103,  -103,   nil,   nil,    66,    65,    64,
  -103,  -103,  -103,  -103,  -103,  -103,   nil,   nil,    66,    65,
    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,
   nil,    68,   nil,    67,    60,    61,    62,    63,   nil,   nil,
   nil,   nil,   nil,   nil,    68,   120,    67,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    74,    69,    73,    72,    71,
    70,   nil,   nil,    66,    65,    64,   nil,   nil,    74,    69,
    73,    72,    71,    70,   nil,   nil,    66,    65,    64,    60,
    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,
   nil,    67,    60,    61,    62,    63,   211,   nil,   nil,   nil,
   nil,   nil,    68,   nil,    67,   nil,   nil,   nil,   nil,   118,
   nil,   nil,   nil,    74,    69,    73,    72,    71,    70,   nil,
   nil,    66,    65,    64,   nil,   nil,    74,    69,    73,    72,
    71,    70,   nil,   nil,    66,    65,    64,    60,    61,    62,
    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,
    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,
    68,   nil,    67,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,    66,
    65,    64,   nil,   nil,    74,    69,    73,    72,    71,    70,
   nil,   195,    66,    65,    64,    60,    61,    62,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   213,
    67,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    74,
    69,    73,    72,    71,    70,   nil,   nil,    66,    65,    64,
   nil,   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,
    66,    65,    64,    60,    61,    62,    63,   nil,   nil,   nil,
   nil,   nil,   nil,    68,   nil,    67,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   184,   nil,   nil,   nil,    74,    69,    73,
    72,    71,    70,   nil,   nil,    66,    65,    64 ]

racc_action_check = [
   117,   117,   117,   117,    22,    26,    22,   167,   167,    22,
   117,    16,   117,    22,    22,    97,    22,    97,   167,    92,
    97,    95,     0,    95,    97,    97,    95,    97,    92,   154,
    95,    95,    51,    95,   117,   117,   117,   117,   117,   117,
    51,    26,   117,   117,   117,    90,    90,    16,   151,   117,
    22,    22,    98,    98,   176,   141,   176,   194,   148,   176,
   141,    97,    97,   176,   176,   194,   176,    95,    95,   175,
   145,   175,    99,    99,   175,    23,   164,    23,   175,   175,
    23,   175,   193,   165,    23,    23,    68,    23,    68,   142,
   193,    68,    98,    98,    98,    68,    68,   184,    68,   184,
   176,   176,   184,    56,   140,   222,   184,   184,   138,   184,
   222,    56,    99,    99,    99,   175,   175,   131,    12,   174,
    12,    23,    23,    12,   130,   130,   127,    12,    12,   124,
    12,   123,    68,   115,    12,    12,    12,    12,    15,    15,
    12,    12,    12,   184,    12,    12,    12,   180,   214,    15,
   214,    40,    40,   214,   143,   143,   113,   214,   214,    91,
   214,   144,   144,   183,    12,   214,   214,   214,   153,   185,
   214,   214,   214,   186,   214,   214,   214,    89,    14,   188,
    14,   214,   189,    14,    87,   192,    85,    14,    14,    84,
    14,    78,   197,    55,   214,    14,    14,    14,    50,    49,
    14,    14,    14,    46,    14,    14,    14,   204,   166,    45,
   166,   206,    41,   166,    28,    21,    13,   166,   166,   215,
   166,   217,   219,     9,    14,   166,   166,   166,   221,     6,
   166,   166,   166,   223,   166,   166,   166,   224,   168,   225,
   168,   166,     5,   168,   227,   228,     4,   168,   168,     3,
   168,   236,   237,   238,   166,   168,   168,   168,     1,   241,
   168,   168,   168,   242,   168,   168,   168,   nil,   213,   nil,
   213,   168,   nil,   213,   nil,   nil,   nil,   213,   213,   nil,
   213,   nil,   nil,   nil,   168,   213,   213,   213,   nil,   nil,
   213,   213,   213,   nil,   213,   213,   213,   nil,   nil,   nil,
     7,   213,     7,   nil,   nil,     7,   nil,   nil,   nil,     7,
     7,   nil,     7,   nil,   213,   nil,     7,     7,     7,     7,
   nil,   nil,     7,     7,     7,   nil,     7,     7,     7,   nil,
   137,   nil,   137,   nil,   nil,   137,   nil,   nil,   nil,   137,
   137,   nil,   137,   nil,   nil,   nil,     7,   137,   137,   137,
   nil,   nil,   137,   137,   137,   nil,   137,   137,   137,   136,
   nil,   136,   nil,   nil,   136,    27,   nil,    27,   136,   136,
    27,   136,   nil,   nil,    27,    27,   137,    27,   212,   nil,
   212,   nil,   nil,   212,    29,   nil,    29,   212,   212,    29,
   212,   nil,   nil,    29,    29,   nil,    29,    30,   nil,    30,
   nil,   nil,    30,   nil,   nil,   136,    30,    30,    33,    30,
    33,    27,   nil,    33,   nil,   nil,   nil,    33,    33,   nil,
    33,   nil,   nil,    34,   212,    34,   nil,   nil,    34,    35,
    29,    35,    34,    34,    35,    34,   nil,   nil,    35,    35,
   171,    35,   171,    30,   nil,   171,   nil,   nil,   nil,   171,
   171,   nil,   171,   nil,    33,   211,   nil,   211,   nil,   nil,
   211,   nil,   nil,   nil,   211,   211,   nil,   211,   nil,    34,
   nil,   nil,   211,   211,   211,    35,   nil,   211,   211,   211,
   nil,   211,   211,   211,   nil,   nil,   171,    44,   211,    44,
   nil,   nil,    44,   nil,   nil,   nil,    44,    44,   nil,    44,
   nil,   211,   nil,    44,    44,    44,    44,   nil,   nil,    44,
    44,    44,   nil,    44,    44,    44,   nil,   205,   nil,   205,
   nil,   nil,   205,   nil,   nil,   nil,   205,   205,   nil,   205,
   nil,   nil,   nil,    44,   205,   205,   205,   nil,   nil,   205,
   205,   205,   nil,   205,   205,   205,   nil,   155,   nil,   155,
   205,   nil,   155,   nil,   nil,   nil,   155,   155,   nil,   155,
   nil,   nil,   nil,   205,   155,   155,   155,   nil,   nil,   155,
   155,   155,   nil,   155,   155,   155,   nil,   200,   nil,   200,
   nil,   nil,   200,   nil,   nil,   nil,   200,   200,   nil,   200,
   nil,   nil,   nil,   155,   200,   200,   200,   nil,   nil,   200,
   200,   200,   nil,   200,   200,   200,   nil,   nil,   126,   nil,
   126,   nil,   nil,   126,   nil,   nil,   nil,   126,   126,   nil,
   126,   nil,   nil,   200,   126,   126,   126,   126,   nil,   nil,
   126,   126,   126,   nil,   126,   126,   126,   226,   nil,   226,
   nil,   nil,   226,   121,   nil,   121,   226,   226,   121,   226,
   nil,   nil,   121,   121,   126,   121,   nil,   nil,   nil,   nil,
   121,   121,   121,   nil,   nil,   121,   121,   121,   nil,   121,
   121,   121,   nil,   nil,   nil,   120,   nil,   120,   nil,   nil,
   120,   nil,   nil,   226,   120,   120,   nil,   120,   nil,   121,
   nil,   nil,   120,   120,   120,   nil,   nil,   120,   120,   120,
   nil,   120,   120,   120,   119,   nil,   119,   nil,   nil,   119,
   118,   nil,   118,   119,   119,   118,   119,   nil,   nil,   118,
   118,   120,   118,   nil,   nil,   nil,   nil,   118,   118,   118,
   nil,   nil,   118,   118,   118,   nil,   118,   118,   118,    60,
   nil,    60,   nil,   nil,    60,   nil,   nil,   nil,    60,    60,
   119,    60,    61,   nil,    61,   nil,   118,    61,    62,   nil,
    62,    61,    61,    62,    61,   nil,   nil,    62,    62,    63,
    62,    63,   nil,   nil,    63,   nil,   nil,   nil,    63,    63,
   nil,    63,    64,   nil,    64,    60,   nil,    64,   nil,   nil,
   nil,    64,    64,   nil,    64,   nil,   nil,    65,    61,    65,
   nil,   nil,    65,   nil,    62,   nil,    65,    65,    66,    65,
    66,   nil,   nil,    66,    67,    63,    67,    66,    66,    67,
    66,   nil,   nil,    67,    67,   nil,    67,   nil,    64,   156,
   nil,   156,   nil,   nil,   156,   nil,   nil,   nil,   156,   156,
   nil,   156,   nil,    65,   nil,   nil,   156,   156,   156,   nil,
   nil,   156,   156,   156,    66,   156,   156,   156,   nil,    69,
    67,    69,   156,   nil,    69,   nil,   nil,   nil,    69,    69,
   nil,    69,    70,   nil,    70,   156,   nil,    70,    71,   nil,
    71,    70,    70,    71,    70,   nil,   nil,    71,    71,    72,
    71,    72,   nil,   nil,    72,   nil,   nil,   nil,    72,    72,
   nil,    72,    73,   nil,    73,    69,   nil,    73,   nil,   nil,
   nil,    73,    73,   nil,    73,   nil,   nil,    74,    70,    74,
   nil,   nil,    74,   nil,    71,   nil,    74,    74,    75,    74,
    75,   nil,   nil,    75,   nil,    72,   nil,    75,    75,   nil,
    75,    76,   nil,    76,   nil,   nil,    76,    76,    73,   nil,
    76,    76,   179,    76,   179,   nil,   nil,   179,   nil,   nil,
   nil,   179,   179,    74,   179,   nil,   229,   nil,   229,   nil,
   nil,   229,   nil,   nil,    75,   229,   229,   nil,   229,   nil,
   nil,   nil,   nil,   229,   229,   229,   nil,    76,   229,   229,
   229,   nil,   229,   229,   229,   152,   nil,   152,   179,   229,
   152,    88,   nil,    88,   152,   152,    88,   152,   nil,   nil,
    88,    88,   229,    88,   nil,   nil,   nil,    88,    88,    88,
    88,   nil,   nil,    88,    88,    88,   nil,    88,    88,    88,
   nil,   nil,   nil,   239,   nil,   239,   nil,   nil,   239,   nil,
   nil,   152,   239,   239,   nil,   239,   nil,    88,   nil,   nil,
   239,   239,   239,   nil,   nil,   239,   239,   239,   nil,   239,
   239,   239,   182,   nil,   182,   nil,   239,   182,   187,   nil,
   187,   182,   182,   187,   182,   nil,   nil,   187,   187,   239,
   187,   nil,   nil,   nil,   187,   187,   187,   187,   nil,   nil,
   187,   187,   187,   nil,   187,   187,   187,   181,   nil,   181,
   nil,   187,   181,   nil,   nil,   nil,   181,   181,   182,   181,
   191,   191,   191,   191,   187,   nil,   nil,   nil,   nil,   nil,
   191,   nil,   191,   nil,   nil,   nil,   220,   220,   220,   220,
   nil,   nil,   nil,   nil,   nil,   nil,   220,   nil,   220,   nil,
   nil,   nil,   nil,   181,   191,   191,   191,   191,   191,   191,
   nil,   191,   191,   191,   191,   220,   nil,   nil,   nil,   nil,
   220,   220,   220,   220,   220,   220,   nil,   nil,   220,   220,
   220,   161,   161,   161,   161,   nil,   nil,   nil,   nil,   nil,
   nil,   161,   nil,   161,   nil,   nil,   nil,   139,   139,   139,
   139,   nil,   nil,   nil,   nil,   nil,   nil,   139,   nil,   139,
   nil,   161,   nil,   nil,   nil,   161,   161,   161,   161,   161,
   161,   nil,   nil,   161,   161,   161,   139,   nil,   nil,   nil,
   nil,   139,   139,   139,   139,   139,   139,   nil,   nil,   139,
   139,   139,    25,    25,    25,    25,   nil,   nil,   nil,   nil,
   nil,   nil,    25,   nil,    25,    83,    83,    83,    83,   nil,
    83,   nil,   nil,   nil,   nil,    83,   nil,    83,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    25,    25,    25,    25,
    25,    25,   nil,    25,    25,    25,    25,   nil,   nil,    83,
    83,    83,    83,    83,    83,   nil,   nil,    83,    83,    83,
    80,    80,    80,    80,   nil,   nil,   nil,   nil,   nil,   nil,
    80,   nil,    80,   201,   201,   201,   201,   nil,   nil,    80,
   nil,   nil,   nil,   201,   nil,   201,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    80,    80,    80,    80,    80,    80,
   nil,   nil,    80,    80,    80,   nil,   nil,   201,   201,   201,
   201,   201,   201,   nil,   nil,   201,   201,   201,   199,   199,
   199,   199,   nil,   nil,   nil,   nil,   nil,   nil,   199,   nil,
   199,   105,   105,   105,   105,   nil,   nil,   199,   nil,   nil,
   nil,   105,   106,   106,   106,   106,   nil,   nil,   nil,   nil,
   nil,   nil,   199,   199,   199,   199,   199,   199,   nil,   nil,
   199,   199,   199,   nil,   nil,   105,   105,   105,   105,   105,
   105,   nil,   nil,   105,   105,   105,   106,   106,   106,   106,
   106,   106,   nil,   nil,   106,   106,   106,   107,   107,   107,
   107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   108,   108,
   108,   108,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   109,
   109,   109,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   107,   107,   107,   107,   107,   107,   nil,   nil,   107,
   107,   107,   108,   108,   108,   108,   108,   108,   nil,   nil,
   108,   108,   108,   109,   109,   109,   109,   109,   109,   nil,
   nil,   109,   109,   109,   110,   110,   110,   110,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   111,   111,   111,   111,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   112,   112,   112,   112,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,   110,
   110,   110,   110,   110,   nil,   nil,   110,   110,   110,   111,
   111,   111,   111,   111,   111,   nil,   nil,   111,   111,   111,
   112,   112,   112,   112,   112,   112,   nil,   nil,   112,   112,
   112,    79,    79,    79,    79,   nil,   nil,   nil,   nil,   nil,
   nil,    79,   nil,    79,   114,   114,   114,   114,   nil,   nil,
   nil,   nil,   nil,   nil,   114,    79,   114,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    79,    79,    79,    79,    79,
    79,   nil,   nil,    79,    79,    79,   nil,   nil,   114,   114,
   114,   114,   114,   114,   nil,   nil,   114,   114,   114,   196,
   196,   196,   196,   nil,   nil,   nil,   nil,   nil,   nil,   196,
   nil,   196,    77,    77,    77,    77,   196,   nil,   nil,   nil,
   nil,   nil,    77,   nil,    77,   nil,   nil,   nil,   nil,    77,
   nil,   nil,   nil,   196,   196,   196,   196,   196,   196,   nil,
   nil,   196,   196,   196,   nil,   nil,    77,    77,    77,    77,
    77,    77,   nil,   nil,    77,    77,    77,    57,    57,    57,
    57,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,    57,
   178,   178,   178,   178,   nil,   nil,   nil,   nil,   nil,   nil,
   178,   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    57,    57,    57,    57,    57,    57,   nil,   nil,    57,
    57,    57,   nil,   nil,   178,   178,   178,   178,   178,   178,
   nil,   178,   178,   178,   178,   198,   198,   198,   198,   nil,
   nil,   nil,   nil,   nil,   nil,   198,   nil,   198,    52,    52,
    52,    52,   nil,   nil,   nil,   nil,   nil,   nil,    52,   198,
    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   198,
   198,   198,   198,   198,   198,   nil,   nil,   198,   198,   198,
   nil,   nil,    52,    52,    52,    52,    52,    52,   nil,   nil,
    52,    52,    52,   233,   233,   233,   233,   nil,   nil,   nil,
   nil,   nil,   nil,   233,   nil,   233,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   233,   nil,   nil,   nil,   233,   233,   233,
   233,   233,   233,   nil,   nil,   233,   233,   233 ]

racc_action_pointer = [
   -12,   258,   nil,   233,   212,   194,   229,   298,   nil,   216,
   nil,   nil,   116,   172,   176,   129,     4,   nil,   nil,   nil,
   nil,   167,     2,    73,   nil,  1229,    -2,   363,   166,   382,
   395,   nil,   nil,   406,   421,   427,   nil,   nil,   nil,   nil,
   142,   168,   nil,   nil,   485,   189,   185,   nil,   nil,   151,
   154,   -12,  1735,   nil,   nil,   186,    59,  1664,   nil,   nil,
   737,   750,   756,   767,   780,   795,   806,   812,    84,   857,
   870,   876,   887,   900,   915,   926,   939,  1619,   160,  1548,
  1287,   nil,   nil,  1242,   181,   138,   nil,   140,   999,   133,
    36,   115,   -24,   nil,   nil,    19,   nil,    13,    47,    67,
   nil,   nil,   nil,   nil,   nil,  1358,  1369,  1414,  1425,  1436,
  1481,  1492,  1503,   112,  1561,   125,   nil,    -3,   708,   702,
   673,   641,   nil,    95,    77,   nil,   606,    82,   nil,   nil,
   115,    69,   nil,   nil,   nil,   nil,   357,   328,    90,  1184,
    86,    37,    72,   145,   152,    26,   nil,   nil,     6,   nil,
   nil,     4,   993,   124,   -15,   545,   827,   nil,   nil,   nil,
   nil,  1168,   nil,   nil,    58,    65,   206,    -2,   236,   nil,
   nil,   438,   nil,   nil,    71,    67,    52,   nil,  1677,   950,
    99,  1095,  1060,   143,    95,   125,   129,  1066,   159,   164,
   nil,  1107,   141,    38,    13,   nil,  1606,   161,  1722,  1345,
   575,  1300,   nil,   nil,   163,   515,   167,   nil,   nil,   nil,
   nil,   453,   376,   266,   146,   201,   nil,   203,   nil,   204,
  1123,   210,    87,   189,   193,   195,   635,   200,   201,   964,
   nil,   nil,   nil,  1780,   nil,   nil,   233,   232,   209,  1031,
   nil,   241,   219,   nil ]

racc_action_default = [
    -4,  -103,    -1,  -103,    -4,  -103,  -103,  -103,    -5,  -103,
   -17,   244,  -103,  -103,  -103,  -103,  -101,   -43,   -45,   -46,
   -47,  -103,  -103,  -103,   -51,  -103,  -103,  -103,  -103,  -103,
  -103,   -78,   -79,  -103,  -103,  -103,   -98,   -99,  -100,  -102,
   -14,  -103,   -44,    -3,  -103,  -103,  -103,   -18,   -19,  -103,
  -103,  -103,   -53,   -54,   -59,  -103,  -103,   -56,   -57,   -52,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,   -87,   -88,  -103,  -103,  -103,    -2,  -103,  -103,  -103,
   -20,  -103,   -24,   -48,   -49,  -103,   -50,  -103,   -80,   -81,
   -82,   -83,   -84,   -85,   -86,   -90,   -91,   -92,   -93,   -94,
   -95,   -96,   -97,  -103,   -61,  -103,   -75,   -76,   -41,  -103,
   -41,   -41,   -89,   -26,   -15,    -7,  -103,  -103,   -10,   -21,
   -22,  -103,   -55,   -58,   -60,   -74,  -103,   -42,  -103,  -103,
  -103,  -103,  -103,  -103,   -14,  -103,    -9,   -23,   -24,   -25,
   -77,  -103,  -103,  -103,  -103,   -41,   -28,   -27,   -16,    -8,
   -62,   -68,   -64,   -70,  -103,  -103,  -103,  -103,   -29,   -30,
   -32,  -103,   -34,   -35,  -103,  -103,  -103,   -39,  -103,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
   -31,  -103,  -103,  -103,  -103,   -40,  -103,  -103,  -103,  -103,
   -41,   -69,   -71,    -6,  -103,   -28,  -103,   -33,   -36,   -37,
   -38,   -28,  -103,   -28,   -28,  -103,   -11,  -103,   -13,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,   -28,
   -63,   -12,   -65,   -68,   -67,   -72,  -103,  -103,  -103,   -28,
   -73,  -103,  -103,   -66 ]

racc_goto_table = [
     9,    51,    26,    58,    56,    42,    91,    26,   115,    26,
    45,    12,   138,    84,   140,   141,    50,   183,    44,    85,
     3,   190,   142,    78,     8,   187,   113,     2,     1,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,    26,
   190,   nil,   nil,   nil,    92,   nil,   nil,   nil,   nil,   164,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,    57,
   nil,   nil,   nil,    77,   nil,    79,    80,   nil,   150,    81,
    82,    83,   nil,   nil,   132,   nil,   nil,    58,   133,   nil,
   124,   nil,   nil,    26,   nil,   129,   nil,   165,   149,   237,
   nil,   nil,   126,   nil,   215,   nil,    98,    99,   100,   101,
   102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
   112,   114,   117,    26,    90,    26,    26,   158,   nil,    42,
   nil,    26,   157,    85,   nil,   147,   148,   nil,   nil,   nil,
    42,    52,    26,    57,   nil,   nil,   217,   nil,   nil,   nil,
   nil,   nil,   219,   nil,   221,   222,   nil,   nil,   nil,   nil,
    26,    26,   nil,   nil,   193,   139,    58,   194,   nil,   nil,
   236,    26,   188,    26,   nil,   nil,   nil,   nil,   nil,   192,
   241,   nil,   117,   nil,   nil,   197,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,   161,   nil,
   nil,   nil,   178,   nil,   nil,    26,   nil,   nil,   nil,   nil,
    26,   nil,   178,   nil,   178,   nil,    26,   191,    26,    26,
   nil,    52,    57,   nil,   nil,   196,   nil,   198,   199,   nil,
   201,   172,   nil,   178,    26,   nil,   nil,   nil,   nil,   nil,
   nil,   172,   nil,   172,    26,   nil,   nil,   nil,   nil,   nil,
   nil,   178,   nil,   nil,   nil,   nil,   nil,   178,   220,   178,
   178,   nil,   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   233,   nil,   nil,   178,   nil,   nil,   nil,   nil,
   172,   nil,   nil,   nil,   nil,   178,   172,   nil,   172,   172,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   172 ]

racc_goto_check = [
     6,    20,     6,    27,    21,    24,    16,     6,    31,     6,
    11,     4,    23,     7,    23,    23,     6,    29,     4,    14,
     3,    17,     8,     6,     3,    13,    28,     2,     1,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,     6,
    17,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,    18,
   nil,   nil,   nil,    18,   nil,    18,    18,   nil,    31,    18,
    18,    18,   nil,   nil,    20,   nil,   nil,    27,    21,   nil,
     6,   nil,   nil,     6,   nil,    11,   nil,     9,    16,    29,
   nil,   nil,     4,   nil,    23,   nil,    18,    18,    18,    18,
    18,    18,    18,    18,    18,    18,    18,    18,    18,    18,
    18,    18,    18,     6,    15,     6,     6,     7,   nil,    24,
   nil,     6,    14,    14,   nil,    11,     6,   nil,   nil,   nil,
    24,    18,     6,    18,   nil,   nil,     9,   nil,   nil,   nil,
   nil,   nil,     9,   nil,     9,     9,   nil,   nil,   nil,   nil,
     6,     6,   nil,   nil,    20,    18,    27,    21,   nil,   nil,
     9,     6,    11,     6,   nil,   nil,   nil,   nil,   nil,     6,
     9,   nil,    18,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,    18,   nil,   nil,     6,   nil,   nil,   nil,   nil,
     6,   nil,    18,   nil,    18,   nil,     6,    18,     6,     6,
   nil,    18,    18,   nil,   nil,    18,   nil,    18,    18,   nil,
    18,    15,   nil,    18,     6,   nil,   nil,   nil,   nil,   nil,
   nil,    15,   nil,    15,     6,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,    18,    18,    18,
    18,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,   nil,   nil,    18,   nil,   nil,   nil,   nil,
    15,   nil,   nil,   nil,   nil,    18,    15,   nil,    15,    15,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    28,    27,    20,     4,   nil,    -5,   -27,  -101,   -69,
   nil,    -5,   nil,  -141,   -21,    65,   -43,  -147,    36,   nil,
   -21,   -19,   nil,  -106,    -7,   nil,   nil,   -20,   -49,  -144,
   nil,   -68,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   137,     4,    55,   nil,   nil,   nil,
    18,   nil,   170,   168,    49,    19,   nil,   169,    25,   173,
   nil,   nil,   177,   nil,    17,    20,    24,    53,   nil,   nil,
    32,   nil,    31,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  4, 56, :_reduce_3,
  0, 57, :_reduce_none,
  2, 57, :_reduce_5,
  10, 59, :_reduce_6,
  4, 64, :_reduce_7,
  6, 64, :_reduce_8,
  5, 64, :_reduce_9,
  4, 64, :_reduce_10,
  4, 66, :_reduce_11,
  6, 66, :_reduce_12,
  4, 66, :_reduce_13,
  0, 61, :_reduce_none,
  2, 61, :_reduce_15,
  4, 61, :_reduce_16,
  1, 60, :_reduce_17,
  1, 68, :_reduce_18,
  1, 68, :_reduce_19,
  2, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  4, 65, :_reduce_23,
  1, 70, :_reduce_24,
  3, 70, :_reduce_25,
  0, 62, :_reduce_none,
  2, 62, :_reduce_27,
  0, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 67, :_reduce_30,
  2, 67, :_reduce_31,
  1, 71, :_reduce_32,
  3, 71, :_reduce_33,
  1, 71, :_reduce_34,
  1, 71, :_reduce_35,
  3, 71, :_reduce_36,
  3, 71, :_reduce_37,
  3, 71, :_reduce_38,
  1, 71, :_reduce_39,
  2, 71, :_reduce_40,
  0, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 58, :_reduce_43,
  2, 58, :_reduce_44,
  1, 78, :_reduce_45,
  1, 78, :_reduce_46,
  1, 78, :_reduce_47,
  3, 78, :_reduce_48,
  3, 78, :_reduce_49,
  3, 78, :_reduce_50,
  1, 78, :_reduce_51,
  2, 78, :_reduce_52,
  1, 74, :_reduce_53,
  1, 74, :_reduce_54,
  3, 74, :_reduce_55,
  1, 75, :_reduce_56,
  1, 75, :_reduce_57,
  3, 75, :_reduce_58,
  1, 81, :_reduce_59,
  4, 69, :_reduce_60,
  1, 82, :_reduce_61,
  6, 79, :_reduce_62,
  11, 79, :_reduce_63,
  6, 79, :_reduce_64,
  6, 73, :_reduce_65,
  11, 73, :_reduce_66,
  6, 73, :_reduce_67,
  0, 83, :_reduce_none,
  2, 83, :_reduce_69,
  6, 80, :_reduce_70,
  8, 80, :_reduce_71,
  6, 76, :_reduce_72,
  8, 76, :_reduce_73,
  4, 84, :_reduce_74,
  3, 84, :_reduce_75,
  1, 85, :_reduce_76,
  3, 85, :_reduce_77,
  1, 72, :_reduce_none,
  1, 72, :_reduce_none,
  3, 72, :_reduce_80,
  3, 72, :_reduce_81,
  3, 72, :_reduce_82,
  3, 72, :_reduce_83,
  3, 72, :_reduce_84,
  3, 72, :_reduce_85,
  3, 72, :_reduce_86,
  2, 72, :_reduce_87,
  2, 72, :_reduce_88,
  3, 72, :_reduce_89,
  3, 72, :_reduce_90,
  3, 72, :_reduce_91,
  3, 72, :_reduce_92,
  3, 72, :_reduce_93,
  3, 72, :_reduce_94,
  3, 72, :_reduce_95,
  3, 72, :_reduce_96,
  3, 72, :_reduce_97,
  1, 87, :_reduce_98,
  1, 87, :_reduce_99,
  1, 86, :_reduce_100,
  1, 86, :_reduce_101,
  1, 86, :_reduce_none ]

racc_reduce_n = 103

racc_shift_n = 244

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "Var",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "wisf",
  "LInstf",
  "type",
  "Assign",
  "ListID",
  "Instf",
  "Expr",
  "IteratorF",
  "writable1",
  "writable2",
  "CondF",
  "LInstruc",
  "Inst",
  "Iterator",
  "Cond",
  "Str",
  "Asignable",
  "by",
  "Call",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0]);$Close = Closeeye.new()
        $Open= Openeye.new();
        $Home = Home.new();
        $Forward = Forward.new();
        $Backward = Backward.new();
        $Setposition = Setposition.new();$Rotater=Rotater.new();$Rotatel=Rotatel.new()
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 53)
  def _reduce_2(val, _values, result)
    result = Scope.new(:Funciones,val[0],:Program,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 54)
  def _reduce_3(val, _values, result)
    result = Scope.new(:Funciones,val[0],nil,nil)
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'retina_parser.y', 59)
  def _reduce_5(val, _values, result)
    result=ListaFunc.new(:Funcion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_6(val, _values, result)
    result=Func.new(:Nombre_Funcion,val[1],:Parametros,val[3],:Tipo_Retorno,val[5],:Instrucciones,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 67)
  def _reduce_7(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_8(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_9(val, _values, result)
    result=Bloque.new(:declaraciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_10(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 74)
  def _reduce_11(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_12(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_13(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_15(val, _values, result)
    result=ListD.new(:tipos,val[0],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_16(val, _values, result)
    result=List.new(:tipos,val[0],val[3],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_17(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_18(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_19(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_20(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_21(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1],:declaracion,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_22(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:Lista_ID,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_23(val, _values, result)
    result=Ldecl.new(:Lista_Decl,:tipo,val[0],:Lista_ID,val[1],:declaracion,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_24(val, _values, result)
    result=ListID.new(:ID,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_25(val, _values, result)
    result=ListID.new(:ID,val[0],val[2])
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_27(val, _values, result)
    result=Retorno.new(:tipo,val[1])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_30(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_31(val, _values, result)
    result=ListaInst.new(:Instruccion,val[1],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_32(val, _values, result)
    result=InstWis.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_33(val, _values, result)
    result=InstReturn.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_34(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_35(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_36(val, _values, result)
    result=Read.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_37(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_38(val, _values, result)
    result=WriteSalto.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_39(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_40(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_43(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_44(val, _values, result)
    result=ListaInst.new(:Instruccion,val[1],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_45(val, _values, result)
    result=InstWis.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_46(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_47(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_48(val, _values, result)
    result=Read.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_49(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_50(val, _values, result)
    result=WriteSalto.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_51(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_52(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_53(val, _values, result)
    result=Writable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_54(val, _values, result)
    result=Writable.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 159)
  def _reduce_55(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 163)
  def _reduce_56(val, _values, result)
    result=Writable2.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_57(val, _values, result)
    result=Writable2.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_58(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_59(val, _values, result)
    result=Str.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 174)
  def _reduce_60(val, _values, result)
    result=Assign.new(:Lado_Izquierdo,val[0],:Lado_Derecho,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_61(val, _values, result)
    result=Asignable_Expr.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_62(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_63(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 184)
  def _reduce_64(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 188)
  def _reduce_65(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_66(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 190)
  def _reduce_67(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'retina_parser.y', 195)
  def _reduce_69(val, _values, result)
    result=By.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 199)
  def _reduce_70(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 200)
  def _reduce_71(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 204)
  def _reduce_72(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 205)
  def _reduce_73(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 209)
  def _reduce_74(val, _values, result)
    result=Call.new(:nombre,val[0],:argumentos,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 210)
  def _reduce_75(val, _values, result)
    result=Call.new(:nombre,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 214)
  def _reduce_76(val, _values, result)
    result=ListParam.new(:expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_77(val, _values, result)
    result=ListParam.new(:expresion,val[0],val[2])
    result
  end
.,.,

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'retina_parser.y', 226)
  def _reduce_80(val, _values, result)
    result = BinExpSuma.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 227)
  def _reduce_81(val, _values, result)
    result = BinExpResta.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 228)
  def _reduce_82(val, _values, result)
    result = BinExpMult.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 229)
  def _reduce_83(val, _values, result)
    result = BinExpDiv2.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 230)
  def _reduce_84(val, _values, result)
    result = BinExpMod2.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 231)
  def _reduce_85(val, _values, result)
    result = BinExpDiv.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 232)
  def _reduce_86(val, _values, result)
    result = BinExpMod.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 233)
  def _reduce_87(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_88(val, _values, result)
    result = UnaExp.new(:Negacion , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 235)
  def _reduce_89(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 236)
  def _reduce_90(val, _values, result)
    result = BinExpOr.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 237)
  def _reduce_91(val, _values, result)
    result = BinExpAnd.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 238)
  def _reduce_92(val, _values, result)
    result = BinExpLT.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 239)
  def _reduce_93(val, _values, result)
    result = BinExpGT.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 240)
  def _reduce_94(val, _values, result)
    result = BinExpLET.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 241)
  def _reduce_95(val, _values, result)
    result = BinExpGET.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 242)
  def _reduce_96(val, _values, result)
    result = BinExpDist.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 243)
  def _reduce_97(val, _values, result)
    result = BinExpEQ.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 249)
  def _reduce_98(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 250)
  def _reduce_99(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 254)
  def _reduce_100(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 255)
  def _reduce_101(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 102 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
