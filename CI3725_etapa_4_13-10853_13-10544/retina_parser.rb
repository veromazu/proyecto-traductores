#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"

require_relative 'retina_ast'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            case @token.symbol
                when :TYPEN,:TYPEB
                tokenName="tipo de dato"
            when :TRUE,:FALSE
                tokenName="literal booleano"
            when :AND,:NOT,:OR
                tokenName="operador booleano"
            when :PROGRAM,:BEGIN,:END,:WITH,:DO,:IF,:THEN,:READ,:ELSE,:WHILE,:FOR,:REPEAT,:WRITE,:WRITELN,:FROM,:TO,:BY,:FUNC,:RETURN,:RETURN2
                tokenName="palabra reservada"
            when :EQUIVALENT,:LESSTHAN,:DISTINCT,:GETHAN,:LESSTHAN,:GREATTHAN
                tokenName="operador de comparación"
            when :LPARENT,:RPARENT,:EQUAL,:SEMICOLON,:COLON,:RCURLY,:LCURLY
                tokenName="signo"
            when :PLUS,:MOD,:DIV,:MOD2,:DIV2,:MULT,:LESS
                tokenName="operador aritmético"
            when :ID
                tokenName="identificador"
            when :STRING
                tokenName="string"
            when :DIGIT
                tokenName="literal numérico"
            end
           return " Línea #{@token.position[0]}, Column #{@token.position[1]}: token inesperado : "<< tokenName << " : #{@token.id}"
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 291)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
    if ((token = @lexer.next_token)!=nil)
        return [token.symbol,token]
    else 
        return nil
    end

end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    58,    59,    60,    61,    37,   -16,    32,    44,    45,    34,
    66,     5,    65,    35,    36,    37,    33,    32,   189,    74,
    34,    37,   158,    32,    35,    36,    34,    33,    44,    45,
    35,    36,    93,    33,    72,    67,    71,    70,    69,    68,
    94,   -16,    64,    63,    62,    95,    60,    61,    73,   134,
    15,    53,   213,    94,    37,    73,    32,   130,   130,    34,
    94,    15,    53,    35,    36,   152,    33,    15,    53,    37,
   153,    32,    44,    45,    34,   159,   212,   154,    35,    36,
    37,    33,    32,    43,    94,    34,    64,    63,    62,    35,
    36,   232,    33,    44,    45,   161,   233,    14,    13,    30,
    15,    53,    27,    28,    29,   162,    20,    21,    22,   151,
    60,    61,    37,   149,    32,    15,    53,    34,    44,    45,
    10,    35,    36,   185,    33,   186,    15,    44,    45,   166,
   165,   182,    44,    45,   179,   180,   181,   144,   173,   174,
   175,   143,   142,   141,    37,   170,    32,    10,   133,    34,
    64,    63,    62,    35,    36,   132,    33,   196,    15,   129,
   226,   166,   165,   182,   127,    10,   179,   180,   181,   124,
   173,   174,   175,    10,    37,   202,    32,   170,   122,    34,
   204,   205,   206,    35,    36,   207,    33,   208,   209,   118,
    15,    14,    13,    30,   211,   155,    27,    28,    29,    74,
    20,    21,    22,    37,    92,    32,   215,    10,    34,    37,
    88,    32,    35,    36,    34,    33,    87,    86,    35,    36,
    15,    33,   219,    85,   221,    10,   166,   165,   182,    56,
    10,   179,   180,   181,    40,   173,   174,   175,   227,   228,
   229,    37,   170,    32,    39,   231,    34,    11,   234,    76,
    35,    36,   235,    33,   236,    15,   237,    10,    14,    13,
    30,   239,   240,    27,    28,    29,     5,    20,    21,    22,
     7,    37,   243,    32,   244,   245,    34,     6,   247,   248,
    35,    36,   nil,    33,   nil,   nil,   nil,    15,   166,   165,
   182,   nil,   nil,   179,   180,   181,   nil,   173,   174,   175,
    37,   nil,    32,   nil,   170,    34,    37,   nil,    32,    35,
    36,    34,    33,   nil,   nil,    35,    36,    15,    33,   nil,
   nil,   nil,   nil,    14,    13,    30,   nil,   nil,    27,    28,
    29,   nil,    20,    21,    22,    37,   nil,    32,   nil,   nil,
    34,   nil,   nil,   nil,    35,    36,    76,    33,   nil,    37,
   nil,    32,    15,   nil,    34,   nil,   nil,   nil,    35,    36,
   nil,    33,   nil,   nil,   nil,   nil,   166,   165,   182,   nil,
   nil,   179,   180,   181,   nil,   173,   174,   175,    37,   nil,
    32,    76,   170,    34,    37,   nil,    32,    35,    36,    34,
    33,   nil,   nil,    35,    36,    15,    33,   nil,   nil,    37,
   nil,    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,
   nil,    33,   nil,   nil,   nil,   nil,   166,   165,   182,   nil,
   nil,   179,   180,   181,    15,   173,   174,   175,   nil,    37,
    76,    32,   170,   nil,    34,   nil,   nil,   nil,    35,    36,
   nil,    33,    37,   nil,    32,    15,   nil,    34,    37,   nil,
    32,    35,    36,    34,    33,   nil,   nil,    35,    36,    37,
    33,    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,
   nil,    33,    37,   nil,    32,    76,   nil,    34,   nil,   nil,
   nil,    35,    36,   nil,    33,   nil,   nil,   nil,    76,   nil,
   nil,   nil,   nil,   nil,    76,   nil,   nil,    37,   nil,    32,
   nil,   nil,    34,   nil,   nil,    76,    35,    36,   nil,    33,
   nil,   nil,   nil,   139,    14,    13,    30,   nil,    76,    27,
    28,    29,   nil,    20,    21,    22,   nil,    37,   nil,    32,
   nil,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,    33,
   nil,   nil,   nil,    15,   166,   165,   182,   nil,   nil,   179,
   180,   181,   nil,   173,   174,   175,   nil,    37,   nil,    32,
   170,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,    33,
   nil,   nil,   nil,    15,    14,    13,    30,   nil,   nil,    27,
    28,    29,   nil,    20,    21,    22,   nil,    37,   nil,    32,
   nil,   nil,    34,   nil,   nil,   nil,    35,    36,   nil,    33,
   nil,   nil,   nil,    15,    14,    13,    30,   nil,   nil,    27,
    28,    29,   nil,    20,    21,    22,    37,   nil,    32,   nil,
   nil,    34,    37,   nil,    32,    35,    36,    34,    33,   nil,
   nil,    35,    36,    15,    33,   nil,   nil,   nil,   nil,    14,
    13,    30,   nil,   nil,    27,    28,    29,   nil,    20,    21,
    22,    37,   nil,    32,   nil,   nil,    34,   nil,   nil,   nil,
    35,    36,    76,    33,   nil,    37,   nil,    32,    15,   nil,
    34,   nil,   nil,   nil,    35,    36,   nil,    33,   nil,   nil,
   nil,   nil,   166,   165,   182,   nil,   nil,   179,   180,   181,
   nil,   173,   174,   175,    37,   nil,    32,    76,   170,    34,
    37,   nil,    32,    35,    36,    34,    33,   nil,   nil,    35,
    36,    15,    33,   nil,   nil,   nil,   nil,   166,   165,   182,
   nil,   nil,   179,   180,   181,   nil,   173,   174,   175,    37,
   nil,    32,   nil,   170,    34,   nil,   nil,   nil,    35,    36,
    76,    33,    37,   nil,    32,   nil,    15,    34,    37,   nil,
    32,    35,    36,    34,    33,   nil,   nil,    35,    36,    37,
    33,    32,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,
   nil,    33,    37,   nil,    32,    76,   nil,    34,   nil,   nil,
   nil,    35,    36,   nil,    33,   nil,   nil,    37,    76,    32,
   nil,   nil,    34,   nil,    76,   nil,    35,    36,    37,    33,
    32,   nil,   nil,    34,   nil,    76,   nil,    35,    36,   nil,
    33,   nil,   nil,   nil,   126,    14,    13,    30,    76,   nil,
    27,    28,    29,   nil,    20,    21,    22,    37,   nil,    32,
   nil,   nil,    34,    76,   nil,   nil,    35,    36,    37,    33,
    32,   nil,   nil,    34,    15,   nil,   nil,    35,    36,    37,
    33,    32,   nil,   nil,    34,    37,   nil,    32,    35,    36,
    34,    33,   nil,   nil,    35,    36,    37,    33,    32,   nil,
   nil,    34,   nil,    76,   nil,    35,    36,    37,    33,    32,
   nil,   nil,    34,   nil,    76,   nil,    35,    36,    37,    33,
    32,   nil,   nil,    34,    37,    76,    32,    35,    36,    34,
    33,    76,   nil,    35,    36,    37,    33,    32,   nil,   nil,
    34,   nil,    76,   nil,    35,    36,    37,    33,    32,   nil,
   nil,    34,   nil,    76,   nil,    35,    36,    37,    33,    32,
   nil,   nil,    34,   115,    76,   nil,    35,    36,   nil,    33,
    76,   nil,   nil,    37,   nil,    32,   nil,   nil,    34,   nil,
   nil,    76,    35,    36,    37,    33,    32,   nil,   nil,    34,
   nil,   nil,    15,    35,    36,    37,    33,    32,   nil,   nil,
    34,   nil,   nil,    76,    35,    36,   nil,    33,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,    76,
    65,    58,    59,    60,    61,   nil,   121,   120,   nil,   nil,
    76,    66,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    76,    72,    67,    71,    70,    69,    68,   nil,   nil,
    64,    63,    62,   nil,   nil,    72,    67,    71,    70,    69,
    68,   nil,   nil,    64,    63,    62,    58,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,
   119,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    72,    67,    71,    70,    69,    68,   nil,   nil,    64,    63,
    62,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   210,    64,    63,    62,    58,    59,    60,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,
   nil,   117,    58,    59,    60,    61,   nil,   nil,   nil,   nil,
   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,    72,    67,
    71,    70,    69,    68,   nil,   nil,    64,    63,    62,   nil,
   nil,   nil,   184,   nil,   nil,   nil,    72,    67,    71,    70,
    69,    68,   nil,   nil,    64,    63,    62,    58,    59,    60,
    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,
   nil,   nil,   nil,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    66,   nil,    65,   150,   nil,   nil,   nil,
   nil,    72,    67,    71,    70,    69,    68,   nil,   nil,    64,
    63,    62,   230,   nil,   nil,   nil,   nil,    72,    67,    71,
    70,    69,    68,   nil,   nil,    64,    63,    62,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    65,   nil,   nil,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,   nil,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,   197,
    64,    63,    62,   184,   nil,   nil,   nil,    72,    67,    71,
    70,    69,    68,   nil,   nil,    64,    63,    62,    58,    59,
    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    65,    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,    57,
    64,    63,    62,   nil,   nil,    72,    67,    71,    70,    69,
    68,   nil,   nil,    64,    63,    62,    58,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,    58,
    59,    60,    61,   nil,   nil,   217,   nil,   nil,   nil,    66,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    72,    67,    71,    70,    69,    68,   nil,   nil,    64,    63,
    62,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,    72,    67,    71,    70,    69,    68,
   nil,   nil,    64,    63,    62,    58,    59,    60,    61,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    58,    59,    60,    61,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    58,    59,    60,
    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  -103,
  -103,  -103,  -103,  -103,  -103,   nil,   nil,    64,    63,    62,
  -103,  -103,  -103,  -103,  -103,  -103,   nil,   nil,    64,    63,
    62,  -103,  -103,  -103,  -103,  -103,  -103,   nil,   nil,    64,
    63,    62,    58,    59,    60,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    59,    60,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    58,    59,    60,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  -103,  -103,  -103,  -103,
  -103,  -103,   nil,   nil,    64,    63,    62,  -103,  -103,  -103,
  -103,  -103,  -103,   nil,   nil,    64,    63,    62,  -103,  -103,
  -103,  -103,  -103,  -103,   nil,   nil,    64,    63,    62,    58,
    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,
   nil,    65,    58,    59,    60,    61,   214,   nil,   nil,   nil,
   nil,   nil,    66,   nil,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    72,    67,    71,    70,    69,    68,   nil,
   nil,    64,    63,    62,   nil,   nil,    72,    67,    71,    70,
    69,    68,   nil,   nil,    64,    63,    62,    58,    59,    60,
    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,    65,
    58,    59,    60,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    66,   216,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    72,    67,    71,    70,    69,    68,   nil,   nil,    64,
    63,    62,   nil,   nil,    72,    67,    71,    70,    69,    68,
   nil,   nil,    64,    63,    62 ]

racc_action_check = [
   116,   116,   116,   116,   174,    15,   174,   166,   166,   174,
   116,     0,   116,   174,   174,   175,   174,   175,   166,    26,
   175,    94,   143,    94,   175,   175,    94,   175,   129,   129,
    94,    94,    49,    94,   116,   116,   116,   116,   116,   116,
    49,    15,   116,   116,   116,    55,    96,    96,    91,   116,
   174,   174,   195,    55,    21,    26,    21,    91,   146,    21,
   195,   175,   175,    21,    21,   138,    21,    94,    94,    22,
   138,    22,    14,    14,    22,   149,   194,   139,    22,    22,
   119,    22,   119,    14,   194,   119,    96,    96,    96,   119,
   119,   225,   119,    89,    89,   151,   225,   119,   119,   119,
    21,    21,   119,   119,   119,   152,   119,   119,   119,   137,
    97,    97,   155,   135,   155,    22,    22,   155,    39,    39,
   130,   155,   155,   163,   155,   164,   119,   142,   142,   155,
   155,   155,   141,   141,   155,   155,   155,   126,   155,   155,
   155,   125,   123,   122,   217,   155,   217,   173,   114,   217,
    97,    97,    97,   217,   217,   111,   217,   177,   155,    90,
   217,   217,   217,   217,    88,   180,   217,   217,   217,    86,
   217,   217,   217,    84,    13,   183,    13,   217,    83,    13,
   185,   186,   187,    13,    13,   188,    13,   189,   191,    77,
   217,    13,    13,    13,   193,   140,    13,    13,    13,    54,
    13,    13,    13,   134,    48,   134,   199,    46,   134,   165,
    43,   165,   134,   134,   165,   134,    42,    41,   165,   165,
    13,   165,   206,    40,   208,    28,   165,   165,   165,    24,
    20,   165,   165,   165,    12,   165,   165,   165,   218,   220,
   222,    16,   165,    16,     9,   224,    16,     6,   226,   134,
    16,    16,   227,    16,   228,   165,   229,     5,    16,    16,
    16,   231,   232,    16,    16,    16,     4,    16,    16,    16,
     3,   216,   241,   216,   242,   243,   216,     1,   246,   247,
   216,   216,   nil,   216,   nil,   nil,   nil,    16,   216,   216,
   216,   nil,   nil,   216,   216,   216,   nil,   216,   216,   216,
    63,   nil,    63,   nil,   216,    63,   153,   nil,   153,    63,
    63,   153,    63,   nil,   nil,   153,   153,   216,   153,   nil,
   nil,   nil,   nil,   153,   153,   153,   nil,   nil,   153,   153,
   153,   nil,   153,   153,   153,   215,   nil,   215,   nil,   nil,
   215,   nil,   nil,   nil,   215,   215,    63,   215,   nil,   168,
   nil,   168,   153,   nil,   168,   nil,   nil,   nil,   168,   168,
   nil,   168,   nil,   nil,   nil,   nil,   168,   168,   168,   nil,
   nil,   168,   168,   168,   nil,   168,   168,   168,   170,   nil,
   170,   215,   168,   170,    27,   nil,    27,   170,   170,    27,
   170,   nil,   nil,    27,    27,   168,    27,   nil,   nil,   214,
   nil,   214,   nil,   nil,   214,   nil,   nil,   nil,   214,   214,
   nil,   214,   nil,   nil,   nil,   nil,   214,   214,   214,   nil,
   nil,   214,   214,   214,   170,   214,   214,   214,   nil,    29,
    27,    29,   214,   nil,    29,   nil,   nil,   nil,    29,    29,
   nil,    29,    30,   nil,    30,   214,   nil,    30,    32,   nil,
    32,    30,    30,    32,    30,   nil,   nil,    32,    32,    33,
    32,    33,   nil,   nil,    33,   nil,   nil,   nil,    33,    33,
   nil,    33,   184,   nil,   184,    29,   nil,   184,   nil,   nil,
   nil,   184,   184,   nil,   184,   nil,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,    32,   nil,   nil,   120,   nil,   120,
   nil,   nil,   120,   nil,   nil,    33,   120,   120,   nil,   120,
   nil,   nil,   nil,   120,   120,   120,   120,   nil,   184,   120,
   120,   120,   nil,   120,   120,   120,   nil,   207,   nil,   207,
   nil,   nil,   207,   nil,   nil,   nil,   207,   207,   nil,   207,
   nil,   nil,   nil,   120,   207,   207,   207,   nil,   nil,   207,
   207,   207,   nil,   207,   207,   207,   nil,     7,   nil,     7,
   207,   nil,     7,   nil,   nil,   nil,     7,     7,   nil,     7,
   nil,   nil,   nil,   207,     7,     7,     7,   nil,   nil,     7,
     7,     7,   nil,     7,     7,     7,   nil,   202,   nil,   202,
   nil,   nil,   202,   nil,   nil,   nil,   202,   202,   nil,   202,
   nil,   nil,   nil,     7,   202,   202,   202,   nil,   nil,   202,
   202,   202,   nil,   202,   202,   202,   118,   nil,   118,   nil,
   nil,   118,   117,   nil,   117,   118,   118,   117,   118,   nil,
   nil,   117,   117,   202,   117,   nil,   nil,   nil,   nil,   117,
   117,   117,   nil,   nil,   117,   117,   117,   nil,   117,   117,
   117,   230,   nil,   230,   nil,   nil,   230,   nil,   nil,   nil,
   230,   230,   118,   230,   nil,   233,   nil,   233,   117,   nil,
   233,   nil,   nil,   nil,   233,   233,   nil,   233,   nil,   nil,
   nil,   nil,   233,   233,   233,   nil,   nil,   233,   233,   233,
   nil,   233,   233,   233,   150,   nil,   150,   230,   233,   150,
   244,   nil,   244,   150,   150,   244,   150,   nil,   nil,   244,
   244,   233,   244,   nil,   nil,   nil,   nil,   244,   244,   244,
   nil,   nil,   244,   244,   244,   nil,   244,   244,   244,   179,
   nil,   179,   nil,   244,   179,   nil,   nil,   nil,   179,   179,
   150,   179,    58,   nil,    58,   nil,   244,    58,    59,   nil,
    59,    58,    58,    59,    58,   nil,   nil,    59,    59,    60,
    59,    60,   nil,   nil,    60,   nil,   nil,   nil,    60,    60,
   nil,    60,    61,   nil,    61,   179,   nil,    61,   nil,   nil,
   nil,    61,    61,   nil,    61,   nil,   nil,    62,    58,    62,
   nil,   nil,    62,   nil,    59,   nil,    62,    62,    87,    62,
    87,   nil,   nil,    87,   nil,    60,   nil,    87,    87,   nil,
    87,   nil,   nil,   nil,    87,    87,    87,    87,    61,   nil,
    87,    87,    87,   nil,    87,    87,    87,    64,   nil,    64,
   nil,   nil,    64,    62,   nil,   nil,    64,    64,    65,    64,
    65,   nil,   nil,    65,    87,   nil,   nil,    65,    65,    66,
    65,    66,   nil,   nil,    66,    67,   nil,    67,    66,    66,
    67,    66,   nil,   nil,    67,    67,    68,    67,    68,   nil,
   nil,    68,   nil,    64,   nil,    68,    68,    69,    68,    69,
   nil,   nil,    69,   nil,    65,   nil,    69,    69,    70,    69,
    70,   nil,   nil,    70,    71,    66,    71,    70,    70,    71,
    70,    67,   nil,    71,    71,    72,    71,    72,   nil,   nil,
    72,   nil,    68,   nil,    72,    72,    73,    72,    73,   nil,
   nil,    73,   nil,    69,   nil,    73,    73,    74,    73,    74,
   nil,   nil,    74,    74,    70,   nil,    74,    74,   nil,    74,
    71,   nil,   nil,   181,   nil,   181,   nil,   nil,   181,   nil,
   nil,    72,   181,   181,   182,   181,   182,   nil,   nil,   182,
   nil,   nil,    73,   182,   182,    34,   182,    34,   nil,   nil,
    34,   nil,   nil,    74,    34,    34,   nil,    34,    79,    79,
    79,    79,   nil,   nil,   nil,   nil,   nil,   nil,    79,   181,
    79,    82,    82,    82,    82,   nil,    82,    79,   nil,   nil,
   182,    82,   nil,    82,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    34,    79,    79,    79,    79,    79,    79,   nil,   nil,
    79,    79,    79,   nil,   nil,    82,    82,    82,    82,    82,
    82,   nil,   nil,    82,    82,    82,    78,    78,    78,    78,
   nil,   nil,   nil,   nil,   nil,   nil,    78,   nil,    78,   192,
   192,   192,   192,   nil,   nil,   nil,   nil,   nil,   nil,   192,
    78,   192,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    78,    78,    78,    78,    78,    78,   nil,   nil,    78,    78,
    78,   nil,   nil,   192,   192,   192,   192,   192,   192,   nil,
   192,   192,   192,   192,    75,    75,    75,    75,   nil,   nil,
   nil,   nil,   nil,   nil,    75,   nil,    75,   nil,   nil,   nil,
   nil,    75,   238,   238,   238,   238,   nil,   nil,   nil,   nil,
   nil,   nil,   238,   nil,   238,   nil,   nil,   nil,    75,    75,
    75,    75,    75,    75,   nil,   nil,    75,    75,    75,   nil,
   nil,   nil,   238,   nil,   nil,   nil,   238,   238,   238,   238,
   238,   238,   nil,   nil,   238,   238,   238,   136,   136,   136,
   136,   nil,   nil,   nil,   nil,   nil,   nil,   136,   nil,   136,
   nil,   nil,   nil,   223,   223,   223,   223,   nil,   nil,   nil,
   nil,   nil,   nil,   223,   nil,   223,   136,   nil,   nil,   nil,
   nil,   136,   136,   136,   136,   136,   136,   nil,   nil,   136,
   136,   136,   223,   nil,   nil,   nil,   nil,   223,   223,   223,
   223,   223,   223,   nil,   nil,   223,   223,   223,   178,   178,
   178,   178,   nil,   nil,   nil,   nil,   nil,   nil,   178,   nil,
   178,   nil,   nil,   160,   160,   160,   160,   nil,   nil,   nil,
   nil,   nil,   nil,   160,   nil,   160,   nil,   nil,   nil,   nil,
   nil,   nil,   178,   178,   178,   178,   178,   178,   nil,   178,
   178,   178,   178,   160,   nil,   nil,   nil,   160,   160,   160,
   160,   160,   160,   nil,   nil,   160,   160,   160,    25,    25,
    25,    25,   nil,   nil,   nil,   nil,   nil,   nil,    25,   nil,
    25,   203,   203,   203,   203,   nil,   nil,   nil,   nil,   nil,
   nil,   203,   nil,   203,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,    25,    25,    25,    25,    25,   nil,    25,
    25,    25,    25,   nil,   nil,   203,   203,   203,   203,   203,
   203,   nil,   nil,   203,   203,   203,   201,   201,   201,   201,
   nil,   nil,   nil,   nil,   nil,   nil,   201,   nil,   201,   103,
   103,   103,   103,   nil,   nil,   201,   nil,   nil,   nil,   103,
   104,   104,   104,   104,   nil,   nil,   nil,   nil,   nil,   nil,
   201,   201,   201,   201,   201,   201,   nil,   nil,   201,   201,
   201,   nil,   nil,   103,   103,   103,   103,   103,   103,   nil,
   nil,   103,   103,   103,   104,   104,   104,   104,   104,   104,
   nil,   nil,   104,   104,   104,   105,   105,   105,   105,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   106,   106,   106,   106,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,   107,   107,
   107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   105,
   105,   105,   105,   105,   105,   nil,   nil,   105,   105,   105,
   106,   106,   106,   106,   106,   106,   nil,   nil,   106,   106,
   106,   107,   107,   107,   107,   107,   107,   nil,   nil,   107,
   107,   107,   108,   108,   108,   108,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   109,   109,   109,   109,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   110,   110,   110,   110,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   108,   108,   108,   108,
   108,   108,   nil,   nil,   108,   108,   108,   109,   109,   109,
   109,   109,   109,   nil,   nil,   109,   109,   109,   110,   110,
   110,   110,   110,   110,   nil,   nil,   110,   110,   110,   198,
   198,   198,   198,   nil,   nil,   nil,   nil,   nil,   nil,   198,
   nil,   198,   112,   112,   112,   112,   198,   nil,   nil,   nil,
   nil,   nil,   112,   nil,   112,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   198,   198,   198,   198,   198,   198,   nil,
   nil,   198,   198,   198,   nil,   nil,   112,   112,   112,   112,
   112,   112,   nil,   nil,   112,   112,   112,   200,   200,   200,
   200,   nil,   nil,   nil,   nil,   nil,   nil,   200,   nil,   200,
    50,    50,    50,    50,   nil,   nil,   nil,   nil,   nil,   nil,
    50,   200,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   200,   200,   200,   200,   200,   200,   nil,   nil,   200,
   200,   200,   nil,   nil,    50,    50,    50,    50,    50,    50,
   nil,   nil,    50,    50,    50 ]

racc_action_pointer = [
   -23,   277,   nil,   254,   232,   209,   247,   555,   nil,   237,
   nil,   nil,   216,   172,    63,    -2,   239,   nil,   nil,   nil,
   182,    52,    67,   nil,   185,  1275,    12,   382,   177,   427,
   440,   nil,   446,   457,   963,   nil,   nil,   nil,   nil,   109,
   179,   199,   196,   192,   nil,   nil,   159,   nil,   160,   -12,
  1607,   nil,   nil,   nil,   192,     1,   nil,   nil,   740,   746,
   757,   770,   785,   298,   825,   836,   847,   853,   864,   875,
   886,   892,   903,   914,   925,  1091,   nil,   158,  1033,   975,
   nil,   nil,   988,   170,   125,   nil,   125,   796,   120,    84,
   115,     5,   nil,   nil,    19,   nil,    41,   105,   nil,   nil,
   nil,   nil,   nil,  1346,  1357,  1402,  1413,  1424,  1469,  1480,
  1491,   111,  1549,   nil,   140,   nil,    -3,   620,   614,    78,
   495,   nil,   107,    90,   nil,   123,    93,   nil,   nil,    19,
    72,   nil,   nil,   nil,   201,    95,  1154,    91,    47,    33,
   178,   123,   118,   -22,   nil,   nil,     6,   nil,   nil,    31,
   692,    51,    61,   304,   nil,   110,   nil,   nil,   nil,   nil,
  1230,   nil,   nil,   105,   107,   207,    -2,   nil,   347,   nil,
   376,   nil,   nil,    99,     2,    13,   nil,   113,  1215,   727,
   117,   941,   952,   155,   470,   136,   137,   164,   165,   169,
   nil,   144,  1046,   150,    32,     8,   nil,   nil,  1536,   175,
  1594,  1333,   585,  1288,   nil,   nil,   178,   525,   180,   nil,
   nil,   nil,   nil,   nil,   397,   333,   269,   142,   220,   nil,
   221,   nil,   222,  1170,   227,    73,   204,   208,   210,   212,
   649,   217,   218,   663,   nil,   nil,   nil,   nil,  1109,   nil,
   nil,   254,   254,   231,   698,   nil,   260,   235,   nil ]

racc_action_default = [
    -3,  -103,    -1,  -103,    -3,  -103,  -103,  -103,    -4,  -103,
   -16,   249,  -103,  -103,  -103,  -101,   -42,   -44,   -45,   -46,
  -103,  -103,  -103,   -50,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,   -79,  -103,  -103,  -103,   -98,   -99,  -100,  -102,   -13,
  -103,  -103,  -103,  -103,   -17,   -18,  -103,   -43,  -103,  -103,
   -53,   -54,   -55,   -57,  -103,  -103,   -51,   -52,  -103,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -101,  -103,  -103,  -103,
   -87,   -88,  -103,  -103,  -103,    -2,  -103,  -103,  -103,   -19,
  -103,   -23,   -47,   -48,  -103,   -49,   -80,   -81,   -82,   -83,
   -84,   -85,   -86,   -90,   -91,   -92,   -93,   -94,   -95,   -96,
   -97,  -103,   -59,   -60,  -103,   -76,   -77,  -103,  -103,  -103,
  -103,   -89,   -25,   -14,    -6,  -103,  -103,    -9,   -20,   -21,
  -103,   -56,   -58,   -75,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,  -103,   -13,  -103,    -8,   -22,   -23,   -24,   -78,  -103,
  -103,  -103,  -103,  -103,   -70,   -27,   -26,   -15,    -7,   -61,
   -67,   -63,   -69,  -103,  -103,  -103,  -103,   -28,   -29,   -31,
  -103,   -34,   -35,  -103,  -103,  -103,   -39,  -103,  -103,  -103,
  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
   -30,  -103,  -103,  -103,  -103,  -103,   -40,   -41,  -103,  -103,
  -103,  -103,  -103,   -68,   -71,    -5,  -103,   -27,  -103,   -32,
   -33,   -36,   -37,   -38,  -103,  -103,  -103,  -103,  -103,   -10,
  -103,   -12,  -103,  -103,  -103,  -103,  -103,  -103,  -103,  -103,
  -103,  -103,  -103,  -103,   -73,   -62,   -11,   -64,   -67,   -66,
   -72,  -103,  -103,  -103,  -103,   -74,  -103,  -103,   -65 ]

racc_goto_table = [
    50,    50,    49,    55,    83,    89,    75,    42,    78,    79,
    90,    80,    81,    82,   183,   164,    84,   187,    52,    52,
   190,   114,     3,    12,   111,   140,     8,     2,     1,    41,
   nil,   nil,    47,   nil,   nil,   nil,   nil,    96,    97,    98,
    99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
   109,   110,   112,   116,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   222,   220,   224,   225,
   113,   nil,   nil,    50,   nil,   131,   nil,   nil,   nil,   nil,
   nil,   148,   128,   nil,   nil,   241,   nil,   nil,   nil,   nil,
   nil,    52,   242,   nil,   147,   nil,   246,   136,   nil,   nil,
     9,   nil,   nil,   125,   nil,   nil,   nil,   157,   nil,   nil,
   nil,   nil,   nil,   116,   171,    48,    54,    54,   156,    84,
   nil,   nil,   145,    77,   171,   nil,   nil,   171,   nil,   160,
   nil,   nil,   nil,   135,   178,   137,   138,   nil,   nil,   nil,
   nil,    91,   nil,   nil,   178,   nil,   nil,   178,   nil,   192,
   nil,   nil,   177,    50,    50,   194,   195,   nil,   198,   188,
   200,   201,   177,   203,   nil,   177,   171,   191,    54,   163,
   nil,    52,    52,   171,   nil,   171,   171,   nil,   nil,   123,
   nil,   nil,   nil,   nil,   nil,   nil,   178,   nil,   nil,    54,
   nil,   nil,   171,   178,   223,   178,   178,   nil,   nil,   nil,
   nil,   nil,   nil,   171,   177,   nil,   nil,   nil,   nil,   238,
   nil,   177,   178,   177,   177,   nil,   nil,   nil,   218,   nil,
   nil,   nil,   nil,   178,   nil,   146,   nil,   nil,   nil,   nil,
   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    54,   nil,   nil,   193,    54,
    54,   nil,   nil,   nil,   nil,   199 ]

racc_goto_check = [
    19,    19,    21,    21,     7,    15,    19,    11,    19,    19,
    16,    19,    19,    19,    28,     9,    14,    13,    18,    18,
    13,    29,     3,     4,    27,     8,     3,     2,     1,     4,
   nil,   nil,     4,   nil,   nil,   nil,   nil,    19,    19,    19,
    19,    19,    19,    19,    19,    19,    19,    19,    19,    19,
    19,    19,    19,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    13,     9,    13,    13,
    18,   nil,   nil,    19,   nil,    21,   nil,   nil,   nil,   nil,
   nil,    29,    11,   nil,   nil,    13,   nil,   nil,   nil,   nil,
   nil,    18,    28,   nil,    16,   nil,    13,    19,   nil,   nil,
     6,   nil,   nil,     4,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,    19,    15,     6,     6,     6,    14,    14,
   nil,   nil,    11,     6,    15,   nil,   nil,    15,   nil,    19,
   nil,   nil,   nil,     4,    19,     4,     4,   nil,   nil,   nil,
   nil,     6,   nil,   nil,    19,   nil,   nil,    19,   nil,    19,
   nil,   nil,    18,    19,    19,    21,    21,   nil,    19,    11,
    19,    19,    18,    19,   nil,    18,    15,    18,     6,     4,
   nil,    18,    18,    15,   nil,    15,    15,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,     6,
   nil,   nil,    15,    19,    19,    19,    19,   nil,   nil,   nil,
   nil,   nil,   nil,    15,    18,   nil,   nil,   nil,   nil,    19,
   nil,    18,    19,    18,    18,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,    19,   nil,     6,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,     6,     6,
     6,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    28,    27,    22,    16,   nil,    95,   -35,   -97,  -140,
   nil,    -7,   nil,  -148,   -23,   -41,   -36,   nil,    -3,   -21,
   nil,   -19,   nil,   nil,   nil,   nil,   nil,   -49,  -146,   -53,
   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4,    26,   nil,   nil,   nil,
    17,   nil,   169,   167,    46,    18,   nil,   168,    24,    25,
   172,   nil,   176,    16,    19,    23,    51,   nil,   nil,   nil,
    31,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  0, 57, :_reduce_none,
  2, 57, :_reduce_4,
  10, 59, :_reduce_5,
  4, 64, :_reduce_6,
  6, 64, :_reduce_7,
  5, 64, :_reduce_8,
  4, 64, :_reduce_9,
  4, 66, :_reduce_10,
  6, 66, :_reduce_11,
  4, 66, :_reduce_12,
  0, 61, :_reduce_none,
  2, 61, :_reduce_14,
  4, 61, :_reduce_15,
  1, 60, :_reduce_16,
  1, 68, :_reduce_17,
  1, 68, :_reduce_18,
  2, 65, :_reduce_19,
  3, 65, :_reduce_20,
  3, 65, :_reduce_21,
  4, 65, :_reduce_22,
  1, 70, :_reduce_23,
  3, 70, :_reduce_24,
  0, 62, :_reduce_none,
  2, 62, :_reduce_26,
  0, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 67, :_reduce_29,
  2, 67, :_reduce_30,
  1, 71, :_reduce_31,
  3, 71, :_reduce_32,
  3, 71, :_reduce_33,
  1, 71, :_reduce_34,
  1, 71, :_reduce_35,
  3, 71, :_reduce_36,
  3, 71, :_reduce_37,
  3, 71, :_reduce_38,
  1, 71, :_reduce_39,
  2, 71, :_reduce_40,
  2, 71, :_reduce_41,
  1, 58, :_reduce_42,
  2, 58, :_reduce_43,
  1, 77, :_reduce_44,
  1, 77, :_reduce_45,
  1, 77, :_reduce_46,
  3, 77, :_reduce_47,
  3, 77, :_reduce_48,
  3, 77, :_reduce_49,
  1, 77, :_reduce_50,
  2, 77, :_reduce_51,
  2, 77, :_reduce_52,
  1, 75, :_reduce_53,
  1, 75, :_reduce_54,
  1, 75, :_reduce_55,
  3, 75, :_reduce_56,
  1, 80, :_reduce_57,
  4, 69, :_reduce_58,
  1, 81, :_reduce_59,
  1, 81, :_reduce_60,
  6, 78, :_reduce_61,
  11, 78, :_reduce_62,
  6, 78, :_reduce_63,
  6, 74, :_reduce_64,
  11, 74, :_reduce_65,
  6, 74, :_reduce_66,
  0, 82, :_reduce_none,
  2, 82, :_reduce_68,
  6, 79, :_reduce_69,
  5, 79, :_reduce_70,
  8, 79, :_reduce_71,
  6, 76, :_reduce_72,
  5, 76, :_reduce_73,
  8, 76, :_reduce_74,
  4, 72, :_reduce_75,
  3, 72, :_reduce_76,
  1, 83, :_reduce_77,
  3, 83, :_reduce_78,
  1, 73, :_reduce_none,
  3, 73, :_reduce_80,
  3, 73, :_reduce_81,
  3, 73, :_reduce_82,
  3, 73, :_reduce_83,
  3, 73, :_reduce_84,
  3, 73, :_reduce_85,
  3, 73, :_reduce_86,
  2, 73, :_reduce_87,
  2, 73, :_reduce_88,
  3, 73, :_reduce_89,
  3, 73, :_reduce_90,
  3, 73, :_reduce_91,
  3, 73, :_reduce_92,
  3, 73, :_reduce_93,
  3, 73, :_reduce_94,
  3, 73, :_reduce_95,
  3, 73, :_reduce_96,
  3, 73, :_reduce_97,
  1, 85, :_reduce_98,
  1, 85, :_reduce_99,
  1, 84, :_reduce_100,
  1, 84, :_reduce_101,
  1, 84, :_reduce_none ]

racc_reduce_n = 103

racc_shift_n = 249

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "Var",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "wisf",
  "LInstf",
  "type",
  "Assign",
  "ListID",
  "Instf",
  "Call",
  "Expr",
  "IteratorF",
  "writable",
  "CondF",
  "Inst",
  "Iterator",
  "Cond",
  "Str",
  "Asignable",
  "by",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    result = Scope.new(:Funciones,val[0],:Program,val[2])
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'retina_parser.y', 53)
  def _reduce_4(val, _values, result)
    result=ListaFunc.new(:Funcion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 57)
  def _reduce_5(val, _values, result)
    result=Func.new(:Nombre_Funcion,val[1],:Parametros,val[3],:Tipo_Retorno,val[5],:Instrucciones,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 61)
  def _reduce_6(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_8(val, _values, result)
    result=Bloque.new(:declaraciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 64)
  def _reduce_9(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_10(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_11(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_12(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_14(val, _values, result)
    result=ListD.new(:tipos,val[0],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_15(val, _values, result)
    result=List.new(:tipos,val[0],val[3],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 80)
  def _reduce_16(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_17(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_18(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_19(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_20(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1],:declaracion,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_21(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:Lista_ID,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_22(val, _values, result)
    result=Ldecl.new(:Lista_Decl,:tipo,val[0],:Lista_ID,val[1],:declaracion,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_23(val, _values, result)
    result=ListID.new(:ID,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_24(val, _values, result)
    result=ListID.new(:ID,val[0],val[2])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_26(val, _values, result)
    result=Retorno.new(:tipo,val[1])
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_29(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_30(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_31(val, _values, result)
    result=Inst.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_32(val, _values, result)
    result=Inst.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_33(val, _values, result)
    result=Inst.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_34(val, _values, result)
    result=Inst.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_35(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_36(val, _values, result)
    result=Inst.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_37(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_38(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_39(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_40(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_41(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_42(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_43(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_44(val, _values, result)
    result=Inst.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_45(val, _values, result)
    result=Inst.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_46(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_47(val, _values, result)
    result=Inst.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_48(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_49(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_50(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_51(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_52(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_53(val, _values, result)
    result=Writable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_54(val, _values, result)
    result=Writable.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_55(val, _values, result)
    result=Writable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_56(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_57(val, _values, result)
    result=Str.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_58(val, _values, result)
    result=Assign.new(:Lado_Izquierdo,val[0],:Lado_Derecho,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_59(val, _values, result)
    result=Asignable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_60(val, _values, result)
    result=Asignable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_61(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_62(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 167)
  def _reduce_63(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_64(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_65(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_66(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_68(val, _values, result)
    result=By.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_69(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_70(val, _values, result)
    result=Cond.new(:Condición,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 184)
  def _reduce_71(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 188)
  def _reduce_72(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_73(val, _values, result)
    result=Cond.new(:Condición,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 190)
  def _reduce_74(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 194)
  def _reduce_75(val, _values, result)
    result=Call.new(:nombre,val[0],:argumentos,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 195)
  def _reduce_76(val, _values, result)
    result=Call.new(:nombre,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 199)
  def _reduce_77(val, _values, result)
    result=ListParam.new(:expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 200)
  def _reduce_78(val, _values, result)
    result=ListParam.new(:expresion,val[0],val[2])
    result
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'retina_parser.y', 210)
  def _reduce_80(val, _values, result)
    result = BinExp.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 211)
  def _reduce_81(val, _values, result)
    result = BinExp.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 212)
  def _reduce_82(val, _values, result)
    result = BinExp.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 213)
  def _reduce_83(val, _values, result)
    result = BinExp.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 214)
  def _reduce_84(val, _values, result)
    result = BinExp.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_85(val, _values, result)
    result = BinExp.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 216)
  def _reduce_86(val, _values, result)
    result = BinExp.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 217)
  def _reduce_87(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 218)
  def _reduce_88(val, _values, result)
    result = UnaExp.new(:Negacion , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 219)
  def _reduce_89(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 220)
  def _reduce_90(val, _values, result)
    result = BinExp.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 221)
  def _reduce_91(val, _values, result)
    result = BinExp.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 222)
  def _reduce_92(val, _values, result)
    result = BinExp.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 223)
  def _reduce_93(val, _values, result)
    result = BinExp.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 224)
  def _reduce_94(val, _values, result)
    result = BinExp.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 225)
  def _reduce_95(val, _values, result)
    result = BinExp.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 226)
  def _reduce_96(val, _values, result)
    result = BinExp.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 227)
  def _reduce_97(val, _values, result)
    result = BinExp.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 233)
  def _reduce_98(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_99(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 238)
  def _reduce_100(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 239)
  def _reduce_101(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 102 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
