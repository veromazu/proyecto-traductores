#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"

require_relative 'retina_ast'

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            case @token.symbol
                when :TYPEN,:TYPEB
                tokenName="tipo de dato"
            when :TRUE,:FALSE
                tokenName="literal booleano"
            when :AND,:NOT,:OR
                tokenName="operador booleano"
            when :PROGRAM,:BEGIN,:END,:WITH,:DO,:IF,:THEN,:READ,:ELSE,:WHILE,:FOR,:REPEAT,:WRITE,:WRITELN,:FROM,:TO,:BY,:FUNC,:RETURN,:RETURN2
                tokenName="palabra reservada"
            when :EQUIVALENT,:LESSTHAN,:DISTINCT,:GETHAN,:LESSTHAN,:GREATTHAN
                tokenName="operador de comparación"
            when :LPARENT,:RPARENT,:EQUAL,:SEMICOLON,:COLON,:RCURLY,:LCURLY
                tokenName="signo"
            when :PLUS,:MOD,:DIV,:MOD2,:DIV2,:MULT,:LESS
                tokenName="operador aritmético"
            when :ID
                tokenName="identificador"
            when :STRING
                tokenName="string"
            when :DIGIT
                tokenName="literal numérico"
            end
           return " Línea #{@token.position[0]}, Column #{@token.position[1]}: token inesperado : "<< tokenName << " : #{@token.id}"
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 299)


def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def initialize(lexer)
  @lexer=lexer
end

def next_token
    if ((token = @lexer.next_token)!=nil)
        return [token.symbol,token]
    else 
        return nil
    end

end


def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	do_parse
	
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    60,    61,    62,    63,    38,   -17,    33,    46,    47,    35,
    68,    76,    67,    36,    37,    38,    34,    33,    45,    75,
    35,    38,     5,    33,    36,    37,    35,    34,   132,   159,
    36,    37,   214,    34,    74,    69,    73,    72,    71,    70,
    96,   -17,    66,    65,    64,    46,    47,    75,   132,   136,
    16,    55,    62,    63,    38,   154,    33,    95,   160,    35,
   155,    16,    55,    36,    37,    96,    34,    16,    55,    38,
   153,    33,    46,    47,    35,    38,   162,    33,    36,    37,
    35,    34,    97,   190,    36,    37,    38,    34,    33,   213,
    96,    35,    66,    65,    64,    36,    37,    96,    34,   163,
    16,    55,    38,   232,    33,    46,    47,    35,   233,    46,
    47,    36,    37,   151,    34,    16,    55,    38,    10,    33,
   146,    78,    35,    46,    47,   186,    36,    37,   187,    34,
    46,    47,    78,   145,   167,   166,   183,   144,   143,   180,
   181,   182,   135,   174,   175,   176,    10,    38,    78,    33,
   171,   134,    35,   131,   197,   129,    36,    37,   126,    34,
    10,    10,   124,    16,   167,   166,   183,   203,   120,   180,
   181,   182,   205,   174,   175,   176,   206,    38,   207,    33,
   171,   208,    35,   209,   210,   156,    36,    37,   212,    34,
    76,    94,    10,    16,    15,    14,    31,   216,    90,    28,
    29,    30,    89,    21,    22,    23,    88,    38,    87,    33,
    62,    63,    35,   220,    10,   222,    36,    37,    58,    34,
    10,    42,    41,    16,   167,   166,   183,   227,   228,   180,
   181,   182,   229,   174,   175,   176,    40,    38,   231,    33,
   171,    11,    35,   234,   235,   236,    36,    37,    10,    34,
    66,    65,    64,    16,   167,   166,   183,   238,   239,   180,
   181,   182,     5,   174,   175,   176,     7,    38,   242,    33,
   171,   243,    35,   244,     6,   246,    36,    37,   247,    34,
   nil,   nil,   nil,    16,    15,    14,    31,   nil,   nil,    28,
    29,    30,   nil,    21,    22,    23,    38,   nil,    33,   nil,
   nil,    35,    38,   nil,    33,    36,    37,    35,    34,   nil,
   nil,    36,    37,    16,    34,   nil,   nil,   nil,   nil,    15,
    14,    31,   nil,   nil,    28,    29,    30,   nil,    21,    22,
    23,   nil,   nil,   nil,    38,   nil,    33,   nil,   nil,    35,
   nil,   nil,    78,    36,    37,   nil,    34,   nil,    16,   nil,
   nil,   167,   166,   183,   nil,   nil,   180,   181,   182,   nil,
   174,   175,   176,   nil,    38,   nil,    33,   171,   nil,    35,
   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,   nil,
    16,   167,   166,   183,   nil,   nil,   180,   181,   182,   nil,
   174,   175,   176,   nil,    38,   nil,    33,   171,   nil,    35,
   nil,   nil,   nil,    36,    37,   nil,    34,   nil,   nil,   nil,
    16,    15,    14,    31,   nil,   nil,    28,    29,    30,   nil,
    21,    22,    23,    38,   nil,    33,   nil,   nil,    35,    38,
   nil,    33,    36,    37,    35,    34,   nil,   nil,    36,    37,
    16,    34,   nil,   nil,   nil,   nil,   167,   166,   183,   nil,
   nil,   180,   181,   182,   nil,   174,   175,   176,    38,   nil,
    33,   nil,   171,    35,   nil,   nil,   nil,    36,    37,    78,
    34,    38,   nil,    33,   nil,    16,    35,    38,   nil,    33,
    36,    37,    35,    34,   nil,   nil,    36,    37,    38,    34,
    33,   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,
    34,    38,   nil,    33,    78,   nil,    35,   nil,   nil,   nil,
    36,    37,   nil,    34,   nil,   nil,   nil,    78,   nil,   nil,
   nil,   nil,   nil,    78,   nil,   nil,    38,   nil,    33,   nil,
   nil,    35,   nil,   nil,    78,    36,    37,   nil,    34,   nil,
   nil,   nil,   nil,    15,    14,    31,   nil,    78,    28,    29,
    30,   nil,    21,    22,    23,   nil,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,    16,    13,    15,    14,    31,   nil,   nil,    28,
    29,    30,   nil,    21,    22,    23,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,    16,    15,    14,    31,   nil,   nil,    28,
    29,    30,   nil,    21,    22,    23,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,    16,    15,    14,    31,   nil,   nil,    28,
    29,    30,   nil,    21,    22,    23,    38,   nil,    33,   nil,
   nil,    35,    38,   nil,    33,    36,    37,    35,    34,   nil,
   nil,    36,    37,    16,    34,   nil,   nil,    38,   nil,    33,
   nil,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,   nil,   nil,   167,   166,   183,   nil,   nil,   180,
   181,   182,    78,   174,   175,   176,   nil,    38,    16,    33,
   171,   nil,    35,   nil,   nil,   nil,    36,    37,   nil,    34,
   nil,   nil,    38,    16,    33,   nil,   nil,    35,   nil,   nil,
   nil,    36,    37,   nil,    34,   nil,   nil,   nil,   nil,   167,
   166,   183,   nil,   nil,   180,   181,   182,   nil,   174,   175,
   176,   nil,   nil,    78,    38,   171,    33,   nil,   nil,    35,
   nil,   nil,   nil,    36,    37,   nil,    34,   nil,    16,   nil,
   128,    15,    14,    31,   nil,   nil,    28,    29,    30,   nil,
    21,    22,    23,    38,   nil,    33,   nil,   nil,    35,    38,
   nil,    33,    36,    37,    35,    34,   nil,   nil,    36,    37,
    16,    34,    38,   nil,    33,   nil,   nil,    35,    38,   nil,
    33,    36,    37,    35,    34,   nil,   nil,    36,    37,   nil,
    34,    38,   nil,    33,   nil,   nil,    35,   nil,   nil,    78,
    36,    37,    38,    34,    33,    78,   nil,    35,   nil,   nil,
   nil,    36,    37,   nil,    34,   nil,   nil,    38,    78,    33,
   nil,   nil,    35,    38,    78,    33,    36,    37,    35,    34,
   nil,   nil,    36,    37,    38,    34,    33,    78,   nil,    35,
    38,   nil,    33,    36,    37,    35,    34,   nil,    78,    36,
    37,   nil,    34,   nil,   nil,    38,   nil,    33,   nil,   nil,
    35,   nil,   nil,    78,    36,    37,    38,    34,    33,    78,
   nil,    35,    38,   nil,    33,    36,    37,    35,    34,   nil,
    78,    36,    37,    38,    34,    33,    78,   nil,    35,   nil,
   nil,   nil,    36,    37,    38,    34,    33,   nil,   nil,    35,
   nil,    78,   nil,    36,    37,    38,    34,    33,   nil,   nil,
    35,    38,    78,    33,    36,    37,    35,    34,    78,   nil,
    36,    37,    38,    34,    33,   nil,   nil,    35,   117,    78,
   nil,    36,    37,    38,    34,    33,   nil,   nil,    35,   nil,
    78,   nil,    36,    37,    38,    34,    33,   nil,   nil,    35,
   nil,    78,   nil,    36,    37,   nil,    34,    16,   nil,    60,
    61,    62,    63,   nil,   nil,   nil,   nil,   nil,    78,    68,
   nil,    67,    60,    61,    62,    63,   nil,   nil,   nil,    78,
   nil,   nil,    68,   121,    67,   nil,   nil,   nil,   nil,   nil,
    78,   122,   nil,    74,    69,    73,    72,    71,    70,   nil,
   nil,    66,    65,    64,   nil,   nil,    74,    69,    73,    72,
    71,    70,   nil,   nil,    66,    65,    64,    60,    61,    62,
    63,   nil,   123,   nil,   nil,   nil,   nil,    68,   nil,    67,
    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,
    68,   nil,    67,   nil,   nil,   nil,   nil,   119,   nil,   nil,
   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,    66,
    65,    64,   nil,   nil,    74,    69,    73,    72,    71,    70,
   nil,   nil,    66,    65,    64,    60,    61,    62,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,   nil,   nil,
    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,
    68,   nil,    67,   nil,   nil,   nil,   nil,   nil,   nil,    74,
    69,    73,    72,    71,    70,   nil,   211,    66,    65,    64,
   185,   nil,   nil,   nil,    74,    69,    73,    72,    71,    70,
   nil,   nil,    66,    65,    64,    60,    61,    62,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,
    67,   nil,   nil,   nil,   152,   nil,   nil,   nil,   nil,    74,
    69,    73,    72,    71,    70,   nil,   nil,    66,    65,    64,
   nil,   nil,    74,    69,    73,    72,    71,    70,   nil,   198,
    66,    65,    64,    60,    61,    62,    63,   nil,   nil,   nil,
   nil,   nil,   nil,    68,   nil,    67,    60,    61,    62,    63,
   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,    67,   nil,
   nil,   nil,   230,   nil,   nil,   nil,   nil,    74,    69,    73,
    72,    71,    70,   nil,   nil,    66,    65,    64,   nil,   nil,
    74,    69,    73,    72,    71,    70,   nil,   nil,    66,    65,
    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,   nil,
   nil,    68,   nil,    67,    60,    61,    62,    63,   nil,   nil,
   nil,   nil,   nil,   nil,    68,   nil,    67,   nil,   nil,   nil,
   nil,   185,   nil,   nil,   nil,    74,    69,    73,    72,    71,
    70,   nil,   nil,    66,    65,    64,   nil,   nil,    74,    69,
    73,    72,    71,    70,   nil,    59,    66,    65,    64,    60,
    61,    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,
   nil,    67,    60,    61,    62,    63,   nil,   nil,   nil,   nil,
   nil,   nil,    68,   nil,    67,   nil,   nil,    60,    61,    62,
    63,   218,   nil,    74,    69,    73,    72,    71,    70,   nil,
   nil,    66,    65,    64,   nil,   nil,    74,    69,    73,    72,
    71,    70,   nil,   nil,    66,    65,    64,    60,    61,    62,
    63,    74,    69,    73,    72,    71,    70,    68,   nil,    66,
    65,    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    60,    61,    62,    63,   nil,   nil,   nil,
   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,    66,
    65,    64,    60,    61,    62,    63,  -104,  -104,  -104,  -104,
  -104,  -104,   nil,   nil,    66,    65,    64,  -104,  -104,  -104,
  -104,  -104,  -104,   nil,   nil,    66,    65,    64,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,  -104,  -104,  -104,  -104,
  -104,  -104,   nil,   nil,    66,    65,    64,    60,    61,    62,
    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  -104,  -104,  -104,  -104,  -104,  -104,   nil,   nil,
    66,    65,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  -104,  -104,  -104,  -104,  -104,  -104,   nil,   nil,    66,
    65,    64,    60,    61,    62,    63,   nil,   nil,   nil,   nil,
   nil,   nil,    68,   nil,    67,   nil,   nil,   nil,   nil,   215,
   nil,   nil,   nil,    60,    61,    62,    63,   nil,   nil,   nil,
   nil,   nil,   nil,    68,   nil,    67,    74,    69,    73,    72,
    71,    70,   nil,   nil,    66,    65,    64,   217,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,    74,    69,    73,
    72,    71,    70,   nil,   nil,    66,    65,    64,    60,    61,
    62,    63,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,
    67,   nil,  -104,  -104,  -104,  -104,  -104,  -104,   nil,   nil,
    66,    65,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    74,    69,    73,    72,    71,    70,   nil,   nil,
    66,    65,    64 ]

racc_action_check = [
   118,   118,   118,   118,   175,    16,   175,    15,    15,   175,
   118,    27,   118,   175,   175,    96,   175,    96,    15,    93,
    96,   176,     0,   176,    96,    96,   176,    96,    93,   145,
   176,   176,   196,   176,   118,   118,   118,   118,   118,   118,
   196,    16,   118,   118,   118,   131,   131,    27,   148,   118,
   175,   175,    98,    98,    22,   141,    22,    51,   151,    22,
   141,    96,    96,    22,    22,    51,    22,   176,   176,    23,
   140,    23,   167,   167,    23,   120,   153,   120,    23,    23,
   120,    23,    57,   167,   120,   120,   136,   120,   136,   195,
    57,   136,    98,    98,    98,   136,   136,   195,   136,   154,
    22,    22,   216,   226,   216,    91,    91,   216,   226,    40,
    40,   216,   216,   138,   216,    23,    23,   218,   132,   218,
   128,   120,   218,   144,   144,   164,   218,   218,   165,   218,
   143,   143,   136,   127,   218,   218,   218,   125,   124,   218,
   218,   218,   116,   218,   218,   218,   174,   217,   216,   217,
   218,   113,   217,    92,   178,    90,   217,   217,    88,   217,
   181,    86,    85,   218,   217,   217,   217,   184,    79,   217,
   217,   217,   186,   217,   217,   217,   187,    14,   188,    14,
   217,   189,    14,   190,   192,   142,    14,    14,   194,    14,
    56,    50,    48,   217,    14,    14,    14,   200,    45,    14,
    14,    14,    44,    14,    14,    14,    43,   156,    41,   156,
    99,    99,   156,   207,    29,   209,   156,   156,    25,   156,
    21,    13,    12,    14,   156,   156,   156,   219,   221,   156,
   156,   156,   223,   156,   156,   156,     9,   166,   225,   166,
   156,     6,   166,   227,   228,   229,   166,   166,     5,   166,
    99,    99,    99,   156,   166,   166,   166,   231,   232,   166,
   166,   166,     4,   166,   166,   166,     3,    17,   240,    17,
   166,   241,    17,   242,     1,   245,    17,    17,   246,    17,
   nil,   nil,   nil,   166,    17,    17,    17,   nil,   nil,    17,
    17,    17,   nil,    17,    17,    17,    64,   nil,    64,   nil,
   nil,    64,   155,   nil,   155,    64,    64,   155,    64,   nil,
   nil,   155,   155,    17,   155,   nil,   nil,   nil,   nil,   155,
   155,   155,   nil,   nil,   155,   155,   155,   nil,   155,   155,
   155,   nil,   nil,   nil,   215,   nil,   215,   nil,   nil,   215,
   nil,   nil,    64,   215,   215,   nil,   215,   nil,   155,   nil,
   nil,   215,   215,   215,   nil,   nil,   215,   215,   215,   nil,
   215,   215,   215,   nil,   169,   nil,   169,   215,   nil,   169,
   nil,   nil,   nil,   169,   169,   nil,   169,   nil,   nil,   nil,
   215,   169,   169,   169,   nil,   nil,   169,   169,   169,   nil,
   169,   169,   169,   nil,   122,   nil,   122,   169,   nil,   122,
   nil,   nil,   nil,   122,   122,   nil,   122,   nil,   nil,   nil,
   169,   122,   122,   122,   nil,   nil,   122,   122,   122,   nil,
   122,   122,   122,    28,   nil,    28,   nil,   nil,    28,   208,
   nil,   208,    28,    28,   208,    28,   nil,   nil,   208,   208,
   122,   208,   nil,   nil,   nil,   nil,   208,   208,   208,   nil,
   nil,   208,   208,   208,   nil,   208,   208,   208,    30,   nil,
    30,   nil,   208,    30,   nil,   nil,   nil,    30,    30,    28,
    30,    31,   nil,    31,   nil,   208,    31,    33,   nil,    33,
    31,    31,    33,    31,   nil,   nil,    33,    33,   185,    33,
   185,   nil,   nil,   185,   nil,   nil,   nil,   185,   185,   nil,
   185,    35,   nil,    35,    30,   nil,    35,   nil,   nil,   nil,
    35,    35,   nil,    35,   nil,   nil,   nil,    31,   nil,   nil,
   nil,   nil,   nil,    33,   nil,   nil,   121,   nil,   121,   nil,
   nil,   121,   nil,   nil,   185,   121,   121,   nil,   121,   nil,
   nil,   nil,   nil,   121,   121,   121,   nil,    35,   121,   121,
   121,   nil,   121,   121,   121,   nil,   nil,     7,   nil,     7,
   nil,   nil,     7,   nil,   nil,   nil,     7,     7,   nil,     7,
   nil,   nil,   121,     7,     7,     7,     7,   nil,   nil,     7,
     7,     7,   nil,     7,     7,     7,   nil,   203,   nil,   203,
   nil,   nil,   203,   nil,   nil,   nil,   203,   203,   nil,   203,
   nil,   nil,   nil,     7,   203,   203,   203,   nil,   nil,   203,
   203,   203,   nil,   203,   203,   203,   nil,   119,   nil,   119,
   nil,   nil,   119,   nil,   nil,   nil,   119,   119,   nil,   119,
   nil,   nil,   nil,   203,   119,   119,   119,   nil,   nil,   119,
   119,   119,   nil,   119,   119,   119,   230,   nil,   230,   nil,
   nil,   230,   171,   nil,   171,   230,   230,   171,   230,   nil,
   nil,   171,   171,   119,   171,   nil,   nil,   233,   nil,   233,
   nil,   nil,   233,   nil,   nil,   nil,   233,   233,   nil,   233,
   nil,   nil,   nil,   nil,   233,   233,   233,   nil,   nil,   233,
   233,   233,   230,   233,   233,   233,   nil,   152,   171,   152,
   233,   nil,   152,   nil,   nil,   nil,   152,   152,   nil,   152,
   nil,   nil,   243,   233,   243,   nil,   nil,   243,   nil,   nil,
   nil,   243,   243,   nil,   243,   nil,   nil,   nil,   nil,   243,
   243,   243,   nil,   nil,   243,   243,   243,   nil,   243,   243,
   243,   nil,   nil,   152,    89,   243,    89,   nil,   nil,    89,
   nil,   nil,   nil,    89,    89,   nil,    89,   nil,   243,   nil,
    89,    89,    89,    89,   nil,   nil,    89,    89,    89,   nil,
    89,    89,    89,   180,   nil,   180,   nil,   nil,   180,    60,
   nil,    60,   180,   180,    60,   180,   nil,   nil,    60,    60,
    89,    60,    61,   nil,    61,   nil,   nil,    61,    62,   nil,
    62,    61,    61,    62,    61,   nil,   nil,    62,    62,   nil,
    62,    63,   nil,    63,   nil,   nil,    63,   nil,   nil,   180,
    63,    63,   182,    63,   182,    60,   nil,   182,   nil,   nil,
   nil,   182,   182,   nil,   182,   nil,   nil,    65,    61,    65,
   nil,   nil,    65,    66,    62,    66,    65,    65,    66,    65,
   nil,   nil,    66,    66,    67,    66,    67,    63,   nil,    67,
    68,   nil,    68,    67,    67,    68,    67,   nil,   182,    68,
    68,   nil,    68,   nil,   nil,    69,   nil,    69,   nil,   nil,
    69,   nil,   nil,    65,    69,    69,    70,    69,    70,    66,
   nil,    70,    71,   nil,    71,    70,    70,    71,    70,   nil,
    67,    71,    71,    72,    71,    72,    68,   nil,    72,   nil,
   nil,   nil,    72,    72,    73,    72,    73,   nil,   nil,    73,
   nil,    69,   nil,    73,    73,    74,    73,    74,   nil,   nil,
    74,    75,    70,    75,    74,    74,    75,    74,    71,   nil,
    75,    75,    76,    75,    76,   nil,   nil,    76,    76,    72,
   nil,    76,    76,   183,    76,   183,   nil,   nil,   183,   nil,
    73,   nil,   183,   183,    34,   183,    34,   nil,   nil,    34,
   nil,    74,   nil,    34,    34,   nil,    34,    75,   nil,    80,
    80,    80,    80,   nil,   nil,   nil,   nil,   nil,    76,    80,
   nil,    80,    81,    81,    81,    81,   nil,   nil,   nil,   183,
   nil,   nil,    81,    80,    81,   nil,   nil,   nil,   nil,   nil,
    34,    81,   nil,    80,    80,    80,    80,    80,    80,   nil,
   nil,    80,    80,    80,   nil,   nil,    81,    81,    81,    81,
    81,    81,   nil,   nil,    81,    81,    81,    84,    84,    84,
    84,   nil,    84,   nil,   nil,   nil,   nil,    84,   nil,    84,
    77,    77,    77,    77,   nil,   nil,   nil,   nil,   nil,   nil,
    77,   nil,    77,   nil,   nil,   nil,   nil,    77,   nil,   nil,
   nil,    84,    84,    84,    84,    84,    84,   nil,   nil,    84,
    84,    84,   nil,   nil,    77,    77,    77,    77,    77,    77,
   nil,   nil,    77,    77,    77,   193,   193,   193,   193,   nil,
   nil,   nil,   nil,   nil,   nil,   193,   nil,   193,   nil,   nil,
   237,   237,   237,   237,   nil,   nil,   nil,   nil,   nil,   nil,
   237,   nil,   237,   nil,   nil,   nil,   nil,   nil,   nil,   193,
   193,   193,   193,   193,   193,   nil,   193,   193,   193,   193,
   237,   nil,   nil,   nil,   237,   237,   237,   237,   237,   237,
   nil,   nil,   237,   237,   237,   139,   139,   139,   139,   nil,
   nil,   nil,   nil,   nil,   nil,   139,   nil,   139,   179,   179,
   179,   179,   nil,   nil,   nil,   nil,   nil,   nil,   179,   nil,
   179,   nil,   nil,   nil,   139,   nil,   nil,   nil,   nil,   139,
   139,   139,   139,   139,   139,   nil,   nil,   139,   139,   139,
   nil,   nil,   179,   179,   179,   179,   179,   179,   nil,   179,
   179,   179,   179,   224,   224,   224,   224,   nil,   nil,   nil,
   nil,   nil,   nil,   224,   nil,   224,    52,    52,    52,    52,
   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,    52,   nil,
   nil,   nil,   224,   nil,   nil,   nil,   nil,   224,   224,   224,
   224,   224,   224,   nil,   nil,   224,   224,   224,   nil,   nil,
    52,    52,    52,    52,    52,    52,   nil,   nil,    52,    52,
    52,   161,   161,   161,   161,   nil,   nil,   nil,   nil,   nil,
   nil,   161,   nil,   161,    26,    26,    26,    26,   nil,   nil,
   nil,   nil,   nil,   nil,    26,   nil,    26,   nil,   nil,   nil,
   nil,   161,   nil,   nil,   nil,   161,   161,   161,   161,   161,
   161,   nil,   nil,   161,   161,   161,   nil,   nil,    26,    26,
    26,    26,    26,    26,   nil,    26,    26,    26,    26,   204,
   204,   204,   204,   nil,   nil,   nil,   nil,   nil,   nil,   204,
   nil,   204,   202,   202,   202,   202,   nil,   nil,   nil,   nil,
   nil,   nil,   202,   nil,   202,   nil,   nil,   106,   106,   106,
   106,   202,   nil,   204,   204,   204,   204,   204,   204,   nil,
   nil,   204,   204,   204,   nil,   nil,   202,   202,   202,   202,
   202,   202,   nil,   nil,   202,   202,   202,   105,   105,   105,
   105,   106,   106,   106,   106,   106,   106,   105,   nil,   106,
   106,   106,   107,   107,   107,   107,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   108,   108,   108,   108,   nil,   nil,   nil,
   nil,   105,   105,   105,   105,   105,   105,   nil,   nil,   105,
   105,   105,   109,   109,   109,   109,   107,   107,   107,   107,
   107,   107,   nil,   nil,   107,   107,   107,   108,   108,   108,
   108,   108,   108,   nil,   nil,   108,   108,   108,   110,   110,
   110,   110,   nil,   nil,   nil,   nil,   109,   109,   109,   109,
   109,   109,   nil,   nil,   109,   109,   109,   111,   111,   111,
   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   110,   110,   110,   110,   110,   110,   nil,   nil,
   110,   110,   110,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   111,   111,   111,   111,   111,   111,   nil,   nil,   111,
   111,   111,   199,   199,   199,   199,   nil,   nil,   nil,   nil,
   nil,   nil,   199,   nil,   199,   nil,   nil,   nil,   nil,   199,
   nil,   nil,   nil,   201,   201,   201,   201,   nil,   nil,   nil,
   nil,   nil,   nil,   201,   nil,   201,   199,   199,   199,   199,
   199,   199,   nil,   nil,   199,   199,   199,   201,   112,   112,
   112,   112,   nil,   nil,   nil,   nil,   nil,   201,   201,   201,
   201,   201,   201,   nil,   nil,   201,   201,   201,   114,   114,
   114,   114,   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,
   114,   nil,   112,   112,   112,   112,   112,   112,   nil,   nil,
   112,   112,   112,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   114,   114,   114,   114,   114,   114,   nil,   nil,
   114,   114,   114 ]

racc_action_pointer = [
   -12,   274,   nil,   250,   228,   200,   241,   555,   nil,   229,
   nil,   nil,   204,   177,   175,    -2,    -2,   265,   nil,   nil,
   nil,   172,    52,    67,   nil,   174,  1281,     4,   421,   166,
   456,   469,   nil,   475,   962,   499,   nil,   nil,   nil,   nil,
   100,   164,   nil,   188,   182,   180,   nil,   nil,   144,   nil,
   147,    13,  1223,   nil,   nil,   nil,   183,    38,   nil,   nil,
   777,   790,   796,   809,   294,   835,   841,   852,   858,   873,
   884,   890,   901,   912,   923,   929,   940,  1047,   nil,   137,
   976,   989,   nil,   nil,  1034,   154,   113,   nil,   114,   742,
   111,    96,   109,   -24,   nil,   nil,    13,   nil,    47,   205,
   nil,   nil,   nil,   nil,   nil,  1384,  1354,  1399,  1410,  1429,
  1455,  1474,  1565,   107,  1585,   nil,   134,   nil,    -3,   615,
    73,   524,   392,   nil,   102,    85,   nil,   115,    76,   nil,
   nil,    36,    70,   nil,   nil,   nil,    84,   nil,    95,  1152,
    52,    37,   168,   121,   114,   -15,   nil,   nil,    -4,   nil,
   nil,    14,   695,    32,    55,   300,   205,   nil,   nil,   nil,
   nil,  1268,   nil,   nil,   107,   110,   235,    63,   nil,   362,
   nil,   650,   nil,   nil,    98,     2,    19,   nil,   110,  1165,
   771,   112,   820,   951,   147,   486,   128,   132,   160,   161,
   165,   nil,   140,  1092,   144,    45,   -12,   nil,   nil,  1519,
   166,  1540,  1339,   585,  1326,   nil,   nil,   169,   427,   171,
   nil,   nil,   nil,   nil,   nil,   332,   100,   145,   115,   209,
   nil,   210,   nil,   214,  1210,   220,    85,   199,   200,   201,
   644,   213,   214,   665,   nil,   nil,   nil,  1107,   nil,   nil,
   250,   251,   229,   710,   nil,   257,   234,   nil ]

racc_action_default = [
    -4,  -104,    -1,  -104,    -4,  -104,  -104,  -104,    -5,  -104,
   -17,   248,  -104,  -104,  -104,  -104,  -102,   -45,   -47,   -48,
   -49,  -104,  -104,  -104,   -53,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,   -80,  -104,  -104,  -104,   -99,  -100,  -101,  -103,
   -14,  -104,    -3,  -104,  -104,  -104,   -18,   -19,  -104,   -46,
  -104,  -104,   -56,   -57,   -58,   -60,  -104,  -104,   -54,   -55,
  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -102,  -104,
  -104,  -104,   -88,   -89,  -104,  -104,  -104,    -2,  -104,  -104,
  -104,   -20,  -104,   -24,   -50,   -51,  -104,   -52,   -81,   -82,
   -83,   -84,   -85,   -86,   -87,   -91,   -92,   -93,   -94,   -95,
   -96,   -97,   -98,  -104,   -62,   -63,  -104,   -77,   -78,   -43,
  -104,   -43,   -43,   -90,   -26,   -15,    -7,  -104,  -104,   -10,
   -21,   -22,  -104,   -59,   -61,   -76,  -104,   -44,  -104,  -104,
  -104,  -104,  -104,  -104,   -14,  -104,    -9,   -23,   -24,   -25,
   -79,  -104,  -104,  -104,  -104,   -43,   -28,   -27,   -16,    -8,
   -64,   -70,   -66,   -72,  -104,  -104,  -104,  -104,   -29,   -30,
   -32,  -104,   -35,   -36,  -104,  -104,  -104,   -40,  -104,  -104,
  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
  -104,   -31,  -104,  -104,  -104,  -104,  -104,   -41,   -42,  -104,
  -104,  -104,  -104,   -43,   -71,   -73,    -6,  -104,   -28,  -104,
   -33,   -34,   -37,   -38,   -39,   -28,  -104,   -28,   -28,  -104,
   -11,  -104,   -13,  -104,  -104,  -104,  -104,  -104,  -104,  -104,
  -104,  -104,  -104,   -28,   -65,   -12,   -67,   -70,   -69,   -74,
  -104,  -104,  -104,   -28,   -75,  -104,  -104,   -68 ]

racc_goto_table = [
    52,    52,    86,    85,    91,   165,    77,    44,    80,    81,
    92,    82,    83,    84,   184,    51,    57,   113,    12,   138,
   116,   140,   141,    54,    54,    43,     3,   142,    49,   188,
     8,     2,   191,     1,   nil,   nil,   nil,   nil,    98,    99,
   100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
   110,   111,   112,   114,   118,   164,   nil,   221,   nil,   nil,
   nil,     9,   nil,   nil,   223,   nil,   225,   226,   nil,   nil,
   nil,   nil,   nil,   nil,    52,   nil,   115,    50,    56,    56,
   150,   nil,   240,   130,   nil,    79,   nil,   nil,   nil,   133,
   241,   nil,   245,   nil,   149,   nil,   nil,    54,   139,   nil,
   127,   nil,   nil,   219,    93,   157,    86,   158,   nil,   nil,
   nil,   nil,   172,   nil,   118,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   172,   147,   nil,   172,   nil,   nil,   nil,   nil,
   161,    56,   nil,   nil,   179,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   125,   nil,   179,   nil,   nil,   179,   nil,   193,
   nil,   nil,    56,    52,    52,   nil,   nil,   178,   199,   189,
   201,   202,   nil,   204,   172,   nil,   nil,   178,   195,   196,
   178,   172,   192,   172,   172,   nil,    54,    54,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   179,   nil,   148,   172,
   nil,   nil,   nil,   179,   224,   179,   179,   nil,   nil,   172,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   237,   178,
   nil,   179,   nil,   nil,   nil,   nil,   178,   nil,   178,   178,
   nil,   179,   nil,   nil,   nil,   nil,   nil,    56,   nil,   nil,
   194,    56,    56,   nil,   178,   nil,   nil,   200,   nil,   nil,
   nil,   nil,   nil,   nil,   178 ]

racc_goto_check = [
    19,    19,    14,     7,    15,     9,    19,    11,    19,    19,
    16,    19,    19,    19,    29,    21,    21,    28,     4,    23,
    30,    23,    23,    18,    18,     4,     3,     8,     4,    13,
     3,     2,    13,     1,   nil,   nil,   nil,   nil,    19,    19,
    19,    19,    19,    19,    19,    19,    19,    19,    19,    19,
    19,    19,    19,    19,    19,    23,   nil,     9,   nil,   nil,
   nil,     6,   nil,   nil,     9,   nil,     9,     9,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,    18,     6,     6,     6,
    30,   nil,     9,    11,   nil,     6,   nil,   nil,   nil,    21,
    29,   nil,     9,   nil,    16,   nil,   nil,    18,    19,   nil,
     4,   nil,   nil,    23,     6,    14,    14,     7,   nil,   nil,
   nil,   nil,    15,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,    11,   nil,    15,   nil,   nil,   nil,   nil,
    19,     6,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     6,   nil,    19,   nil,   nil,    19,   nil,    19,
   nil,   nil,     6,    19,    19,   nil,   nil,    18,    19,    11,
    19,    19,   nil,    19,    15,   nil,   nil,    18,    21,    21,
    18,    15,    18,    15,    15,   nil,    18,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,     6,    15,
   nil,   nil,   nil,    19,    19,    19,    19,   nil,   nil,    15,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,    18,
   nil,    19,   nil,   nil,   nil,   nil,    18,   nil,    18,    18,
   nil,    19,   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,
     6,     6,     6,   nil,    18,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,    18 ]

racc_goto_pointer = [
   nil,    33,    31,    26,    11,   nil,    56,   -37,   -97,  -151,
   nil,    -8,   nil,  -137,   -38,   -44,   -38,   nil,     1,   -22,
   nil,    -7,   nil,  -100,   nil,   nil,   nil,   nil,   -58,  -147,
   -56,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   137,     4,    27,   nil,   nil,   nil,
    18,   nil,   170,   168,    48,    19,   nil,   169,    25,    26,
   173,   nil,   177,   nil,    17,    20,    24,    53,   nil,   nil,
   nil,    32,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  5, 56, :_reduce_2,
  4, 56, :_reduce_3,
  0, 57, :_reduce_none,
  2, 57, :_reduce_5,
  10, 59, :_reduce_6,
  4, 64, :_reduce_7,
  6, 64, :_reduce_8,
  5, 64, :_reduce_9,
  4, 64, :_reduce_10,
  4, 66, :_reduce_11,
  6, 66, :_reduce_12,
  4, 66, :_reduce_13,
  0, 61, :_reduce_none,
  2, 61, :_reduce_15,
  4, 61, :_reduce_16,
  1, 60, :_reduce_17,
  1, 68, :_reduce_18,
  1, 68, :_reduce_19,
  2, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  4, 65, :_reduce_23,
  1, 70, :_reduce_24,
  3, 70, :_reduce_25,
  0, 62, :_reduce_none,
  2, 62, :_reduce_27,
  0, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 67, :_reduce_30,
  2, 67, :_reduce_31,
  1, 71, :_reduce_32,
  3, 71, :_reduce_33,
  3, 71, :_reduce_34,
  1, 71, :_reduce_35,
  1, 71, :_reduce_36,
  3, 71, :_reduce_37,
  3, 71, :_reduce_38,
  3, 71, :_reduce_39,
  1, 71, :_reduce_40,
  2, 71, :_reduce_41,
  2, 71, :_reduce_42,
  0, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 58, :_reduce_45,
  2, 58, :_reduce_46,
  1, 78, :_reduce_47,
  1, 78, :_reduce_48,
  1, 78, :_reduce_49,
  3, 78, :_reduce_50,
  3, 78, :_reduce_51,
  3, 78, :_reduce_52,
  1, 78, :_reduce_53,
  2, 78, :_reduce_54,
  2, 78, :_reduce_55,
  1, 75, :_reduce_56,
  1, 75, :_reduce_57,
  1, 75, :_reduce_58,
  3, 75, :_reduce_59,
  1, 81, :_reduce_60,
  4, 69, :_reduce_61,
  1, 82, :_reduce_62,
  1, 82, :_reduce_63,
  6, 79, :_reduce_64,
  11, 79, :_reduce_65,
  6, 79, :_reduce_66,
  6, 74, :_reduce_67,
  11, 74, :_reduce_68,
  6, 74, :_reduce_69,
  0, 83, :_reduce_none,
  2, 83, :_reduce_71,
  6, 80, :_reduce_72,
  8, 80, :_reduce_73,
  6, 76, :_reduce_74,
  8, 76, :_reduce_75,
  4, 72, :_reduce_76,
  3, 72, :_reduce_77,
  1, 84, :_reduce_78,
  3, 84, :_reduce_79,
  1, 73, :_reduce_none,
  3, 73, :_reduce_81,
  3, 73, :_reduce_82,
  3, 73, :_reduce_83,
  3, 73, :_reduce_84,
  3, 73, :_reduce_85,
  3, 73, :_reduce_86,
  3, 73, :_reduce_87,
  2, 73, :_reduce_88,
  2, 73, :_reduce_89,
  3, 73, :_reduce_90,
  3, 73, :_reduce_91,
  3, 73, :_reduce_92,
  3, 73, :_reduce_93,
  3, 73, :_reduce_94,
  3, 73, :_reduce_95,
  3, 73, :_reduce_96,
  3, 73, :_reduce_97,
  3, 73, :_reduce_98,
  1, 86, :_reduce_99,
  1, 86, :_reduce_100,
  1, 85, :_reduce_101,
  1, 85, :_reduce_102,
  1, 85, :_reduce_none ]

racc_reduce_n = 104

racc_shift_n = 248

racc_token_table = {
  false => 0,
  :error => 1,
  :DIGIT => 2,
  :PLUS => 3,
  :LESS => 4,
  :MULT => 5,
  :DIV2 => 6,
  :LPARENT => 7,
  :RPARENT => 8,
  :TYPEN => 9,
  :TYPEB => 10,
  :TRUE => 11,
  :FALSE => 12,
  :AND => 13,
  :NOT => 14,
  :OR => 15,
  :PROGRAM => 16,
  :BEGIN => 17,
  :END => 18,
  :WITH => 19,
  :DO => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :WHILE => 24,
  :FOR => 25,
  :REPEAT => 26,
  :TIMES => 27,
  :READ => 28,
  :WRITE => 29,
  :WRITELN => 30,
  :FROM => 31,
  :TO => 32,
  :BY => 33,
  :FUNC => 34,
  :RETURN => 35,
  :RETURN2 => 36,
  :EQUIVALENT => 37,
  :LESSTHAN => 38,
  :DISTINCT => 39,
  :GETHAN => 40,
  :LETHAN => 41,
  :GREATTHAN => 42,
  :EQUAL => 43,
  :SEMICOLON => 44,
  :MOD => 45,
  :DIV => 46,
  :MOD2 => 47,
  :ID => 48,
  :STRING => 49,
  :LCURLY => 50,
  :RCURLY => 51,
  :COLON => 52,
  :UMINUS => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DIGIT",
  "PLUS",
  "LESS",
  "MULT",
  "DIV2",
  "LPARENT",
  "RPARENT",
  "TYPEN",
  "TYPEB",
  "TRUE",
  "FALSE",
  "AND",
  "NOT",
  "OR",
  "PROGRAM",
  "BEGIN",
  "END",
  "WITH",
  "DO",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURN2",
  "EQUIVALENT",
  "LESSTHAN",
  "DISTINCT",
  "GETHAN",
  "LETHAN",
  "GREATTHAN",
  "EQUAL",
  "SEMICOLON",
  "MOD",
  "DIV",
  "MOD2",
  "ID",
  "STRING",
  "LCURLY",
  "RCURLY",
  "COLON",
  "UMINUS",
  "$start",
  "S",
  "Scope",
  "Listfunciones",
  "LInst",
  "funciones",
  "Var",
  "ListD",
  "Retorno",
  "funcInst",
  "wis",
  "Ldecl",
  "wisf",
  "LInstf",
  "type",
  "Assign",
  "ListID",
  "Instf",
  "Call",
  "Expr",
  "IteratorF",
  "writable",
  "CondF",
  "LInstruc",
  "Inst",
  "Iterator",
  "Cond",
  "Str",
  "Asignable",
  "by",
  "ListParam",
  "Term",
  "Bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_1(val, _values, result)
    result = S.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 48)
  def _reduce_2(val, _values, result)
    result = Scope.new(:Funciones,val[0],:Program,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 49)
  def _reduce_3(val, _values, result)
    result = Scope.new(:Funciones,val[0],nil,nil)
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'retina_parser.y', 54)
  def _reduce_5(val, _values, result)
    result=ListaFunc.new(:Funcion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 58)
  def _reduce_6(val, _values, result)
    result=Func.new(:Nombre_Funcion,val[1],:Parametros,val[3],:Tipo_Retorno,val[5],:Instrucciones,val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 62)
  def _reduce_7(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 63)
  def _reduce_8(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 64)
  def _reduce_9(val, _values, result)
    result=Bloque.new(:declaraciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 65)
  def _reduce_10(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 69)
  def _reduce_11(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_12(val, _values, result)
    result=Bloque.new(:declaraciones,val[1],:instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 71)
  def _reduce_13(val, _values, result)
    result=Bloque.new(:declaraciones,nil,:instrucciones,nil)
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_15(val, _values, result)
    result=ListD.new(:tipos,val[0],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 77)
  def _reduce_16(val, _values, result)
    result=List.new(:tipos,val[0],val[3],:identificadores,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_17(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_18(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_19(val, _values, result)
    result=Type.new(:Tipo,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_20(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_21(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:asignacion,val[1],:declaracion,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_22(val, _values, result)
    result=Ldecl.new(:declaracion,:tipo,val[0],:Lista_ID,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 93)
  def _reduce_23(val, _values, result)
    result=Ldecl.new(:Lista_Decl,:tipo,val[0],:Lista_ID,val[1],:declaracion,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_24(val, _values, result)
    result=ListID.new(:ID,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_25(val, _values, result)
    result=ListID.new(:ID,val[0],val[2])
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_27(val, _values, result)
    result=Retorno.new(:tipo,val[1])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_30(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_31(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_32(val, _values, result)
    result=InstWisf.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_33(val, _values, result)
    result=InstReturn.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_34(val, _values, result)
    result=InstReturn_call.new(:Retorno,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_35(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_36(val, _values, result)
    result=InstIteratorF.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_37(val, _values, result)
    result=InstRead.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_38(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_39(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_40(val, _values, result)
    result=InstCondF.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_41(val, _values, result)
    result=InstCall.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_42(val, _values, result)
    result=InstExpr.new(:Expresion,val[0])
    result
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_45(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_46(val, _values, result)
    result=ListaInst.new(:Instruccion,val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_47(val, _values, result)
    result=InstWis.new(:Bloque,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_48(val, _values, result)
    result=InstAsign.new(:Asignacion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_49(val, _values, result)
    result=Inst.new(:Iteracion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_50(val, _values, result)
    result=Inst.new(:Lectura,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_51(val, _values, result)
    result=Write.new(:Salida,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_52(val, _values, result)
    result=Write.new(:Salida_Con_Salto,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_53(val, _values, result)
    result=Inst.new(:Condicional,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_54(val, _values, result)
    result=Inst.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_55(val, _values, result)
    result=Inst.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_56(val, _values, result)
    result=Writable.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_57(val, _values, result)
    result=Writable.new(:String,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_58(val, _values, result)
    result=Writable.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_59(val, _values, result)
    result=Writable.new(:valor,val[0],:valor,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 162)
  def _reduce_60(val, _values, result)
    result=Str.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_61(val, _values, result)
    result=Assign.new(:Lado_Izquierdo,val[0],:Lado_Derecho,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_62(val, _values, result)
    result=Asignable_Expr.new(:Expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_63(val, _values, result)
    result=Asignable_Call.new(:Llamada_de_Funcion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 175)
  def _reduce_64(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 176)
  def _reduce_65(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_66(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_67(val, _values, result)
    result=WLoop.new(:Ciclo_While,:Condicion,val[1],:Do,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_68(val, _values, result)
    result= FLoop.new(:Ciclo_For,:For,val[1],:From,val[3],:To,val[5],:By,val[6],:Instrucciones,val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_69(val, _values, result)
    result=RLoop.new(:Ciclo_Repeat,:Times,val[1],:Instrucciones,val[3])
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'retina_parser.y', 188)
  def _reduce_71(val, _values, result)
    result=By.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 192)
  def _reduce_72(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 193)
  def _reduce_73(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 197)
  def _reduce_74(val, _values, result)
    result=Cond.new(:Condición,val[1],:Instrucciones,val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 198)
  def _reduce_75(val, _values, result)
    result=Cond.new(:Condicion,val[1],:Instrucciones,val[3],:Instrucciones_Else,val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 202)
  def _reduce_76(val, _values, result)
    result=Call.new(:nombre,val[0],:argumentos,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 203)
  def _reduce_77(val, _values, result)
    result=Call.new(:nombre,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 207)
  def _reduce_78(val, _values, result)
    result=ListParam.new(:expresion,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 208)
  def _reduce_79(val, _values, result)
    result=ListParam.new(:expresion,val[0],val[2])
    result
  end
.,.,

# reduce 80 omitted

module_eval(<<'.,.,', 'retina_parser.y', 218)
  def _reduce_81(val, _values, result)
    result = BinExpSuma.new(:Suma, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 219)
  def _reduce_82(val, _values, result)
    result = BinExpResta.new(:Resta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 220)
  def _reduce_83(val, _values, result)
    result = BinExpMult.new(:Multiplicacion, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 221)
  def _reduce_84(val, _values, result)
    result = BinExpDiv2.new(:Division_Exacta, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 222)
  def _reduce_85(val, _values, result)
    result = BinExpMod2.new(:Resto_Exacto, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 223)
  def _reduce_86(val, _values, result)
    result = BinExpDiv.new(:Division_Entera, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 224)
  def _reduce_87(val, _values, result)
    result = BinExpMod.new(:Resto_Entero, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 225)
  def _reduce_88(val, _values, result)
    result = UnaExp.new(:Inverso_Aditivo , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 226)
  def _reduce_89(val, _values, result)
    result = UnaExp.new(:Negacion , val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 227)
  def _reduce_90(val, _values, result)
    result = ParExp.new(:Expresion, val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 228)
  def _reduce_91(val, _values, result)
    result = BinExpOr.new(:Or , val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 229)
  def _reduce_92(val, _values, result)
    result = BinExpAnd.new(:And, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 230)
  def _reduce_93(val, _values, result)
    result = BinExpLT.new(:Menor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 231)
  def _reduce_94(val, _values, result)
    result = BinExpGT.new(:Mayor_que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 232)
  def _reduce_95(val, _values, result)
    result = BinExpLET.new(:Menor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 233)
  def _reduce_96(val, _values, result)
    result = BinExpGET.new(:Mayor_O_Igual_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_97(val, _values, result)
    result = BinExpDist.new(:Distinto_Que, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 235)
  def _reduce_98(val, _values, result)
    result = BinExpEQ.new(:Equivalencia,val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 241)
  def _reduce_99(val, _values, result)
    result = Terms.new(:TRUE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 242)
  def _reduce_100(val, _values, result)
    result = Terms.new(:FALSE , val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 246)
  def _reduce_101(val, _values, result)
    result= Terms.new(:DIGIT,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 247)
  def _reduce_102(val, _values, result)
    result = Terms.new(:ID , val[0])
    result
  end
.,.,

# reduce 103 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
